{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "auctionHouse_",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "permissions_",
          "type": "tuple",
          "internalType": "struct Callbacks.Permissions",
          "components": [
            {
              "name": "onCreate",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "onCancel",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "onCurate",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "onPurchase",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "onBid",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "onSettle",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "receiveQuoteTokens",
              "type": "bool",
              "internalType": "bool"
            },
            {
              "name": "sendBaseTokens",
              "type": "bool",
              "internalType": "bool"
            }
          ]
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "AUCTION_HOUSE",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "lotBuyerSpent",
      "inputs": [
        {
          "name": "lotId",
          "type": "uint96",
          "internalType": "uint96"
        },
        {
          "name": "buyer",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "spent",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "lotIdRegistered",
      "inputs": [
        {
          "name": "",
          "type": "uint96",
          "internalType": "uint96"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "lotMerkleRoot",
      "inputs": [
        {
          "name": "lotId",
          "type": "uint96",
          "internalType": "uint96"
        }
      ],
      "outputs": [
        {
          "name": "merkleRoot",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "onBid",
      "inputs": [
        {
          "name": "lotId_",
          "type": "uint96",
          "internalType": "uint96"
        },
        {
          "name": "bidId",
          "type": "uint64",
          "internalType": "uint64"
        },
        {
          "name": "buyer_",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "amount_",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "callbackData_",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes4",
          "internalType": "bytes4"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "onCancel",
      "inputs": [
        {
          "name": "lotId_",
          "type": "uint96",
          "internalType": "uint96"
        },
        {
          "name": "refund_",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "prefunded_",
          "type": "bool",
          "internalType": "bool"
        },
        {
          "name": "callbackData_",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes4",
          "internalType": "bytes4"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "onCreate",
      "inputs": [
        {
          "name": "lotId_",
          "type": "uint96",
          "internalType": "uint96"
        },
        {
          "name": "seller_",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "baseToken_",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "quoteToken_",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "capacity_",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "prefund_",
          "type": "bool",
          "internalType": "bool"
        },
        {
          "name": "callbackData_",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes4",
          "internalType": "bytes4"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "onCurate",
      "inputs": [
        {
          "name": "lotId_",
          "type": "uint96",
          "internalType": "uint96"
        },
        {
          "name": "curatorFee_",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "prefund_",
          "type": "bool",
          "internalType": "bool"
        },
        {
          "name": "callbackData_",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes4",
          "internalType": "bytes4"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "onPurchase",
      "inputs": [
        {
          "name": "lotId_",
          "type": "uint96",
          "internalType": "uint96"
        },
        {
          "name": "buyer_",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "amount_",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "payout_",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "prefunded_",
          "type": "bool",
          "internalType": "bool"
        },
        {
          "name": "callbackData_",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes4",
          "internalType": "bytes4"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "onSettle",
      "inputs": [
        {
          "name": "lotId_",
          "type": "uint96",
          "internalType": "uint96"
        },
        {
          "name": "proceeds_",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "refund_",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "callbackData_",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes4",
          "internalType": "bytes4"
        }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setMerkleRoot",
      "inputs": [
        {
          "name": "lotId_",
          "type": "uint96",
          "internalType": "uint96"
        },
        {
          "name": "merkleRoot_",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "event",
      "name": "MerkleRootSet",
      "inputs": [
        {
          "name": "lotId",
          "type": "uint96",
          "indexed": false,
          "internalType": "uint96"
        },
        {
          "name": "merkleRoot",
          "type": "bytes32",
          "indexed": false,
          "internalType": "bytes32"
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "Callback_ExceedsLimit",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Callback_InvalidParams",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Callback_NotAuthorized",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Callback_NotImplemented",
      "inputs": []
    },
    {
      "type": "error",
      "name": "CallbacksAddressNotValid",
      "inputs": [
        {
          "name": "callbacks",
          "type": "address",
          "internalType": "address"
        }
      ]
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "625:3157:129:-:0;;;1371:147;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1487:13;1502:12;1487:13;1502:12;1095:58:128;1134:4;1502:12:129;1095:38:128;:58::i;:::-;-1:-1:-1;;;;;;1197:29:128;;;-1:-1:-1;625:3157:129;;-1:-1:-1;;;625:3157:129;2332:873:153;2481:20;;:58;;-1:-1:-1;;;8425:38:153;;:43;;2481:58;;;:136;;-1:-1:-1;2559:20:153;;;;:58;;-1:-1:-1;;;8425:38:153;;:43;;2559:58;;2481:136;:214;;;-1:-1:-1;2637:20:153;;;;:58;;-1:-1:-1;;;8425:38:153;;:43;;2637:58;;2481:214;:296;;;-1:-1:-1;2715:22:153;;;;:62;;-1:-1:-1;;;8425:38:153;;:43;;2715:62;;2481:296;:368;;;-1:-1:-1;2797:17:153;;;;:52;;-1:-1:-1;;;8425:38:153;;:43;;2797:52;;2481:368;:446;;;-1:-1:-1;2869:20:153;;;;:58;;-1:-1:-1;;;8425:38:153;;:43;;2869:58;;2481:446;:545;;;-1:-1:-1;2947:30:153;;;;:79;;-1:-1:-1;;;8425:38:153;;:43;;2947:79;;2481:545;:636;;;-1:-1:-1;3046:26:153;;;;:71;;-1:-1:-1;;;8425:38:153;;:43;;3046:71;;2481:636;2464:735;;;3149:39;;-1:-1:-1;;;3149:39:153;;-1:-1:-1;;;;;1753:32:264;;3149:39:153;;;1735:51:264;1708:18;;3149:39:153;;;;;;;2464:735;2332:873;;:::o;14:164:264:-;90:13;;139;;132:21;122:32;;112:60;;168:1;165;158:12;112:60;14:164;;;:::o;183:1401::-;292:6;300;344:9;335:7;331:23;374:3;370:2;366:12;363:32;;;391:1;388;381:12;363:32;417:16;;-1:-1:-1;;;;;462:31:264;;452:42;;442:70;;508:1;505;498:12;442:70;531:5;-1:-1:-1;555:6:264;-1:-1:-1;;577:16:264;;573:25;-1:-1:-1;570:45:264;;;611:1;608;601:12;570:45;644:2;638:9;;-1:-1:-1;674:15:264;;;-1:-1:-1;;;;;704:34:264;;740:22;;;701:62;698:185;;;805:10;800:3;796:20;793:1;786:31;840:4;837:1;830:15;868:4;865:1;858:15;698:185;899:2;892:22;938:46;980:2;965:18;;938:46;:::i;:::-;930:6;923:62;1018:46;1060:2;1049:9;1045:18;1018:46;:::i;:::-;1013:2;1005:6;1001:15;994:71;1098:46;1140:2;1129:9;1125:18;1098:46;:::i;:::-;1093:2;1085:6;1081:15;1074:71;1178:47;1220:3;1209:9;1205:19;1178:47;:::i;:::-;1173:2;1165:6;1161:15;1154:72;1260:47;1302:3;1291:9;1287:19;1260:47;:::i;:::-;1254:3;1246:6;1242:16;1235:73;1342:47;1384:3;1373:9;1369:19;1342:47;:::i;:::-;1336:3;1328:6;1324:16;1317:73;1424:47;1466:3;1455:9;1451:19;1424:47;:::i;:::-;1418:3;1410:6;1406:16;1399:73;1506:46;1548:2;1537:9;1533:18;1506:46;:::i;:::-;1500:3;1492:6;1488:16;1481:72;;1572:6;1562:16;;;183:1401;;;;;:::o;1589:203::-;625:3157:129;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100a95760003560e01c806366e741671161007157806366e74167146101945780637008e731146101a7578063a5658c86146101d2578063a5b13f69146101e5578063b898895e146101f8578063fc4399821461020b57600080fd5b806309b9601c146100ae578063191e581e146100df5780631cae9eef146100f45780634226b1bf146101275780636003a35314610166575b600080fd5b6100c16100bc366004610ad3565b61021e565b6040516001600160e01b031990911681526020015b60405180910390f35b6100f26100ed366004610b44565b6102c4565b005b610117610102366004610b6e565b60006020819052908152604090205460ff1681565b60405190151581526020016100d6565b61014e7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100d6565b610186610174366004610b6e565b60016020526000908152604090205481565b6040519081526020016100d6565b6100c16101a2366004610b9e565b61042d565b6101866101b5366004610c46565b600260209081526000928352604080842090915290825290205481565b6100c16101e0366004610ad3565b6104fa565b6100c16101f3366004610c7d565b6105a0565b6100c1610206366004610cc8565b610646565b6100c1610219366004610d56565b6106ee565b6000336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461026957604051630d0ec32b60e31b815260040160405180910390fd5b6001600160601b038616600090815260208190526040902054869060ff166102a457604051630d0ec32b60e31b815260040160405180910390fd5b6102b18787878787610798565b5063026e580760e21b9695505050505050565b6001600160601b038216600090815260208190526040902054829060ff166102ff57604051630d0ec32b60e31b815260040160405180910390fd5b604051634f17001d60e11b81526001600160601b03841660048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690639e2e003a90602401600060405180830381865afa15801561036f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103979190810190610e42565b50505050505050509050806001600160a01b0316336001600160a01b0316146103d357604051630d0ec32b60e31b815260040160405180910390fd5b6001600160601b038416600081815260016020908152604091829020869055815192835282018590527fdbc2d92066ee79fd64220430986d0e862a9224763dc143bdc4809fb5d7183102910160405180910390a150505050565b6000336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461047857604051630d0ec32b60e31b815260040160405180910390fd5b6001600160601b03891660009081526020819052604090205460ff16156104b2576040516363d2088f60e11b815260040160405180910390fd5b6001600160601b0389166000908152602081905260409020805460ff191660011790556104e589898989898989896107b1565b506366e7416760e01b98975050505050505050565b6000336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461054557604051630d0ec32b60e31b815260040160405180910390fd5b6001600160601b038616600090815260208190526040902054869060ff1661058057604051630d0ec32b60e31b815260040160405180910390fd5b61058d8787878787610798565b506352b2c64360e11b9695505050505050565b6000336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105eb57604051630d0ec32b60e31b815260040160405180910390fd5b6001600160601b038616600090815260208190526040902054869060ff1661062657604051630d0ec32b60e31b815260040160405180910390fd5b6106338787878787610798565b5063a5b13f6960e01b9695505050505050565b6000336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461069157604051630d0ec32b60e31b815260040160405180910390fd5b6001600160601b038716600090815260208190526040902054879060ff166106cc57604051630d0ec32b60e31b815260040160405180910390fd5b6106da888888888888610842565b50635c4c44af60e11b979650505050505050565b6000336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461073957604051630d0ec32b60e31b815260040160405180910390fd5b6001600160601b038816600090815260208190526040902054889060ff1661077457604051630d0ec32b60e31b815260040160405180910390fd5b61078389898989898989610857565b50637e21ccc160e11b98975050505050505050565b604051638a8cacbf60e01b815260040160405180910390fd5b602081146107d2576040516363d2088f60e11b815260040160405180910390fd5b60006107e082840184610f7b565b6001600160601b038a16600081815260016020908152604091829020849055815192835282018390529192507fdbc2d92066ee79fd64220430986d0e862a9224763dc143bdc4809fb5d7183102910160405180910390a1505050505050505050565b61084f868585858561086d565b505050505050565b610864878787858561086d565b50505050505050565b60008061087c83850185610f94565b604080516001600160a01b038a166020820152908101829052919350915060009060600160408051601f198184030181528282528051602091820120908301520160405160208183030381529060405280519060200120905061090583600160008b6001600160601b03166001600160601b0316815260200190815260200160002054836109c6565b61092257604051630d0ec32b60e31b815260040160405180910390fd5b6001600160601b03881660009081526002602090815260408083206001600160a01b038b168452909152902054829061095c908890611056565b111561097b5760405163330d6d0160e11b815260040160405180910390fd5b6001600160601b03881660009081526002602090815260408083206001600160a01b038b168452909152812080548892906109b7908490611056565b90915550505050505050505050565b6000826109d385846109dc565b14949350505050565b600081815b8451811015610a2157610a0d82868381518110610a0057610a00611069565b6020026020010151610a2b565b915080610a198161107f565b9150506109e1565b5090505b92915050565b6000818310610a47576000828152602084905260409020610a56565b60008381526020839052604090205b9392505050565b80356001600160601b0381168114610a7457600080fd5b919050565b8015158114610a8757600080fd5b50565b60008083601f840112610a9c57600080fd5b50813567ffffffffffffffff811115610ab457600080fd5b602083019150836020828501011115610acc57600080fd5b9250929050565b600080600080600060808688031215610aeb57600080fd5b610af486610a5d565b9450602086013593506040860135610b0b81610a79565b9250606086013567ffffffffffffffff811115610b2757600080fd5b610b3388828901610a8a565b969995985093965092949392505050565b60008060408385031215610b5757600080fd5b610b6083610a5d565b946020939093013593505050565b600060208284031215610b8057600080fd5b610a5682610a5d565b6001600160a01b0381168114610a8757600080fd5b60008060008060008060008060e0898b031215610bba57600080fd5b610bc389610a5d565b97506020890135610bd381610b89565b96506040890135610be381610b89565b95506060890135610bf381610b89565b94506080890135935060a0890135610c0a81610a79565b925060c089013567ffffffffffffffff811115610c2657600080fd5b610c328b828c01610a8a565b999c989b5096995094979396929594505050565b60008060408385031215610c5957600080fd5b610c6283610a5d565b91506020830135610c7281610b89565b809150509250929050565b600080600080600060808688031215610c9557600080fd5b610c9e86610a5d565b94506020860135935060408601359250606086013567ffffffffffffffff811115610b2757600080fd5b60008060008060008060a08789031215610ce157600080fd5b610cea87610a5d565b9550602087013567ffffffffffffffff8082168214610d0857600080fd5b909550604088013590610d1a82610b89565b9094506060880135935060808801359080821115610d3757600080fd5b50610d4489828a01610a8a565b979a9699509497509295939492505050565b600080600080600080600060c0888a031215610d7157600080fd5b610d7a88610a5d565b96506020880135610d8a81610b89565b955060408801359450606088013593506080880135610da881610a79565b925060a088013567ffffffffffffffff811115610dc457600080fd5b610dd08a828b01610a8a565b989b979a50959850939692959293505050565b80516001600160c81b031981168114610a7457600080fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610e3a57610e3a610dfb565b604052919050565b60008060008060008060008060006101208a8c031215610e6157600080fd5b8951610e6c81610b89565b809950506020808b0151610e7f81610b89565b60408c0151909950610e9081610b89565b9750610e9e60608c01610de3565b965060808b0151955060a08b0151610eb581610b89565b9450610ec360c08c01610de3565b935060e08b0151610ed381610a79565b6101008c015190935067ffffffffffffffff80821115610ef257600080fd5b818d0191508d601f830112610f0657600080fd5b815181811115610f1857610f18610dfb565b610f2a601f8201601f19168501610e11565b91508082528e84828501011115610f4057600080fd5b60005b81811015610f5e578381018501518382018601528401610f43565b506000848284010152508093505050509295985092959850929598565b600060208284031215610f8d57600080fd5b5035919050565b60008060408385031215610fa757600080fd5b823567ffffffffffffffff80821115610fbf57600080fd5b818501915085601f830112610fd357600080fd5b8135602082821115610fe757610fe7610dfb565b8160051b9250610ff8818401610e11565b828152928401810192818101908985111561101257600080fd5b948201945b8486101561103057853582529482019490820190611017565b9997909101359750505050505050565b634e487b7160e01b600052601160045260246000fd5b80820180821115610a2557610a25611040565b634e487b7160e01b600052603260045260246000fd5b60006001820161109157611091611040565b506001019056fea2646970667358221220dc790191c594d0c75648216a2dc1fb9ca3453536168a31759359333ac80e7b8364736f6c63430008130033",
    "sourceMap": "625:3157:129:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3313:486:128;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;;1519:33:264;;;1501:52;;1489:2;1474:18;3313:486:128;;;;;;;;7769:543:131;;;;;;:::i;:::-;;:::i;:::-;;844:46:128;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;2175:14:264;;2168:22;2150:41;;2138:2;2123:18;844:46:128;2010:187:264;733:38:128;;;;;;;;-1:-1:-1;;;;;2366:32:264;;;2348:51;;2336:2;2321:18;733:38:128;2202:203:264;1173:64:131;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2556:25:264;;;2544:2;2529:18;1173:64:131;2410:177:264;1627:763:128;;;;;;:::i;:::-;;:::i;968:85:129:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;2667:451:128;;;;;;:::i;:::-;;:::i;5332:370::-;;;;;;:::i;:::-;;:::i;4765:384::-;;;;;;:::i;:::-;;:::i;3996:523::-;;;;;;:::i;:::-;;:::i;3313:486::-;3520:6;1324:10;-1:-1:-1;;;;;1338:13:128;1324:27;;1320:64;;1360:24;;-1:-1:-1;;;1360:24:128;;;;;;;;;;;1320:64;-1:-1:-1;;;;;1465:23:128;::::1;:15;:23:::0;;;::::1;::::0;;;;;;;3503:6;;1465:23:::1;;1460:61;;1497:24;;-1:-1:-1::0;;;1497:24:128::1;;;;;;;;;;;1460:61;3697:55:::2;3707:6;3715:11;3728:8;3738:13;;3697:9;:55::i;:::-;-1:-1:-1::0;;;;3770:22:128;3313:486;-1:-1:-1;;;;;;3313:486:128:o;7769:543:131:-;-1:-1:-1;;;;;1465:23:128;;:15;:23;;;;;;;;;;;7855:6:131;;1465:23:128;;1460:61;;1497:24;;-1:-1:-1;;;1497:24:128;;;;;;;;;;;1460:61;8018:47:131::1;::::0;-1:-1:-1;;;8018:47:131;;-1:-1:-1;;;;;6898:39:264;;8018:47:131::1;::::0;::::1;6880:58:264::0;7992:14:131::1;::::0;8032:13:::1;-1:-1:-1::0;;;;;8018:39:131::1;::::0;::::1;::::0;6853:18:264;;8018:47:131::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;-1:-1:-1::0;;8018:47:131::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;7991:74;;;;;;;;;;8093:6;-1:-1:-1::0;;;;;8079:20:131::1;:10;-1:-1:-1::0;;;;;8079:20:131::1;;8075:82;;8122:24;;-1:-1:-1::0;;;8122:24:131::1;;;;;;;;;;;8075:82;-1:-1:-1::0;;;;;8220:21:131;::::1;;::::0;;;:13:::1;:21;::::0;;;;;;;;:35;;;8271:34;;9624:58:264;;;9698:18;;9691:34;;;8271::131::1;::::0;9597:18:264;8271:34:131::1;;;;;;;7863:449;7769:543:::0;;;:::o;1627:763:128:-;1888:6;1324:10;-1:-1:-1;;;;;1338:13:128;1324:27;;1320:64;;1360:24;;-1:-1:-1;;;1360:24:128;;;;;;;;;;;1320:64;-1:-1:-1;;;;;1951:23:128;::::1;:15;:23:::0;;;::::1;::::0;;;;;;;::::1;;1947:60;;;1983:24;;-1:-1:-1::0;;;1983:24:128::1;;;;;;;;;;;1947:60;-1:-1:-1::0;;;;;2058:23:128;::::1;:15;:23:::0;;;::::1;::::0;;;;;;:30;;-1:-1:-1;;2058:30:128::1;2084:4;2058:30;::::0;;2256:87:::1;2074:6:::0;2274:7;2283:10;2295:11;2308:9;2319:8;2329:13;;2256:9:::1;:87::i;:::-;-1:-1:-1::0;;;;1627:763:128;;;;;;;;;;:::o;2667:451::-;2872:6;1324:10;-1:-1:-1;;;;;1338:13:128;1324:27;;1320:64;;1360:24;;-1:-1:-1;;;1360:24:128;;;;;;;;;;;1320:64;-1:-1:-1;;;;;1465:23:128;::::1;:15;:23:::0;;;::::1;::::0;;;;;;;2855:6;;1465:23:::1;;1460:61;;1497:24;;-1:-1:-1::0;;;1497:24:128::1;;;;;;;;;;;1460:61;3018:53:::2;3028:6;3036:7;3045:10;3057:13;;3018:9;:53::i;:::-;-1:-1:-1::0;;;;3089:22:128;2667:451;-1:-1:-1;;;;;;2667:451:128:o;5332:370::-;5539:6;1324:10;-1:-1:-1;;;;;1338:13:128;1324:27;;1320:64;;1360:24;;-1:-1:-1;;;1360:24:128;;;;;;;;;;;1320:64;-1:-1:-1;;;;;1465:23:128;::::1;:15;:23:::0;;;::::1;::::0;;;;;;;5522:6;;1465:23:::1;;1460:61;;1497:24;;-1:-1:-1::0;;;1497:24:128::1;;;;;;;;;;;1460:61;5603:52:::2;5613:6;5621:9;5632:7;5641:13;;5603:9;:52::i;:::-;-1:-1:-1::0;;;;5673:22:128;5332:370;-1:-1:-1;;;;;;5332:370:128:o;4765:384::-;4988:6;1324:10;-1:-1:-1;;;;;1338:13:128;1324:27;;1320:64;;1360:24;;-1:-1:-1;;;1360:24:128;;;;;;;;;;;1320:64;-1:-1:-1;;;;;1465:23:128;::::1;:15;:23:::0;;;::::1;::::0;;;;;;;4971:6;;1465:23:::1;;1460:61;;1497:24;;-1:-1:-1::0;;;1497:24:128::1;;;;;;;;;;;1460:61;5052:53:::2;5059:6;5067:5;5074:6;5082:7;5091:13;;5052:6;:53::i;:::-;-1:-1:-1::0;;;;5123:19:128;4765:384;-1:-1:-1;;;;;;;4765:384:128:o;3996:523::-;4252:6;1324:10;-1:-1:-1;;;;;1338:13:128;1324:27;;1320:64;;1360:24;;-1:-1:-1;;;1360:24:128;;;;;;;;;;;1320:64;-1:-1:-1;;;;;1465:23:128;::::1;:15;:23:::0;;;::::1;::::0;;;;;;;4235:6;;1465:23:::1;;1460:61;;1497:24;;-1:-1:-1::0;;;1497:24:128::1;;;;;;;;;;;1460:61;4398:72:::2;4410:6;4418;4426:7;4435;4444:10;4456:13;;4398:11;:72::i;:::-;-1:-1:-1::0;;;;4488:24:128;3996:523;-1:-1:-1;;;;;;;;3996:523:128:o;3181:157:131:-;3306:25;;-1:-1:-1;;;3306:25:131;;;;;;;;;;;2264:610;2559:2;2535:26;;2531:88;;2584:24;;-1:-1:-1;;;2584:24:131;;;;;;;;;;;2531:88;2686:18;2707:36;;;;2718:13;2707:36;:::i;:::-;-1:-1:-1;;;;;2785:21:131;;;;;;:13;:21;;;;;;;;;:34;;;2834:33;;9624:58:264;;;9698:18;;9691:34;;;2785::131;;-1:-1:-1;2834:33:131;;9597:18:264;2834:33:131;;;;;;;2458:416;2264:610;;;;;;;;:::o;2439:229:129:-;2615:46;2622:6;2630;2638:7;2647:13;;2615:6;:46::i;:::-;2439:229;;;;;;:::o;1886:249::-;2082:46;2089:6;2097;2105:7;2114:13;;2082:6;:46::i;:::-;1886:249;;;;;;;:::o;2726:1054::-;3031:22;;3094:47;;;;3105:13;3094:47;:::i;:::-;3238:35;;;-1:-1:-1;;;;;11134:32:264;;3238:35:129;;;11116:51:264;11183:18;;;11176:34;;;3030:111:129;;-1:-1:-1;3030:111:129;-1:-1:-1;3190:12:129;;11089:18:264;;3238:35:129;;;-1:-1:-1;;3238:35:129;;;;;;;;;3228:46;;3238:35;3228:46;;;;3215:60;;;11350:19:264;11385:12;3215:60:129;;;;;;;;;;;;3205:71;;;;;;3190:86;;3329:54;3348:5;3355:13;:21;3369:6;-1:-1:-1;;;;;3355:21:129;-1:-1:-1;;;;;3355:21:129;;;;;;;;;;;;;3378:4;3329:18;:54::i;:::-;3324:117;;3406:24;;-1:-1:-1;;;3406:24:129;;;;;;;;;;;3324:117;-1:-1:-1;;;;;3566:21:129;;;;;;:13;:21;;;;;;;;-1:-1:-1;;;;;3566:29:129;;;;;;;;;;3608:15;;3566:39;;3598:7;;3566:39;:::i;:::-;:57;3562:118;;;3646:23;;-1:-1:-1;;;3646:23:129;;;;;;;;;;;3562:118;-1:-1:-1;;;;;3733:21:129;;;;;;:13;:21;;;;;;;;-1:-1:-1;;;;;3733:29:129;;;;;;;;;:40;;3766:7;;3733:21;:40;;3766:7;;3733:40;:::i;:::-;;;;-1:-1:-1;;;;;;;;;;2726:1054:129:o;1265:154:49:-;1356:4;1408;1379:25;1392:5;1399:4;1379:12;:25::i;:::-;:33;;1265:154;-1:-1:-1;;;;1265:154:49:o;1967:290::-;2050:7;2092:4;2050:7;2106:116;2130:5;:12;2126:1;:16;2106:116;;;2178:33;2188:12;2202:5;2208:1;2202:8;;;;;;;;:::i;:::-;;;;;;;2178:9;:33::i;:::-;2163:48;-1:-1:-1;2144:3:49;;;;:::i;:::-;;;;2106:116;;;-1:-1:-1;2238:12:49;-1:-1:-1;1967:290:49;;;;;:::o;9156:147::-;9219:7;9249:1;9245;:5;:51;;9377:13;9468:15;;;9503:4;9496:15;;;9549:4;9533:21;;9245:51;;;9377:13;9468:15;;;9503:4;9496:15;;;9549:4;9533:21;;9253:20;9238:58;9156:147;-1:-1:-1;;;9156:147:49:o;14:179:264:-;81:20;;-1:-1:-1;;;;;130:38:264;;120:49;;110:77;;183:1;180;173:12;110:77;14:179;;;:::o;198:118::-;284:5;277:13;270:21;263:5;260:32;250:60;;306:1;303;296:12;250:60;198:118;:::o;321:347::-;372:8;382:6;436:3;429:4;421:6;417:17;413:27;403:55;;454:1;451;444:12;403:55;-1:-1:-1;477:20:264;;520:18;509:30;;506:50;;;552:1;549;542:12;506:50;589:4;581:6;577:17;565:29;;641:3;634:4;625:6;617;613:19;609:30;606:39;603:59;;;658:1;655;648:12;603:59;321:347;;;;;:::o;673:679::-;766:6;774;782;790;798;851:3;839:9;830:7;826:23;822:33;819:53;;;868:1;865;858:12;819:53;891:28;909:9;891:28;:::i;:::-;881:38;;966:2;955:9;951:18;938:32;928:42;;1020:2;1009:9;1005:18;992:32;1033:28;1055:5;1033:28;:::i;:::-;1080:5;-1:-1:-1;1136:2:264;1121:18;;1108:32;1163:18;1152:30;;1149:50;;;1195:1;1192;1185:12;1149:50;1234:58;1284:7;1275:6;1264:9;1260:22;1234:58;:::i;:::-;673:679;;;;-1:-1:-1;673:679:264;;-1:-1:-1;1311:8:264;;1208:84;673:679;-1:-1:-1;;;673:679:264:o;1564:252::-;1631:6;1639;1692:2;1680:9;1671:7;1667:23;1663:32;1660:52;;;1708:1;1705;1698:12;1660:52;1731:28;1749:9;1731:28;:::i;:::-;1721:38;1806:2;1791:18;;;;1778:32;;-1:-1:-1;;;1564:252:264:o;1821:184::-;1879:6;1932:2;1920:9;1911:7;1907:23;1903:32;1900:52;;;1948:1;1945;1938:12;1900:52;1971:28;1989:9;1971:28;:::i;2592:131::-;-1:-1:-1;;;;;2667:31:264;;2657:42;;2647:70;;2713:1;2710;2703:12;2728:1105;2848:6;2856;2864;2872;2880;2888;2896;2904;2957:3;2945:9;2936:7;2932:23;2928:33;2925:53;;;2974:1;2971;2964:12;2925:53;2997:28;3015:9;2997:28;:::i;:::-;2987:38;;3075:2;3064:9;3060:18;3047:32;3088:31;3113:5;3088:31;:::i;:::-;3138:5;-1:-1:-1;3195:2:264;3180:18;;3167:32;3208:33;3167:32;3208:33;:::i;:::-;3260:7;-1:-1:-1;3319:2:264;3304:18;;3291:32;3332:33;3291:32;3332:33;:::i;:::-;3384:7;-1:-1:-1;3438:3:264;3423:19;;3410:33;;-1:-1:-1;3495:3:264;3480:19;;3467:33;3509:30;3467:33;3509:30;:::i;:::-;3558:7;-1:-1:-1;3616:3:264;3601:19;;3588:33;3644:18;3633:30;;3630:50;;;3676:1;3673;3666:12;3630:50;3715:58;3765:7;3756:6;3745:9;3741:22;3715:58;:::i;:::-;2728:1105;;;;-1:-1:-1;2728:1105:264;;-1:-1:-1;2728:1105:264;;;;;;3792:8;-1:-1:-1;;;2728:1105:264:o;3838:319::-;3905:6;3913;3966:2;3954:9;3945:7;3941:23;3937:32;3934:52;;;3982:1;3979;3972:12;3934:52;4005:28;4023:9;4005:28;:::i;:::-;3995:38;;4083:2;4072:9;4068:18;4055:32;4096:31;4121:5;4096:31;:::i;:::-;4146:5;4136:15;;;3838:319;;;;;:::o;4344:618::-;4440:6;4448;4456;4464;4472;4525:3;4513:9;4504:7;4500:23;4496:33;4493:53;;;4542:1;4539;4532:12;4493:53;4565:28;4583:9;4565:28;:::i;:::-;4555:38;;4640:2;4629:9;4625:18;4612:32;4602:42;;4691:2;4680:9;4676:18;4663:32;4653:42;;4746:2;4735:9;4731:18;4718:32;4773:18;4765:6;4762:30;4759:50;;;4805:1;4802;4795:12;4967:869;5071:6;5079;5087;5095;5103;5111;5164:3;5152:9;5143:7;5139:23;5135:33;5132:53;;;5181:1;5178;5171:12;5132:53;5204:28;5222:9;5204:28;:::i;:::-;5194:38;;5282:2;5271:9;5267:18;5254:32;5305:18;5363:2;5356:5;5352:14;5345:5;5342:25;5332:53;;5381:1;5378;5371:12;5332:53;5404:5;;-1:-1:-1;5461:2:264;5446:18;;5433:32;;5474:33;5433:32;5474:33;:::i;:::-;5526:7;;-1:-1:-1;5580:2:264;5565:18;;5552:32;;-1:-1:-1;5635:3:264;5620:19;;5607:33;;5652:14;;;5649:34;;;5679:1;5676;5669:12;5649:34;;5718:58;5768:7;5759:6;5748:9;5744:22;5718:58;:::i;:::-;4967:869;;;;-1:-1:-1;4967:869:264;;-1:-1:-1;4967:869:264;;5795:8;;4967:869;-1:-1:-1;;;4967:869:264:o;5841:890::-;5952:6;5960;5968;5976;5984;5992;6000;6053:3;6041:9;6032:7;6028:23;6024:33;6021:53;;;6070:1;6067;6060:12;6021:53;6093:28;6111:9;6093:28;:::i;:::-;6083:38;;6171:2;6160:9;6156:18;6143:32;6184:31;6209:5;6184:31;:::i;:::-;6234:5;-1:-1:-1;6286:2:264;6271:18;;6258:32;;-1:-1:-1;6337:2:264;6322:18;;6309:32;;-1:-1:-1;6393:3:264;6378:19;;6365:33;6407:30;6365:33;6407:30;:::i;:::-;6456:7;-1:-1:-1;6514:3:264;6499:19;;6486:33;6542:18;6531:30;;6528:50;;;6574:1;6571;6564:12;6528:50;6613:58;6663:7;6654:6;6643:9;6639:22;6613:58;:::i;:::-;5841:890;;;;-1:-1:-1;5841:890:264;;-1:-1:-1;5841:890:264;;;;6587:84;;-1:-1:-1;;;5841:890:264:o;6949:205::-;7049:13;;-1:-1:-1;;;;;;7091:38:264;;7081:49;;7071:77;;7144:1;7141;7134:12;7159:127;7220:10;7215:3;7211:20;7208:1;7201:31;7251:4;7248:1;7241:15;7275:4;7272:1;7265:15;7291:275;7362:2;7356:9;7427:2;7408:13;;-1:-1:-1;;7404:27:264;7392:40;;7462:18;7447:34;;7483:22;;;7444:62;7441:88;;;7509:18;;:::i;:::-;7545:2;7538:22;7291:275;;-1:-1:-1;7291:275:264:o;7571:1876::-;7796:6;7804;7812;7820;7828;7836;7844;7852;7860;7913:3;7901:9;7892:7;7888:23;7884:33;7881:53;;;7930:1;7927;7920:12;7881:53;7962:9;7956:16;7981:31;8006:5;7981:31;:::i;:::-;8031:5;8021:15;;;8055:2;8102;8091:9;8087:18;8081:25;8115:33;8140:7;8115:33;:::i;:::-;8219:2;8204:18;;8198:25;8167:7;;-1:-1:-1;8232:33:264;8198:25;8232:33;:::i;:::-;8284:7;-1:-1:-1;8310:70:264;8376:2;8361:18;;8310:70;:::i;:::-;8300:80;;8420:3;8409:9;8405:19;8399:26;8389:36;;8470:3;8459:9;8455:19;8449:26;8484:33;8509:7;8484:33;:::i;:::-;8536:7;-1:-1:-1;8562:71:264;8628:3;8613:19;;8562:71;:::i;:::-;8552:81;;8678:3;8667:9;8663:19;8657:26;8692:30;8714:7;8692:30;:::i;:::-;8792:3;8777:19;;8771:26;8741:7;;-1:-1:-1;8816:18:264;8846:14;;;8843:34;;;8873:1;8870;8863:12;8843:34;8911:6;8900:9;8896:22;8886:32;;8956:7;8949:4;8945:2;8941:13;8937:27;8927:55;;8978:1;8975;8968:12;8927:55;9007:2;9001:9;9029:2;9025;9022:10;9019:36;;;9035:18;;:::i;:::-;9077:53;9120:2;9101:13;;-1:-1:-1;;9097:27:264;9093:36;;9077:53;:::i;:::-;9064:66;;9153:2;9146:5;9139:17;9193:7;9188:2;9183;9179;9175:11;9171:20;9168:33;9165:53;;;9214:1;9211;9204:12;9165:53;9236:1;9246:128;9260:2;9257:1;9254:9;9246:128;;;9347:10;;;9343:19;;9337:26;9317:13;;;9313:22;;9306:58;9271:10;;9246:128;;;9250:3;9415:1;9410:2;9405;9398:5;9394:14;9390:23;9383:34;;9436:5;9426:15;;;;;7571:1876;;;;;;;;;;;:::o;9736:180::-;9795:6;9848:2;9836:9;9827:7;9823:23;9819:32;9816:52;;;9864:1;9861;9854:12;9816:52;-1:-1:-1;9887:23:264;;9736:180;-1:-1:-1;9736:180:264:o;9921:1016::-;10014:6;10022;10075:2;10063:9;10054:7;10050:23;10046:32;10043:52;;;10091:1;10088;10081:12;10043:52;10131:9;10118:23;10160:18;10201:2;10193:6;10190:14;10187:34;;;10217:1;10214;10207:12;10187:34;10255:6;10244:9;10240:22;10230:32;;10300:7;10293:4;10289:2;10285:13;10281:27;10271:55;;10322:1;10319;10312:12;10271:55;10358:2;10345:16;10380:4;10403:2;10399;10396:10;10393:36;;;10409:18;;:::i;:::-;10455:2;10452:1;10448:10;10438:20;;10478:28;10502:2;10498;10494:11;10478:28;:::i;:::-;10540:15;;;10610:11;;;10606:20;;;10571:12;;;;10638:19;;;10635:39;;;10670:1;10667;10660:12;10635:39;10694:11;;;;10714:142;10730:6;10725:3;10722:15;10714:142;;;10796:17;;10784:30;;10747:12;;;;10834;;;;10714:142;;;10875:5;10912:18;;;;10899:32;;-1:-1:-1;;;;;;;9921:1016:264:o;11408:127::-;11469:10;11464:3;11460:20;11457:1;11450:31;11500:4;11497:1;11490:15;11524:4;11521:1;11514:15;11540:125;11605:9;;;11626:10;;;11623:36;;;11639:18;;:::i;11670:127::-;11731:10;11726:3;11722:20;11719:1;11712:31;11762:4;11759:1;11752:15;11786:4;11783:1;11776:15;11802:135;11841:3;11862:17;;;11859:43;;11882:18;;:::i;:::-;-1:-1:-1;11929:1:264;11918:13;;11802:135::o",
    "linkReferences": {},
    "immutableReferences": {
      "78870": [
        {
          "start": 300,
          "length": 32
        },
        {
          "start": 555,
          "length": 32
        },
        {
          "start": 800,
          "length": 32
        },
        {
          "start": 1082,
          "length": 32
        },
        {
          "start": 1287,
          "length": 32
        },
        {
          "start": 1453,
          "length": 32
        },
        {
          "start": 1619,
          "length": 32
        },
        {
          "start": 1787,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "AUCTION_HOUSE()": "4226b1bf",
    "lotBuyerSpent(uint96,address)": "7008e731",
    "lotIdRegistered(uint96)": "1cae9eef",
    "lotMerkleRoot(uint96)": "6003a353",
    "onBid(uint96,uint64,address,uint256,bytes)": "b898895e",
    "onCancel(uint96,uint256,bool,bytes)": "a5658c86",
    "onCreate(uint96,address,address,address,uint256,bool,bytes)": "66e74167",
    "onCurate(uint96,uint256,bool,bytes)": "09b9601c",
    "onPurchase(uint96,address,uint256,uint256,bool,bytes)": "fc439982",
    "onSettle(uint96,uint256,uint256,bytes)": "a5b13f69",
    "setMerkleRoot(uint96,bytes32)": "191e581e"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"auctionHouse_\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"onCreate\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"onCancel\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"onCurate\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"onPurchase\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"onBid\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"onSettle\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"receiveQuoteTokens\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"sendBaseTokens\",\"type\":\"bool\"}],\"internalType\":\"struct Callbacks.Permissions\",\"name\":\"permissions_\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Callback_ExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Callback_InvalidParams\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Callback_NotAuthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Callback_NotImplemented\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callbacks\",\"type\":\"address\"}],\"name\":\"CallbacksAddressNotValid\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"lotId\",\"type\":\"uint96\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"}],\"name\":\"MerkleRootSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"AUCTION_HOUSE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"name\":\"lotBuyerSpent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"spent\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"name\":\"lotIdRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId\",\"type\":\"uint96\"}],\"name\":\"lotMerkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId_\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"bidId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"buyer_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"callbackData_\",\"type\":\"bytes\"}],\"name\":\"onBid\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId_\",\"type\":\"uint96\"},{\"internalType\":\"uint256\",\"name\":\"refund_\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"prefunded_\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"callbackData_\",\"type\":\"bytes\"}],\"name\":\"onCancel\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId_\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"seller_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"baseToken_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"quoteToken_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"capacity_\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"prefund_\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"callbackData_\",\"type\":\"bytes\"}],\"name\":\"onCreate\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId_\",\"type\":\"uint96\"},{\"internalType\":\"uint256\",\"name\":\"curatorFee_\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"prefund_\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"callbackData_\",\"type\":\"bytes\"}],\"name\":\"onCurate\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId_\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"buyer_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"payout_\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"prefunded_\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"callbackData_\",\"type\":\"bytes\"}],\"name\":\"onPurchase\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId_\",\"type\":\"uint96\"},{\"internalType\":\"uint256\",\"name\":\"proceeds_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"refund_\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"callbackData_\",\"type\":\"bytes\"}],\"name\":\"onSettle\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"lotId_\",\"type\":\"uint96\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot_\",\"type\":\"bytes32\"}],\"name\":\"setMerkleRoot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"CallbacksAddressNotValid(address)\":[{\"params\":{\"callbacks\":\"The address of the callbacks contract\"}}]},\"kind\":\"dev\",\"methods\":{\"onBid(uint96,uint64,address,uint256,bytes)\":{\"params\":{\"amount\":\"The amount of quote tokens bid\",\"bidId\":\"The ID of the bid\",\"buyer\":\"The address of the buyer\",\"callbackData\":\"Custom data provided by the buyer\",\"lotId\":\"The ID of the lot\"}},\"onCancel(uint96,uint256,bool,bytes)\":{\"details\":\"If the Callback is configured to receive tokens and the auction was prefunded, then the refund will be sent prior to the call.\",\"params\":{\"callbackData\":\"Custom data provided by the seller\",\"lotId\":\"The ID of the lot\",\"preFunded\":\"If true, the calling contract will have sent base tokens prior to the call\",\"refund\":\"The refund amount\"}},\"onCreate(uint96,address,address,address,uint256,bool,bytes)\":{\"details\":\"The implementing function should:         - Register the lot ID on the Callback contract         - Validate that the seller is allowed to use the Callback contract\",\"params\":{\"baseToken\":\"The address of the base token\",\"callbackData\":\"Custom data provided by the seller\",\"capacity\":\"The capacity of the auction\",\"lotId\":\"The ID of the lot\",\"preFund\":\"If true, the calling contract expects base tokens to be sent to it\",\"quoteToken\":\"The address of the quote token\",\"seller\":\"The address of the seller\"}},\"onCurate(uint96,uint256,bool,bytes)\":{\"params\":{\"callbackData\":\"Custom data provided by the seller\",\"curatorFee\":\"The curator fee payout\",\"lotId\":\"The ID of the lot\",\"preFund\":\"If true, the calling contract expects base tokens to be sent to it\"}},\"onPurchase(uint96,address,uint256,uint256,bool,bytes)\":{\"details\":\"If the Callback is configured to receive quote tokens, then the user purchase amount of quote tokens will be sent prior to this call.         If the Callback is configured to send base tokens, then the AuctionHouse will expect the payout of base tokens to be sent back.\",\"params\":{\"amount\":\"The amount of quote tokens purchased\",\"buyer\":\"The address of the buyer\",\"callbackData\":\"Custom data provided by the buyer\",\"lotId\":\"The ID of the lot\",\"payout\":\"The amount of base tokens to receive\",\"preFunded\":\"If true, the calling contract has already been provided the base tokens. Otherwise, they must be provided.\"}},\"setMerkleRoot(uint96,bytes32)\":{\"details\":\"This function performs the following:         - Performs validation         - Sets the merkle root         - Emits a MerkleRootSet event         This function reverts if:         - The caller is not the lot's seller         - The auction has not been registered\",\"params\":{\"merkleRoot_\":\"The new merkle root\"}}},\"title\":\"AllocatedMerkleAllowlist\",\"version\":1},\"userdoc\":{\"errors\":{\"Callback_ExceedsLimit()\":[{\"notice\":\"Error message when the bid amount exceeds the limit assigned to a buyer\"}],\"CallbacksAddressNotValid(address)\":[{\"notice\":\"Thrown if the address will not lead to the specified callbacks being called\"}]},\"events\":{\"MerkleRootSet(uint96,bytes32)\":{\"notice\":\"Emitted when the merkle root is set\"}},\"kind\":\"user\",\"methods\":{\"AUCTION_HOUSE()\":{\"notice\":\"The AuctionHouse that this callback is linked to\"},\"lotBuyerSpent(uint96,address)\":{\"notice\":\"Tracks the cumulative amount spent by a buyer on a lot\"},\"lotIdRegistered(uint96)\":{\"notice\":\"Records lot ids against their registration status\"},\"lotMerkleRoot(uint96)\":{\"notice\":\"The root of the merkle tree that represents the allowlist for a lot\"},\"onBid(uint96,uint64,address,uint256,bytes)\":{\"notice\":\"Called when a buyer bids on a batch auction. Reverts if validation fails.\"},\"onCancel(uint96,uint256,bool,bytes)\":{\"notice\":\"Called when an auction is cancelled.\"},\"onCreate(uint96,address,address,address,uint256,bool,bytes)\":{\"notice\":\"Called when an auction is created. Reverts if validation fails.\"},\"onCurate(uint96,uint256,bool,bytes)\":{\"notice\":\"Called when curate is called for an auction.\"},\"onPurchase(uint96,address,uint256,uint256,bool,bytes)\":{\"notice\":\"Called when a buyer purchases from an atomic auction. Reverts if validation fails.\"},\"setMerkleRoot(uint96,bytes32)\":{\"notice\":\"Sets the merkle root for the allowlist         This function can be called by the lot's seller to update the merkle root after `onCreate()`.\"}},\"notice\":\"This contract extends the MerkleAllowlist contract to implement a merkle tree-based allowlist for buyers to participate in an auction.         In this implementation, each buyer has an individual purchase limit that is set.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/callbacks/allowlists/AllocatedMerkleAllowlist.sol\":\"AllocatedMerkleAllowlist\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@prb/test/=lib/prb-math/node_modules/@prb/test/\",\":@uniswap/v3-core/=lib/uniswap-v3-core/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":g-uni-v1-core/=lib/g-uni-v1-core/contracts/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":prb-math/=lib/prb-math/src/\",\":solady/=lib/solady/src/\",\":solmate/=lib/solmate/src/\",\":uniswap-v2-core/=lib/uniswap-v2-core/contracts/\",\":uniswap-v2-periphery/=lib/uniswap-v2-periphery/contracts/\",\":uniswap-v3-core/=lib/uniswap-v3-core/contracts/\",\":uniswap-v3-periphery/=lib/uniswap-v3-periphery/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0x3a83e9619d086e3dd342df938cda382c87c90e6e571ec7ebd98dfb45ffeefd06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53a87cabd5a0be7905919f62c76f2d915322a30c8ecc485d7b531cd5d00c130b\",\"dweb:/ipfs/QmdS9S7n69H3pKQEhefWL2NPT1xvDyY59rTqZpDLhAtrxX\"]},\"src/callbacks/BaseCallback.sol\":{\"keccak256\":\"0x6f82cffe10322b3318104f4d6853678f7ec9807ff99bcb1068e9c578d5e46569\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62e23cd3d50c696da8b205303db8ff1f9cb8c264bedff96699f3d77bd6a513db\",\"dweb:/ipfs/QmdkXMBuRKmMjgw8VS8rU949tiFqt3gDS3pRrpKkE5FVN9\"]},\"src/callbacks/allowlists/AllocatedMerkleAllowlist.sol\":{\"keccak256\":\"0x31875e46c78801430c1c5df151ba995b1849747f8449b6e640786e512d91afcb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://57c312cbc6426f6bcf210a81dba471db91978b70cd62a6aa7f3573effc18bf3e\",\"dweb:/ipfs/QmeCnUGy61LMx2ejg7MaAjRPMDn5h7iRMyAPQUJMM1bvsL\"]},\"src/callbacks/allowlists/MerkleAllowlist.sol\":{\"keccak256\":\"0xc656e7345494b9cd0dedc0c3a713be8291864b3ec56fb7f022511b6812489ec8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9952ec4d7b934e2dd7e059504817303b7f238ae1d05480f4ec283bd37fcbcda1\",\"dweb:/ipfs/QmRQQApcNWvyYQzY4187ahLkBySvcnCENfQ26CVqacRD8m\"]},\"src/interfaces/IAuctionHouse.sol\":{\"keccak256\":\"0xd027663074bc26c8f917f61288956a960d9f3f490789b68eb1e03b01c0dabdcc\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://d7651f3ed6dce4a0212b74bca1dc1aca4750815597d3f1a86237d8468f4633b9\",\"dweb:/ipfs/QmP3WSHZn8eGzjd7JzPNgHcEoj3TgXQfUe2WPw9LXtMDZg\"]},\"src/interfaces/ICallback.sol\":{\"keccak256\":\"0xb08760dc184fdf388679cbaf9b854e6d7d800825c71573ae0edbba9d1980fbb8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://913a2ad19820fe53ab46dccf6a13127d189f7840ba6a522a6e5d5afdebca41da\",\"dweb:/ipfs/QmSVSQxMYCsLX58utsHo1CzkRRy3YkYGpBbqKH6FLrUhas\"]},\"src/interfaces/modules/IAuction.sol\":{\"keccak256\":\"0x7039157d051a619b63ce7988be07a43b77a46043f61c5ab4e531084084bcca01\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://32e0093e843d08deada85cf2649d61aa6b37be858e4fdb32b81bfd2c0cf2c304\",\"dweb:/ipfs/QmPEt15nwpXoBzin32wAQKfSBqcvPdkcgLRxiu3eiN1VFg\"]},\"src/interfaces/modules/IDerivative.sol\":{\"keccak256\":\"0x953a79012815f4b3315303720b1758d3b6f3666174d5259849609bb1c11f948f\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://1abc79c0a872cfb4eaf7cadf5794fd509aa401a86fd27bc4c78084f125164daf\",\"dweb:/ipfs/QmSd58DqwwjnXehKFu9DLUFToTVHmWNWstnEMSZ1EX96Yd\"]},\"src/lib/Callbacks.sol\":{\"keccak256\":\"0xc3e2ce87dca53c20a0e013351f80549ed4821c7267963e87e39b0996ccf93836\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0fd245ee2582d6ff35a24fd40b8c6c5ccd620dc5d813dcdea583fd4c18492feb\",\"dweb:/ipfs/QmaixXjHYed69t9opaSYAkxP3eb3pigUxiJF79xQwb4vMi\"]},\"src/modules/Keycode.sol\":{\"keccak256\":\"0x87bc46fae1fa972055e50731999516b0f6a311a9a6e4edd908624dd90b4eab3e\",\"license\":\"AGPL-3.0-or-later\",\"urls\":[\"bzz-raw://028e26252256a74ff0e65890eb1058682094b88af647948a2d7b22085e8470cd\",\"dweb:/ipfs/QmScfjAA3mHzKdTmRtdsfdVvcKF3xTtXYVZt5rHTDQywfu\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "auctionHouse_",
              "type": "address"
            },
            {
              "internalType": "struct Callbacks.Permissions",
              "name": "permissions_",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bool",
                  "name": "onCreate",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "onCancel",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "onCurate",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "onPurchase",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "onBid",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "onSettle",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "receiveQuoteTokens",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "sendBaseTokens",
                  "type": "bool"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Callback_ExceedsLimit"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Callback_InvalidParams"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Callback_NotAuthorized"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Callback_NotImplemented"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "callbacks",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "CallbacksAddressNotValid"
        },
        {
          "inputs": [
            {
              "internalType": "uint96",
              "name": "lotId",
              "type": "uint96",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MerkleRootSet",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "AUCTION_HOUSE",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint96",
              "name": "lotId",
              "type": "uint96"
            },
            {
              "internalType": "address",
              "name": "buyer",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "lotBuyerSpent",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "spent",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint96",
              "name": "",
              "type": "uint96"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "lotIdRegistered",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint96",
              "name": "lotId",
              "type": "uint96"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "lotMerkleRoot",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "merkleRoot",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint96",
              "name": "lotId_",
              "type": "uint96"
            },
            {
              "internalType": "uint64",
              "name": "bidId",
              "type": "uint64"
            },
            {
              "internalType": "address",
              "name": "buyer_",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount_",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "callbackData_",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onBid",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint96",
              "name": "lotId_",
              "type": "uint96"
            },
            {
              "internalType": "uint256",
              "name": "refund_",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "prefunded_",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "callbackData_",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onCancel",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint96",
              "name": "lotId_",
              "type": "uint96"
            },
            {
              "internalType": "address",
              "name": "seller_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "baseToken_",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "quoteToken_",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "capacity_",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "prefund_",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "callbackData_",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onCreate",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint96",
              "name": "lotId_",
              "type": "uint96"
            },
            {
              "internalType": "uint256",
              "name": "curatorFee_",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "prefund_",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "callbackData_",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onCurate",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint96",
              "name": "lotId_",
              "type": "uint96"
            },
            {
              "internalType": "address",
              "name": "buyer_",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount_",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "payout_",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "prefunded_",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "callbackData_",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onPurchase",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint96",
              "name": "lotId_",
              "type": "uint96"
            },
            {
              "internalType": "uint256",
              "name": "proceeds_",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "refund_",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "callbackData_",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onSettle",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint96",
              "name": "lotId_",
              "type": "uint96"
            },
            {
              "internalType": "bytes32",
              "name": "merkleRoot_",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMerkleRoot"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "onBid(uint96,uint64,address,uint256,bytes)": {
            "params": {
              "amount": "The amount of quote tokens bid",
              "bidId": "The ID of the bid",
              "buyer": "The address of the buyer",
              "callbackData": "Custom data provided by the buyer",
              "lotId": "The ID of the lot"
            }
          },
          "onCancel(uint96,uint256,bool,bytes)": {
            "details": "If the Callback is configured to receive tokens and the auction was prefunded, then the refund will be sent prior to the call.",
            "params": {
              "callbackData": "Custom data provided by the seller",
              "lotId": "The ID of the lot",
              "preFunded": "If true, the calling contract will have sent base tokens prior to the call",
              "refund": "The refund amount"
            }
          },
          "onCreate(uint96,address,address,address,uint256,bool,bytes)": {
            "details": "The implementing function should:         - Register the lot ID on the Callback contract         - Validate that the seller is allowed to use the Callback contract",
            "params": {
              "baseToken": "The address of the base token",
              "callbackData": "Custom data provided by the seller",
              "capacity": "The capacity of the auction",
              "lotId": "The ID of the lot",
              "preFund": "If true, the calling contract expects base tokens to be sent to it",
              "quoteToken": "The address of the quote token",
              "seller": "The address of the seller"
            }
          },
          "onCurate(uint96,uint256,bool,bytes)": {
            "params": {
              "callbackData": "Custom data provided by the seller",
              "curatorFee": "The curator fee payout",
              "lotId": "The ID of the lot",
              "preFund": "If true, the calling contract expects base tokens to be sent to it"
            }
          },
          "onPurchase(uint96,address,uint256,uint256,bool,bytes)": {
            "details": "If the Callback is configured to receive quote tokens, then the user purchase amount of quote tokens will be sent prior to this call.         If the Callback is configured to send base tokens, then the AuctionHouse will expect the payout of base tokens to be sent back.",
            "params": {
              "amount": "The amount of quote tokens purchased",
              "buyer": "The address of the buyer",
              "callbackData": "Custom data provided by the buyer",
              "lotId": "The ID of the lot",
              "payout": "The amount of base tokens to receive",
              "preFunded": "If true, the calling contract has already been provided the base tokens. Otherwise, they must be provided."
            }
          },
          "setMerkleRoot(uint96,bytes32)": {
            "details": "This function performs the following:         - Performs validation         - Sets the merkle root         - Emits a MerkleRootSet event         This function reverts if:         - The caller is not the lot's seller         - The auction has not been registered",
            "params": {
              "merkleRoot_": "The new merkle root"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "AUCTION_HOUSE()": {
            "notice": "The AuctionHouse that this callback is linked to"
          },
          "lotBuyerSpent(uint96,address)": {
            "notice": "Tracks the cumulative amount spent by a buyer on a lot"
          },
          "lotIdRegistered(uint96)": {
            "notice": "Records lot ids against their registration status"
          },
          "lotMerkleRoot(uint96)": {
            "notice": "The root of the merkle tree that represents the allowlist for a lot"
          },
          "onBid(uint96,uint64,address,uint256,bytes)": {
            "notice": "Called when a buyer bids on a batch auction. Reverts if validation fails."
          },
          "onCancel(uint96,uint256,bool,bytes)": {
            "notice": "Called when an auction is cancelled."
          },
          "onCreate(uint96,address,address,address,uint256,bool,bytes)": {
            "notice": "Called when an auction is created. Reverts if validation fails."
          },
          "onCurate(uint96,uint256,bool,bytes)": {
            "notice": "Called when curate is called for an auction."
          },
          "onPurchase(uint96,address,uint256,uint256,bool,bytes)": {
            "notice": "Called when a buyer purchases from an atomic auction. Reverts if validation fails."
          },
          "setMerkleRoot(uint96,bytes32)": {
            "notice": "Sets the merkle root for the allowlist         This function can be called by the lot's seller to update the merkle root after `onCreate()`."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@prb/test/=lib/prb-math/node_modules/@prb/test/",
        "@uniswap/v3-core/=lib/uniswap-v3-core/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "g-uni-v1-core/=lib/g-uni-v1-core/contracts/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts/contracts/",
        "prb-math/=lib/prb-math/src/",
        "solady/=lib/solady/src/",
        "solmate/=lib/solmate/src/",
        "uniswap-v2-core/=lib/uniswap-v2-core/contracts/",
        "uniswap-v2-periphery/=lib/uniswap-v2-periphery/contracts/",
        "uniswap-v3-core/=lib/uniswap-v3-core/contracts/",
        "uniswap-v3-periphery/=lib/uniswap-v3-periphery/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/callbacks/allowlists/AllocatedMerkleAllowlist.sol": "AllocatedMerkleAllowlist"
      },
      "evmVersion": "paris",
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol": {
        "keccak256": "0x3a83e9619d086e3dd342df938cda382c87c90e6e571ec7ebd98dfb45ffeefd06",
        "urls": [
          "bzz-raw://53a87cabd5a0be7905919f62c76f2d915322a30c8ecc485d7b531cd5d00c130b",
          "dweb:/ipfs/QmdS9S7n69H3pKQEhefWL2NPT1xvDyY59rTqZpDLhAtrxX"
        ],
        "license": "MIT"
      },
      "src/callbacks/BaseCallback.sol": {
        "keccak256": "0x6f82cffe10322b3318104f4d6853678f7ec9807ff99bcb1068e9c578d5e46569",
        "urls": [
          "bzz-raw://62e23cd3d50c696da8b205303db8ff1f9cb8c264bedff96699f3d77bd6a513db",
          "dweb:/ipfs/QmdkXMBuRKmMjgw8VS8rU949tiFqt3gDS3pRrpKkE5FVN9"
        ],
        "license": "MIT"
      },
      "src/callbacks/allowlists/AllocatedMerkleAllowlist.sol": {
        "keccak256": "0x31875e46c78801430c1c5df151ba995b1849747f8449b6e640786e512d91afcb",
        "urls": [
          "bzz-raw://57c312cbc6426f6bcf210a81dba471db91978b70cd62a6aa7f3573effc18bf3e",
          "dweb:/ipfs/QmeCnUGy61LMx2ejg7MaAjRPMDn5h7iRMyAPQUJMM1bvsL"
        ],
        "license": "MIT"
      },
      "src/callbacks/allowlists/MerkleAllowlist.sol": {
        "keccak256": "0xc656e7345494b9cd0dedc0c3a713be8291864b3ec56fb7f022511b6812489ec8",
        "urls": [
          "bzz-raw://9952ec4d7b934e2dd7e059504817303b7f238ae1d05480f4ec283bd37fcbcda1",
          "dweb:/ipfs/QmRQQApcNWvyYQzY4187ahLkBySvcnCENfQ26CVqacRD8m"
        ],
        "license": "MIT"
      },
      "src/interfaces/IAuctionHouse.sol": {
        "keccak256": "0xd027663074bc26c8f917f61288956a960d9f3f490789b68eb1e03b01c0dabdcc",
        "urls": [
          "bzz-raw://d7651f3ed6dce4a0212b74bca1dc1aca4750815597d3f1a86237d8468f4633b9",
          "dweb:/ipfs/QmP3WSHZn8eGzjd7JzPNgHcEoj3TgXQfUe2WPw9LXtMDZg"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/interfaces/ICallback.sol": {
        "keccak256": "0xb08760dc184fdf388679cbaf9b854e6d7d800825c71573ae0edbba9d1980fbb8",
        "urls": [
          "bzz-raw://913a2ad19820fe53ab46dccf6a13127d189f7840ba6a522a6e5d5afdebca41da",
          "dweb:/ipfs/QmSVSQxMYCsLX58utsHo1CzkRRy3YkYGpBbqKH6FLrUhas"
        ],
        "license": "MIT"
      },
      "src/interfaces/modules/IAuction.sol": {
        "keccak256": "0x7039157d051a619b63ce7988be07a43b77a46043f61c5ab4e531084084bcca01",
        "urls": [
          "bzz-raw://32e0093e843d08deada85cf2649d61aa6b37be858e4fdb32b81bfd2c0cf2c304",
          "dweb:/ipfs/QmPEt15nwpXoBzin32wAQKfSBqcvPdkcgLRxiu3eiN1VFg"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/interfaces/modules/IDerivative.sol": {
        "keccak256": "0x953a79012815f4b3315303720b1758d3b6f3666174d5259849609bb1c11f948f",
        "urls": [
          "bzz-raw://1abc79c0a872cfb4eaf7cadf5794fd509aa401a86fd27bc4c78084f125164daf",
          "dweb:/ipfs/QmSd58DqwwjnXehKFu9DLUFToTVHmWNWstnEMSZ1EX96Yd"
        ],
        "license": "AGPL-3.0-or-later"
      },
      "src/lib/Callbacks.sol": {
        "keccak256": "0xc3e2ce87dca53c20a0e013351f80549ed4821c7267963e87e39b0996ccf93836",
        "urls": [
          "bzz-raw://0fd245ee2582d6ff35a24fd40b8c6c5ccd620dc5d813dcdea583fd4c18492feb",
          "dweb:/ipfs/QmaixXjHYed69t9opaSYAkxP3eb3pigUxiJF79xQwb4vMi"
        ],
        "license": "MIT"
      },
      "src/modules/Keycode.sol": {
        "keccak256": "0x87bc46fae1fa972055e50731999516b0f6a311a9a6e4edd908624dd90b4eab3e",
        "urls": [
          "bzz-raw://028e26252256a74ff0e65890eb1058682094b88af647948a2d7b22085e8470cd",
          "dweb:/ipfs/QmScfjAA3mHzKdTmRtdsfdVvcKF3xTtXYVZt5rHTDQywfu"
        ],
        "license": "AGPL-3.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/callbacks/allowlists/AllocatedMerkleAllowlist.sol",
    "id": 79387,
    "exportedSymbols": {
      "AllocatedMerkleAllowlist": [79386],
      "BaseCallback": [79219],
      "Callbacks": [84003],
      "MerkleAllowlist": [79895],
      "MerkleProof": [51005]
    },
    "nodeType": "SourceUnit",
    "src": "32:3751:129",
    "nodes": [
      {
        "id": 79221,
        "nodeType": "PragmaDirective",
        "src": "32:23:129",
        "nodes": [],
        "literals": ["solidity", "0.8", ".19"]
      },
      {
        "id": 79223,
        "nodeType": "ImportDirective",
        "src": "57:100:129",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol",
        "file": "lib/openzeppelin-contracts/contracts/utils/cryptography/MerkleProof.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 79387,
        "sourceUnit": 51006,
        "symbolAliases": [
          {
            "foreign": {
              "id": 79222,
              "name": "MerkleProof",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 51005,
              "src": "65:11:129",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 79225,
        "nodeType": "ImportDirective",
        "src": "159:77:129",
        "nodes": [],
        "absolutePath": "src/callbacks/allowlists/MerkleAllowlist.sol",
        "file": "src/callbacks/allowlists/MerkleAllowlist.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 79387,
        "sourceUnit": 79896,
        "symbolAliases": [
          {
            "foreign": {
              "id": 79224,
              "name": "MerkleAllowlist",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 79895,
              "src": "167:15:129",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 79227,
        "nodeType": "ImportDirective",
        "src": "237:60:129",
        "nodes": [],
        "absolutePath": "src/callbacks/BaseCallback.sol",
        "file": "src/callbacks/BaseCallback.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 79387,
        "sourceUnit": 79220,
        "symbolAliases": [
          {
            "foreign": {
              "id": 79226,
              "name": "BaseCallback",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 79219,
              "src": "245:12:129",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 79229,
        "nodeType": "ImportDirective",
        "src": "298:48:129",
        "nodes": [],
        "absolutePath": "src/lib/Callbacks.sol",
        "file": "src/lib/Callbacks.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 79387,
        "sourceUnit": 84004,
        "symbolAliases": [
          {
            "foreign": {
              "id": 79228,
              "name": "Callbacks",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 84003,
              "src": "306:9:129",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 79386,
        "nodeType": "ContractDefinition",
        "src": "625:3157:129",
        "nodes": [
          {
            "id": 79235,
            "nodeType": "ErrorDefinition",
            "src": "812:30:129",
            "nodes": [],
            "documentation": {
              "id": 79233,
              "nodeType": "StructuredDocumentation",
              "src": "724:83:129",
              "text": "@notice Error message when the bid amount exceeds the limit assigned to a buyer"
            },
            "errorSelector": "661ada02",
            "name": "Callback_ExceedsLimit",
            "nameLocation": "818:21:129",
            "parameters": {
              "id": 79234,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "839:2:129"
            }
          },
          {
            "id": 79242,
            "nodeType": "VariableDeclaration",
            "src": "968:85:129",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 79236,
              "nodeType": "StructuredDocumentation",
              "src": "897:66:129",
              "text": "@notice Tracks the cumulative amount spent by a buyer on a lot"
            },
            "functionSelector": "7008e731",
            "mutability": "mutable",
            "name": "lotBuyerSpent",
            "nameLocation": "1040:13:129",
            "scope": 79386,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint96_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(uint96 => mapping(address => uint256))"
            },
            "typeName": {
              "id": 79241,
              "keyName": "lotId",
              "keyNameLocation": "983:5:129",
              "keyType": {
                "id": 79237,
                "name": "uint96",
                "nodeType": "ElementaryTypeName",
                "src": "976:6:129",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint96",
                  "typeString": "uint96"
                }
              },
              "nodeType": "Mapping",
              "src": "968:64:129",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint96_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(uint96 => mapping(address => uint256))"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 79240,
                "keyName": "buyer",
                "keyNameLocation": "1008:5:129",
                "keyType": {
                  "id": 79238,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1000:7:129",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "992:39:129",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueName": "spent",
                "valueNameLocation": "1025:5:129",
                "valueType": {
                  "id": 79239,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1017:7:129",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 79255,
            "nodeType": "FunctionDefinition",
            "src": "1371:147:129",
            "nodes": [],
            "body": {
              "id": 79254,
              "nodeType": "Block",
              "src": "1516:2:129",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 79250,
                    "name": "auctionHouse_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 79244,
                    "src": "1487:13:129",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 79251,
                    "name": "permissions_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 79247,
                    "src": "1502:12:129",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Permissions_$83514_memory_ptr",
                      "typeString": "struct Callbacks.Permissions memory"
                    }
                  }
                ],
                "id": 79252,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 79249,
                  "name": "MerkleAllowlist",
                  "nameLocations": ["1471:15:129"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 79895,
                  "src": "1471:15:129"
                },
                "nodeType": "ModifierInvocation",
                "src": "1471:44:129"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 79248,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79244,
                  "mutability": "mutable",
                  "name": "auctionHouse_",
                  "nameLocation": "1400:13:129",
                  "nodeType": "VariableDeclaration",
                  "scope": 79255,
                  "src": "1392:21:129",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 79243,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1392:7:129",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79247,
                  "mutability": "mutable",
                  "name": "permissions_",
                  "nameLocation": "1452:12:129",
                  "nodeType": "VariableDeclaration",
                  "scope": 79255,
                  "src": "1423:41:129",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Permissions_$83514_memory_ptr",
                    "typeString": "struct Callbacks.Permissions"
                  },
                  "typeName": {
                    "id": 79246,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 79245,
                      "name": "Callbacks.Permissions",
                      "nameLocations": ["1423:9:129", "1433:11:129"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 83514,
                      "src": "1423:21:129"
                    },
                    "referencedDeclaration": 83514,
                    "src": "1423:21:129",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Permissions_$83514_storage_ptr",
                      "typeString": "struct Callbacks.Permissions"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1382:88:129"
            },
            "returnParameters": {
              "id": 79253,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1516:0:129"
            },
            "scope": 79386,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 79280,
            "nodeType": "FunctionDefinition",
            "src": "1886:249:129",
            "nodes": [],
            "body": {
              "id": 79279,
              "nodeType": "Block",
              "src": "2072:63:129",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 79273,
                        "name": "lotId_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79258,
                        "src": "2089:6:129",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      {
                        "id": 79274,
                        "name": "buyer_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79260,
                        "src": "2097:6:129",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 79275,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79262,
                        "src": "2105:7:129",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 79276,
                        "name": "callbackData_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79268,
                        "src": "2114:13:129",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 79272,
                      "name": "_onBuy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79385,
                      "src": "2082:6:129",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint96_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$__$",
                        "typeString": "function (uint96,address,uint256,bytes calldata)"
                      }
                    },
                    "id": 79277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2082:46:129",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79278,
                  "nodeType": "ExpressionStatement",
                  "src": "2082:46:129"
                }
              ]
            },
            "baseFunctions": [79721],
            "documentation": {
              "id": 79256,
              "nodeType": "StructuredDocumentation",
              "src": "1576:305:129",
              "text": "@inheritdoc BaseCallback\n @dev        This function performs the following:\n             - Calls the `_onBuy()` function to validate the buyer's purchase\n @param      callbackData_   abi-encoded data: (bytes32[], uint256) representing the merkle proof and allocated amount"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_onPurchase",
            "nameLocation": "1895:11:129",
            "overrides": {
              "id": 79270,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2063:8:129"
            },
            "parameters": {
              "id": 79269,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79258,
                  "mutability": "mutable",
                  "name": "lotId_",
                  "nameLocation": "1923:6:129",
                  "nodeType": "VariableDeclaration",
                  "scope": 79280,
                  "src": "1916:13:129",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 79257,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "1916:6:129",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79260,
                  "mutability": "mutable",
                  "name": "buyer_",
                  "nameLocation": "1947:6:129",
                  "nodeType": "VariableDeclaration",
                  "scope": 79280,
                  "src": "1939:14:129",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 79259,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1939:7:129",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79262,
                  "mutability": "mutable",
                  "name": "amount_",
                  "nameLocation": "1971:7:129",
                  "nodeType": "VariableDeclaration",
                  "scope": 79280,
                  "src": "1963:15:129",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 79261,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1963:7:129",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79264,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 79280,
                  "src": "1988:7:129",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 79263,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1988:7:129",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79266,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 79280,
                  "src": "2005:4:129",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 79265,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2005:4:129",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79268,
                  "mutability": "mutable",
                  "name": "callbackData_",
                  "nameLocation": "2034:13:129",
                  "nodeType": "VariableDeclaration",
                  "scope": 79280,
                  "src": "2019:28:129",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 79267,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2019:5:129",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1906:147:129"
            },
            "returnParameters": {
              "id": 79271,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2072:0:129"
            },
            "scope": 79386,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 79303,
            "nodeType": "FunctionDefinition",
            "src": "2439:229:129",
            "nodes": [],
            "body": {
              "id": 79302,
              "nodeType": "Block",
              "src": "2605:63:129",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 79296,
                        "name": "lotId_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79283,
                        "src": "2622:6:129",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      {
                        "id": 79297,
                        "name": "buyer_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79287,
                        "src": "2630:6:129",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 79298,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79289,
                        "src": "2638:7:129",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 79299,
                        "name": "callbackData_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79291,
                        "src": "2647:13:129",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 79295,
                      "name": "_onBuy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79385,
                      "src": "2615:6:129",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint96_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$__$",
                        "typeString": "function (uint96,address,uint256,bytes calldata)"
                      }
                    },
                    "id": 79300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2615:46:129",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79301,
                  "nodeType": "ExpressionStatement",
                  "src": "2615:46:129"
                }
              ]
            },
            "baseFunctions": [79768],
            "documentation": {
              "id": 79281,
              "nodeType": "StructuredDocumentation",
              "src": "2141:293:129",
              "text": "@inheritdoc BaseCallback\n @dev        This function performs the following:\n             - Calls the `_onBuy()` function to validate the buyer's bid\n @param      callbackData_   abi-encoded data: (bytes32[], uint256) representing the proof and allocated amount"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_onBid",
            "nameLocation": "2448:6:129",
            "overrides": {
              "id": 79293,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2596:8:129"
            },
            "parameters": {
              "id": 79292,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79283,
                  "mutability": "mutable",
                  "name": "lotId_",
                  "nameLocation": "2471:6:129",
                  "nodeType": "VariableDeclaration",
                  "scope": 79303,
                  "src": "2464:13:129",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 79282,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "2464:6:129",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79285,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 79303,
                  "src": "2487:6:129",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 79284,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "2487:6:129",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79287,
                  "mutability": "mutable",
                  "name": "buyer_",
                  "nameLocation": "2511:6:129",
                  "nodeType": "VariableDeclaration",
                  "scope": 79303,
                  "src": "2503:14:129",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 79286,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2503:7:129",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79289,
                  "mutability": "mutable",
                  "name": "amount_",
                  "nameLocation": "2535:7:129",
                  "nodeType": "VariableDeclaration",
                  "scope": 79303,
                  "src": "2527:15:129",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 79288,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2527:7:129",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79291,
                  "mutability": "mutable",
                  "name": "callbackData_",
                  "nameLocation": "2567:13:129",
                  "nodeType": "VariableDeclaration",
                  "scope": 79303,
                  "src": "2552:28:129",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 79290,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2552:5:129",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2454:132:129"
            },
            "returnParameters": {
              "id": 79294,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2605:0:129"
            },
            "scope": 79386,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 79385,
            "nodeType": "FunctionDefinition",
            "src": "2726:1054:129",
            "nodes": [],
            "body": {
              "id": 79384,
              "nodeType": "Block",
              "src": "2867:913:129",
              "nodes": [],
              "statements": [
                {
                  "assignments": [79318, 79320],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 79318,
                      "mutability": "mutable",
                      "name": "proof",
                      "nameLocation": "3048:5:129",
                      "nodeType": "VariableDeclaration",
                      "scope": 79384,
                      "src": "3031:22:129",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                        "typeString": "bytes32[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 79316,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3031:7:129",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 79317,
                        "nodeType": "ArrayTypeName",
                        "src": "3031:9:129",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                          "typeString": "bytes32[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 79320,
                      "mutability": "mutable",
                      "name": "allocatedAmount",
                      "nameLocation": "3063:15:129",
                      "nodeType": "VariableDeclaration",
                      "scope": 79384,
                      "src": "3055:23:129",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 79319,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3055:7:129",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 79331,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 79323,
                        "name": "callbackData_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79311,
                        "src": "3105:13:129",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "components": [
                          {
                            "baseExpression": {
                              "id": 79325,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3121:7:129",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes32_$",
                                "typeString": "type(bytes32)"
                              },
                              "typeName": {
                                "id": 79324,
                                "name": "bytes32",
                                "nodeType": "ElementaryTypeName",
                                "src": "3121:7:129",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 79326,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3121:9:129",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                              "typeString": "type(bytes32[] memory)"
                            }
                          },
                          {
                            "id": 79328,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3132:7:129",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 79327,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3132:7:129",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 79329,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "3120:20:129",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_type$_t_array$_t_bytes32_$dyn_memory_ptr_$_$_t_type$_t_uint256_$_$",
                          "typeString": "tuple(type(bytes32[] memory),type(uint256))"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_tuple$_t_type$_t_array$_t_bytes32_$dyn_memory_ptr_$_$_t_type$_t_uint256_$_$",
                          "typeString": "tuple(type(bytes32[] memory),type(uint256))"
                        }
                      ],
                      "expression": {
                        "id": 79321,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "3094:3:129",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 79322,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "3098:6:129",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "3094:10:129",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 79330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3094:47:129",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_uint256_$",
                      "typeString": "tuple(bytes32[] memory,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3030:111:129"
                },
                {
                  "assignments": [79333],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 79333,
                      "mutability": "mutable",
                      "name": "leaf",
                      "nameLocation": "3198:4:129",
                      "nodeType": "VariableDeclaration",
                      "scope": 79384,
                      "src": "3190:12:129",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 79332,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3190:7:129",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 79347,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 79341,
                                    "name": "buyer_",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 79307,
                                    "src": "3249:6:129",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 79342,
                                    "name": "allocatedAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 79320,
                                    "src": "3257:15:129",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 79339,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "3238:3:129",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 79340,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "3242:6:129",
                                  "memberName": "encode",
                                  "nodeType": "MemberAccess",
                                  "src": "3238:10:129",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 79343,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3238:35:129",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 79338,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "3228:9:129",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 79344,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3228:46:129",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 79336,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3215:5:129",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": {
                              "id": 79335,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "3215:5:129",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 79337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3221:6:129",
                          "memberName": "concat",
                          "nodeType": "MemberAccess",
                          "src": "3215:12:129",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 79345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3215:60:129",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 79334,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "3205:9:129",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 79346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3205:71:129",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3190:86:129"
                },
                {
                  "condition": {
                    "id": 79356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "3328:55:129",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 79350,
                          "name": "proof",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79318,
                          "src": "3348:5:129",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                            "typeString": "bytes32[] memory"
                          }
                        },
                        {
                          "baseExpression": {
                            "id": 79351,
                            "name": "lotMerkleRoot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79591,
                            "src": "3355:13:129",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint96_$_t_bytes32_$",
                              "typeString": "mapping(uint96 => bytes32)"
                            }
                          },
                          "id": 79353,
                          "indexExpression": {
                            "id": 79352,
                            "name": "lotId_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79305,
                            "src": "3369:6:129",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3355:21:129",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 79354,
                          "name": "leaf",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79333,
                          "src": "3378:4:129",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                            "typeString": "bytes32[] memory"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "id": 79348,
                          "name": "MerkleProof",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51005,
                          "src": "3329:11:129",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_MerkleProof_$51005_$",
                            "typeString": "type(library MerkleProof)"
                          }
                        },
                        "id": 79349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3341:6:129",
                        "memberName": "verify",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 50497,
                        "src": "3329:18:129",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
                          "typeString": "function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"
                        }
                      },
                      "id": 79355,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3329:54:129",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 79361,
                  "nodeType": "IfStatement",
                  "src": "3324:117:129",
                  "trueBody": {
                    "id": 79360,
                    "nodeType": "Block",
                    "src": "3385:56:129",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 79357,
                            "name": "Callback_NotAuthorized",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78865,
                            "src": "3406:22:129",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 79358,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3406:24:129",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 79359,
                        "nodeType": "RevertStatement",
                        "src": "3399:31:129"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 79370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 79368,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 79362,
                            "name": "lotBuyerSpent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79242,
                            "src": "3566:13:129",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint96_$_t_mapping$_t_address_$_t_uint256_$_$",
                              "typeString": "mapping(uint96 => mapping(address => uint256))"
                            }
                          },
                          "id": 79364,
                          "indexExpression": {
                            "id": 79363,
                            "name": "lotId_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79305,
                            "src": "3580:6:129",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3566:21:129",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 79366,
                        "indexExpression": {
                          "id": 79365,
                          "name": "buyer_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79307,
                          "src": "3588:6:129",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3566:29:129",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 79367,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79309,
                        "src": "3598:7:129",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3566:39:129",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 79369,
                      "name": "allocatedAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79320,
                      "src": "3608:15:129",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3566:57:129",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 79375,
                  "nodeType": "IfStatement",
                  "src": "3562:118:129",
                  "trueBody": {
                    "id": 79374,
                    "nodeType": "Block",
                    "src": "3625:55:129",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 79371,
                            "name": "Callback_ExceedsLimit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79235,
                            "src": "3646:21:129",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 79372,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3646:23:129",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 79373,
                        "nodeType": "RevertStatement",
                        "src": "3639:30:129"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 79382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 79376,
                          "name": "lotBuyerSpent",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79242,
                          "src": "3733:13:129",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint96_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(uint96 => mapping(address => uint256))"
                          }
                        },
                        "id": 79379,
                        "indexExpression": {
                          "id": 79377,
                          "name": "lotId_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79305,
                          "src": "3747:6:129",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3733:21:129",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 79380,
                      "indexExpression": {
                        "id": 79378,
                        "name": "buyer_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79307,
                        "src": "3755:6:129",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3733:29:129",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 79381,
                      "name": "amount_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79309,
                      "src": "3766:7:129",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3733:40:129",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 79383,
                  "nodeType": "ExpressionStatement",
                  "src": "3733:40:129"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_onBuy",
            "nameLocation": "2735:6:129",
            "parameters": {
              "id": 79312,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79305,
                  "mutability": "mutable",
                  "name": "lotId_",
                  "nameLocation": "2758:6:129",
                  "nodeType": "VariableDeclaration",
                  "scope": 79385,
                  "src": "2751:13:129",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 79304,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "2751:6:129",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79307,
                  "mutability": "mutable",
                  "name": "buyer_",
                  "nameLocation": "2782:6:129",
                  "nodeType": "VariableDeclaration",
                  "scope": 79385,
                  "src": "2774:14:129",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 79306,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2774:7:129",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79309,
                  "mutability": "mutable",
                  "name": "amount_",
                  "nameLocation": "2806:7:129",
                  "nodeType": "VariableDeclaration",
                  "scope": 79385,
                  "src": "2798:15:129",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 79308,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2798:7:129",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79311,
                  "mutability": "mutable",
                  "name": "callbackData_",
                  "nameLocation": "2838:13:129",
                  "nodeType": "VariableDeclaration",
                  "scope": 79385,
                  "src": "2823:28:129",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 79310,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2823:5:129",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2741:116:129"
            },
            "returnParameters": {
              "id": 79313,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2867:0:129"
            },
            "scope": 79386,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 79231,
              "name": "MerkleAllowlist",
              "nameLocations": ["662:15:129"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 79895,
              "src": "662:15:129"
            },
            "id": 79232,
            "nodeType": "InheritanceSpecifier",
            "src": "662:15:129"
          }
        ],
        "canonicalName": "AllocatedMerkleAllowlist",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 79230,
          "nodeType": "StructuredDocumentation",
          "src": "348:277:129",
          "text": "@title  AllocatedMerkleAllowlist\n @notice This contract extends the MerkleAllowlist contract to implement a merkle tree-based allowlist for buyers to participate in an auction.\n         In this implementation, each buyer has an individual purchase limit that is set."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [79386, 79895, 79219, 82141],
        "name": "AllocatedMerkleAllowlist",
        "nameLocation": "634:24:129",
        "scope": 79387,
        "usedErrors": [78863, 78865, 78867, 79235, 83519]
      }
    ],
    "license": "MIT"
  },
  "id": 129
}
