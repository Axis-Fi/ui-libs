//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// allocatedMerkleAllowlist
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const allocatedMerkleAllowlistAbi = [
  {
    stateMutability: "nonpayable",
    type: "constructor",
    inputs: [
      { name: "auctionHouse_", internalType: "address", type: "address" },
      {
        name: "permissions_",
        internalType: "struct Callbacks.Permissions",
        type: "tuple",
        components: [
          { name: "onCreate", internalType: "bool", type: "bool" },
          { name: "onCancel", internalType: "bool", type: "bool" },
          { name: "onCurate", internalType: "bool", type: "bool" },
          { name: "onPurchase", internalType: "bool", type: "bool" },
          { name: "onBid", internalType: "bool", type: "bool" },
          { name: "onSettle", internalType: "bool", type: "bool" },
          { name: "receiveQuoteTokens", internalType: "bool", type: "bool" },
          { name: "sendBaseTokens", internalType: "bool", type: "bool" },
        ],
      },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "AUCTION_HOUSE",
    outputs: [{ name: "", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "lotId", internalType: "uint96", type: "uint96" },
      { name: "buyer", internalType: "address", type: "address" },
    ],
    name: "lotBuyerSpent",
    outputs: [{ name: "spent", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "uint96", type: "uint96" }],
    name: "lotIdRegistered",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "lotId", internalType: "uint96", type: "uint96" }],
    name: "lotMerkleRoot",
    outputs: [{ name: "merkleRoot", internalType: "bytes32", type: "bytes32" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "bidId", internalType: "uint64", type: "uint64" },
      { name: "buyer_", internalType: "address", type: "address" },
      { name: "amount_", internalType: "uint256", type: "uint256" },
      { name: "callbackData_", internalType: "bytes", type: "bytes" },
    ],
    name: "onBid",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "refund_", internalType: "uint256", type: "uint256" },
      { name: "prefunded_", internalType: "bool", type: "bool" },
      { name: "callbackData_", internalType: "bytes", type: "bytes" },
    ],
    name: "onCancel",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "seller_", internalType: "address", type: "address" },
      { name: "baseToken_", internalType: "address", type: "address" },
      { name: "quoteToken_", internalType: "address", type: "address" },
      { name: "capacity_", internalType: "uint256", type: "uint256" },
      { name: "prefund_", internalType: "bool", type: "bool" },
      { name: "callbackData_", internalType: "bytes", type: "bytes" },
    ],
    name: "onCreate",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "curatorFee_", internalType: "uint256", type: "uint256" },
      { name: "prefund_", internalType: "bool", type: "bool" },
      { name: "callbackData_", internalType: "bytes", type: "bytes" },
    ],
    name: "onCurate",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "buyer_", internalType: "address", type: "address" },
      { name: "amount_", internalType: "uint256", type: "uint256" },
      { name: "payout_", internalType: "uint256", type: "uint256" },
      { name: "prefunded_", internalType: "bool", type: "bool" },
      { name: "callbackData_", internalType: "bytes", type: "bytes" },
    ],
    name: "onPurchase",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "proceeds_", internalType: "uint256", type: "uint256" },
      { name: "refund_", internalType: "uint256", type: "uint256" },
      { name: "callbackData_", internalType: "bytes", type: "bytes" },
    ],
    name: "onSettle",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "merkleRoot_", internalType: "bytes32", type: "bytes32" },
    ],
    name: "setMerkleRoot",
    outputs: [],
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "lotId", internalType: "uint96", type: "uint96", indexed: false },
      {
        name: "merkleRoot",
        internalType: "bytes32",
        type: "bytes32",
        indexed: false,
      },
    ],
    name: "MerkleRootSet",
  },
  { type: "error", inputs: [], name: "Callback_ExceedsLimit" },
  { type: "error", inputs: [], name: "Callback_InvalidParams" },
  { type: "error", inputs: [], name: "Callback_NotAuthorized" },
  { type: "error", inputs: [], name: "Callback_NotImplemented" },
  {
    type: "error",
    inputs: [{ name: "callbacks", internalType: "address", type: "address" }],
    name: "CallbacksAddressNotValid",
  },
] as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// baseline
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const baselineAbi = [
  {
    stateMutability: "nonpayable",
    type: "constructor",
    inputs: [
      { name: "auctionHouse_", internalType: "address", type: "address" },
      { name: "baselineKernel_", internalType: "address", type: "address" },
      { name: "reserve_", internalType: "address", type: "address" },
      { name: "owner_", internalType: "address", type: "address" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "AUCTION_HOUSE",
    outputs: [{ name: "", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "BPOOL",
    outputs: [{ name: "", internalType: "contract IBPOOLv1", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "CREDT",
    outputs: [{ name: "", internalType: "contract ICREDTv1", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "LOOPS",
    outputs: [{ name: "", internalType: "contract ILOOPSv1", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "RESERVE",
    outputs: [{ name: "", internalType: "contract ERC20", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "auctionComplete",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "bAsset",
    outputs: [{ name: "", internalType: "contract ERC20", type: "address" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "newKernel_", internalType: "contract Kernel", type: "address" },
    ],
    name: "changeKernel",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [],
    name: "configureDependencies",
    outputs: [
      { name: "dependencies", internalType: "Keycode[]", type: "bytes5[]" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "floorReservesPercent",
    outputs: [{ name: "", internalType: "uint24", type: "uint24" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "isActive",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "kernel",
    outputs: [{ name: "", internalType: "contract Kernel", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "lotId",
    outputs: [{ name: "", internalType: "uint96", type: "uint96" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "uint96", type: "uint96" }],
    name: "lotIdRegistered",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "bidId", internalType: "uint64", type: "uint64" },
      { name: "buyer_", internalType: "address", type: "address" },
      { name: "amount_", internalType: "uint256", type: "uint256" },
      { name: "callbackData_", internalType: "bytes", type: "bytes" },
    ],
    name: "onBid",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "refund_", internalType: "uint256", type: "uint256" },
      { name: "prefunded_", internalType: "bool", type: "bool" },
      { name: "callbackData_", internalType: "bytes", type: "bytes" },
    ],
    name: "onCancel",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "seller_", internalType: "address", type: "address" },
      { name: "baseToken_", internalType: "address", type: "address" },
      { name: "quoteToken_", internalType: "address", type: "address" },
      { name: "capacity_", internalType: "uint256", type: "uint256" },
      { name: "prefund_", internalType: "bool", type: "bool" },
      { name: "callbackData_", internalType: "bytes", type: "bytes" },
    ],
    name: "onCreate",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "curatorFee_", internalType: "uint256", type: "uint256" },
      { name: "prefund_", internalType: "bool", type: "bool" },
      { name: "callbackData_", internalType: "bytes", type: "bytes" },
    ],
    name: "onCurate",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "buyer_", internalType: "address", type: "address" },
      { name: "amount_", internalType: "uint256", type: "uint256" },
      { name: "payout_", internalType: "uint256", type: "uint256" },
      { name: "prefunded_", internalType: "bool", type: "bool" },
      { name: "callbackData_", internalType: "bytes", type: "bytes" },
    ],
    name: "onPurchase",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "proceeds_", internalType: "uint256", type: "uint256" },
      { name: "refund_", internalType: "uint256", type: "uint256" },
      { name: "callbackData_", internalType: "bytes", type: "bytes" },
    ],
    name: "onSettle",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "owner",
    outputs: [{ name: "", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "poolPercent",
    outputs: [{ name: "", internalType: "uint24", type: "uint24" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "poolTargetTick",
    outputs: [{ name: "", internalType: "int24", type: "int24" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "recipient",
    outputs: [{ name: "", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "requestPermissions",
    outputs: [
      {
        name: "requests",
        internalType: "struct Permissions[]",
        type: "tuple[]",
        components: [
          { name: "keycode", internalType: "Keycode", type: "bytes5" },
          { name: "funcSelector", internalType: "bytes4", type: "bytes4" },
        ],
      },
    ],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "newOwner", internalType: "address", type: "address" }],
    name: "transferOwnership",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "bAssetDelta_", internalType: "int256", type: "int256" },
      { name: "", internalType: "int256", type: "int256" },
      { name: "data_", internalType: "bytes", type: "bytes" },
    ],
    name: "uniswapV3SwapCallback",
    outputs: [],
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "floorTickLower",
        internalType: "int24",
        type: "int24",
        indexed: false,
      },
      {
        name: "anchorTickUpper",
        internalType: "int24",
        type: "int24",
        indexed: false,
      },
      {
        name: "floorLiquidity",
        internalType: "uint128",
        type: "uint128",
        indexed: false,
      },
      {
        name: "anchorLiquidity",
        internalType: "uint128",
        type: "uint128",
        indexed: false,
      },
    ],
    name: "LiquidityDeployed",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "user", internalType: "address", type: "address", indexed: true },
      {
        name: "newOwner",
        internalType: "address",
        type: "address",
        indexed: true,
      },
    ],
    name: "OwnershipTransferred",
  },
  { type: "error", inputs: [], name: "Callback_AlreadyComplete" },
  { type: "error", inputs: [], name: "Callback_BPOOLInvalidAddress" },
  { type: "error", inputs: [], name: "Callback_BPOOLReserveMismatch" },
  {
    type: "error",
    inputs: [
      { name: "capacityRatio", internalType: "uint256", type: "uint256" },
    ],
    name: "Callback_InvalidCapacityRatio",
  },
  { type: "error", inputs: [], name: "Callback_InvalidInitialization" },
  { type: "error", inputs: [], name: "Callback_InvalidParams" },
  { type: "error", inputs: [], name: "Callback_MissingFunds" },
  { type: "error", inputs: [], name: "Callback_NotAuthorized" },
  { type: "error", inputs: [], name: "Callback_NotImplemented" },
  {
    type: "error",
    inputs: [
      { name: "baseToken_", internalType: "address", type: "address" },
      { name: "bAsset_", internalType: "address", type: "address" },
    ],
    name: "Callback_Params_BAssetTokenMismatch",
  },
  { type: "error", inputs: [], name: "Callback_Params_InvalidAnchorTickUpper" },
  { type: "error", inputs: [], name: "Callback_Params_InvalidAnchorTickWidth" },
  {
    type: "error",
    inputs: [],
    name: "Callback_Params_InvalidDiscoveryTickWidth",
  },
  { type: "error", inputs: [], name: "Callback_Params_InvalidFloorRangeGap" },
  {
    type: "error",
    inputs: [],
    name: "Callback_Params_InvalidFloorReservesPercent",
  },
  { type: "error", inputs: [], name: "Callback_Params_InvalidPoolPercent" },
  {
    type: "error",
    inputs: [
      { name: "anchorRangeLower", internalType: "int24", type: "int24" },
      { name: "anchorRangeUpper", internalType: "int24", type: "int24" },
    ],
    name: "Callback_Params_InvalidPoolTargetTick",
  },
  { type: "error", inputs: [], name: "Callback_Params_InvalidRecipient" },
  { type: "error", inputs: [], name: "Callback_Params_RangeOutOfBounds" },
  {
    type: "error",
    inputs: [
      { name: "quoteToken_", internalType: "address", type: "address" },
      { name: "reserve_", internalType: "address", type: "address" },
    ],
    name: "Callback_Params_ReserveTokenMismatch",
  },
  {
    type: "error",
    inputs: [],
    name: "Callback_Params_UnsupportedAuctionFormat",
  },
  { type: "error", inputs: [], name: "Callback_Params_UnsupportedPoolFeeTier" },
  {
    type: "error",
    inputs: [
      { name: "currentTick", internalType: "int24", type: "int24" },
      { name: "auctionTick", internalType: "int24", type: "int24" },
    ],
    name: "Callback_PoolLessThanAuctionPrice",
  },
  { type: "error", inputs: [], name: "Callback_Swap_InvalidCaller" },
  { type: "error", inputs: [], name: "Callback_Swap_InvalidCase" },
  {
    type: "error",
    inputs: [{ name: "callbacks", internalType: "address", type: "address" }],
    name: "CallbacksAddressNotValid",
  },
  {
    type: "error",
    inputs: [{ name: "veecode_", internalType: "Veecode", type: "bytes7" }],
    name: "InvalidVeecode",
  },
  {
    type: "error",
    inputs: [{ name: "caller_", internalType: "address", type: "address" }],
    name: "KernelAdapter_OnlyKernel",
  },
  {
    type: "error",
    inputs: [{ name: "keycode_", internalType: "Keycode", type: "bytes5" }],
    name: "Policy_ModuleDoesNotExist",
  },
  {
    type: "error",
    inputs: [{ name: "expected_", internalType: "bytes", type: "bytes" }],
    name: "Policy_WrongModuleVersion",
  },
  { type: "error", inputs: [], name: "R" },
  { type: "error", inputs: [], name: "T" },
  {
    type: "error",
    inputs: [{ name: "token_", internalType: "address", type: "address" }],
    name: "UnsupportedToken",
  },
] as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// baselineAllocatedAllowlist
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const baselineAllocatedAllowlistAbi = [
  {
    stateMutability: "nonpayable",
    type: "constructor",
    inputs: [
      { name: "auctionHouse_", internalType: "address", type: "address" },
      { name: "baselineKernel_", internalType: "address", type: "address" },
      { name: "reserve_", internalType: "address", type: "address" },
      { name: "owner_", internalType: "address", type: "address" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "AUCTION_HOUSE",
    outputs: [{ name: "", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "BPOOL",
    outputs: [{ name: "", internalType: "contract IBPOOLv1", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "CREDT",
    outputs: [{ name: "", internalType: "contract ICREDTv1", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "LOOPS",
    outputs: [{ name: "", internalType: "contract ILOOPSv1", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "RESERVE",
    outputs: [{ name: "", internalType: "contract ERC20", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "auctionComplete",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "bAsset",
    outputs: [{ name: "", internalType: "contract ERC20", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "address", type: "address" }],
    name: "buyerSpent",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "newKernel_", internalType: "contract Kernel", type: "address" },
    ],
    name: "changeKernel",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [],
    name: "configureDependencies",
    outputs: [
      { name: "dependencies", internalType: "Keycode[]", type: "bytes5[]" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "floorReservesPercent",
    outputs: [{ name: "", internalType: "uint24", type: "uint24" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "isActive",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "kernel",
    outputs: [{ name: "", internalType: "contract Kernel", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "lotId",
    outputs: [{ name: "", internalType: "uint96", type: "uint96" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "uint96", type: "uint96" }],
    name: "lotIdRegistered",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "merkleRoot",
    outputs: [{ name: "", internalType: "bytes32", type: "bytes32" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "bidId", internalType: "uint64", type: "uint64" },
      { name: "buyer_", internalType: "address", type: "address" },
      { name: "amount_", internalType: "uint256", type: "uint256" },
      { name: "callbackData_", internalType: "bytes", type: "bytes" },
    ],
    name: "onBid",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "refund_", internalType: "uint256", type: "uint256" },
      { name: "prefunded_", internalType: "bool", type: "bool" },
      { name: "callbackData_", internalType: "bytes", type: "bytes" },
    ],
    name: "onCancel",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "seller_", internalType: "address", type: "address" },
      { name: "baseToken_", internalType: "address", type: "address" },
      { name: "quoteToken_", internalType: "address", type: "address" },
      { name: "capacity_", internalType: "uint256", type: "uint256" },
      { name: "prefund_", internalType: "bool", type: "bool" },
      { name: "callbackData_", internalType: "bytes", type: "bytes" },
    ],
    name: "onCreate",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "curatorFee_", internalType: "uint256", type: "uint256" },
      { name: "prefund_", internalType: "bool", type: "bool" },
      { name: "callbackData_", internalType: "bytes", type: "bytes" },
    ],
    name: "onCurate",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "buyer_", internalType: "address", type: "address" },
      { name: "amount_", internalType: "uint256", type: "uint256" },
      { name: "payout_", internalType: "uint256", type: "uint256" },
      { name: "prefunded_", internalType: "bool", type: "bool" },
      { name: "callbackData_", internalType: "bytes", type: "bytes" },
    ],
    name: "onPurchase",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "proceeds_", internalType: "uint256", type: "uint256" },
      { name: "refund_", internalType: "uint256", type: "uint256" },
      { name: "callbackData_", internalType: "bytes", type: "bytes" },
    ],
    name: "onSettle",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "owner",
    outputs: [{ name: "", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "poolPercent",
    outputs: [{ name: "", internalType: "uint24", type: "uint24" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "poolTargetTick",
    outputs: [{ name: "", internalType: "int24", type: "int24" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "recipient",
    outputs: [{ name: "", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "requestPermissions",
    outputs: [
      {
        name: "requests",
        internalType: "struct Permissions[]",
        type: "tuple[]",
        components: [
          { name: "keycode", internalType: "Keycode", type: "bytes5" },
          { name: "funcSelector", internalType: "bytes4", type: "bytes4" },
        ],
      },
    ],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "merkleRoot_", internalType: "bytes32", type: "bytes32" }],
    name: "setMerkleRoot",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "newOwner", internalType: "address", type: "address" }],
    name: "transferOwnership",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "bAssetDelta_", internalType: "int256", type: "int256" },
      { name: "", internalType: "int256", type: "int256" },
      { name: "data_", internalType: "bytes", type: "bytes" },
    ],
    name: "uniswapV3SwapCallback",
    outputs: [],
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "floorTickLower",
        internalType: "int24",
        type: "int24",
        indexed: false,
      },
      {
        name: "anchorTickUpper",
        internalType: "int24",
        type: "int24",
        indexed: false,
      },
      {
        name: "floorLiquidity",
        internalType: "uint128",
        type: "uint128",
        indexed: false,
      },
      {
        name: "anchorLiquidity",
        internalType: "uint128",
        type: "uint128",
        indexed: false,
      },
    ],
    name: "LiquidityDeployed",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "merkleRoot",
        internalType: "bytes32",
        type: "bytes32",
        indexed: false,
      },
    ],
    name: "MerkleRootSet",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "user", internalType: "address", type: "address", indexed: true },
      {
        name: "newOwner",
        internalType: "address",
        type: "address",
        indexed: true,
      },
    ],
    name: "OwnershipTransferred",
  },
  { type: "error", inputs: [], name: "Callback_AlreadyComplete" },
  { type: "error", inputs: [], name: "Callback_BPOOLInvalidAddress" },
  { type: "error", inputs: [], name: "Callback_BPOOLReserveMismatch" },
  { type: "error", inputs: [], name: "Callback_ExceedsLimit" },
  {
    type: "error",
    inputs: [
      { name: "capacityRatio", internalType: "uint256", type: "uint256" },
    ],
    name: "Callback_InvalidCapacityRatio",
  },
  { type: "error", inputs: [], name: "Callback_InvalidInitialization" },
  { type: "error", inputs: [], name: "Callback_InvalidParams" },
  { type: "error", inputs: [], name: "Callback_InvalidState" },
  { type: "error", inputs: [], name: "Callback_MissingFunds" },
  { type: "error", inputs: [], name: "Callback_NotAuthorized" },
  { type: "error", inputs: [], name: "Callback_NotImplemented" },
  {
    type: "error",
    inputs: [
      { name: "baseToken_", internalType: "address", type: "address" },
      { name: "bAsset_", internalType: "address", type: "address" },
    ],
    name: "Callback_Params_BAssetTokenMismatch",
  },
  { type: "error", inputs: [], name: "Callback_Params_InvalidAnchorTickUpper" },
  { type: "error", inputs: [], name: "Callback_Params_InvalidAnchorTickWidth" },
  {
    type: "error",
    inputs: [],
    name: "Callback_Params_InvalidDiscoveryTickWidth",
  },
  { type: "error", inputs: [], name: "Callback_Params_InvalidFloorRangeGap" },
  {
    type: "error",
    inputs: [],
    name: "Callback_Params_InvalidFloorReservesPercent",
  },
  { type: "error", inputs: [], name: "Callback_Params_InvalidPoolPercent" },
  {
    type: "error",
    inputs: [
      { name: "anchorRangeLower", internalType: "int24", type: "int24" },
      { name: "anchorRangeUpper", internalType: "int24", type: "int24" },
    ],
    name: "Callback_Params_InvalidPoolTargetTick",
  },
  { type: "error", inputs: [], name: "Callback_Params_InvalidRecipient" },
  { type: "error", inputs: [], name: "Callback_Params_RangeOutOfBounds" },
  {
    type: "error",
    inputs: [
      { name: "quoteToken_", internalType: "address", type: "address" },
      { name: "reserve_", internalType: "address", type: "address" },
    ],
    name: "Callback_Params_ReserveTokenMismatch",
  },
  {
    type: "error",
    inputs: [],
    name: "Callback_Params_UnsupportedAuctionFormat",
  },
  { type: "error", inputs: [], name: "Callback_Params_UnsupportedPoolFeeTier" },
  {
    type: "error",
    inputs: [
      { name: "currentTick", internalType: "int24", type: "int24" },
      { name: "auctionTick", internalType: "int24", type: "int24" },
    ],
    name: "Callback_PoolLessThanAuctionPrice",
  },
  { type: "error", inputs: [], name: "Callback_Swap_InvalidCaller" },
  { type: "error", inputs: [], name: "Callback_Swap_InvalidCase" },
  {
    type: "error",
    inputs: [{ name: "callbacks", internalType: "address", type: "address" }],
    name: "CallbacksAddressNotValid",
  },
  {
    type: "error",
    inputs: [{ name: "veecode_", internalType: "Veecode", type: "bytes7" }],
    name: "InvalidVeecode",
  },
  {
    type: "error",
    inputs: [{ name: "caller_", internalType: "address", type: "address" }],
    name: "KernelAdapter_OnlyKernel",
  },
  {
    type: "error",
    inputs: [{ name: "keycode_", internalType: "Keycode", type: "bytes5" }],
    name: "Policy_ModuleDoesNotExist",
  },
  {
    type: "error",
    inputs: [{ name: "expected_", internalType: "bytes", type: "bytes" }],
    name: "Policy_WrongModuleVersion",
  },
  { type: "error", inputs: [], name: "R" },
  { type: "error", inputs: [], name: "T" },
  {
    type: "error",
    inputs: [{ name: "token_", internalType: "address", type: "address" }],
    name: "UnsupportedToken",
  },
] as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// baselineAllowlist
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const baselineAllowlistAbi = [
  {
    stateMutability: "nonpayable",
    type: "constructor",
    inputs: [
      { name: "auctionHouse_", internalType: "address", type: "address" },
      { name: "baselineKernel_", internalType: "address", type: "address" },
      { name: "reserve_", internalType: "address", type: "address" },
      { name: "owner_", internalType: "address", type: "address" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "AUCTION_HOUSE",
    outputs: [{ name: "", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "BPOOL",
    outputs: [{ name: "", internalType: "contract IBPOOLv1", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "CREDT",
    outputs: [{ name: "", internalType: "contract ICREDTv1", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "LOOPS",
    outputs: [{ name: "", internalType: "contract ILOOPSv1", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "RESERVE",
    outputs: [{ name: "", internalType: "contract ERC20", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "auctionComplete",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "bAsset",
    outputs: [{ name: "", internalType: "contract ERC20", type: "address" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "newKernel_", internalType: "contract Kernel", type: "address" },
    ],
    name: "changeKernel",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [],
    name: "configureDependencies",
    outputs: [
      { name: "dependencies", internalType: "Keycode[]", type: "bytes5[]" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "floorReservesPercent",
    outputs: [{ name: "", internalType: "uint24", type: "uint24" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "isActive",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "kernel",
    outputs: [{ name: "", internalType: "contract Kernel", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "lotId",
    outputs: [{ name: "", internalType: "uint96", type: "uint96" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "uint96", type: "uint96" }],
    name: "lotIdRegistered",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "merkleRoot",
    outputs: [{ name: "", internalType: "bytes32", type: "bytes32" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "bidId", internalType: "uint64", type: "uint64" },
      { name: "buyer_", internalType: "address", type: "address" },
      { name: "amount_", internalType: "uint256", type: "uint256" },
      { name: "callbackData_", internalType: "bytes", type: "bytes" },
    ],
    name: "onBid",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "refund_", internalType: "uint256", type: "uint256" },
      { name: "prefunded_", internalType: "bool", type: "bool" },
      { name: "callbackData_", internalType: "bytes", type: "bytes" },
    ],
    name: "onCancel",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "seller_", internalType: "address", type: "address" },
      { name: "baseToken_", internalType: "address", type: "address" },
      { name: "quoteToken_", internalType: "address", type: "address" },
      { name: "capacity_", internalType: "uint256", type: "uint256" },
      { name: "prefund_", internalType: "bool", type: "bool" },
      { name: "callbackData_", internalType: "bytes", type: "bytes" },
    ],
    name: "onCreate",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "curatorFee_", internalType: "uint256", type: "uint256" },
      { name: "prefund_", internalType: "bool", type: "bool" },
      { name: "callbackData_", internalType: "bytes", type: "bytes" },
    ],
    name: "onCurate",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "buyer_", internalType: "address", type: "address" },
      { name: "amount_", internalType: "uint256", type: "uint256" },
      { name: "payout_", internalType: "uint256", type: "uint256" },
      { name: "prefunded_", internalType: "bool", type: "bool" },
      { name: "callbackData_", internalType: "bytes", type: "bytes" },
    ],
    name: "onPurchase",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "proceeds_", internalType: "uint256", type: "uint256" },
      { name: "refund_", internalType: "uint256", type: "uint256" },
      { name: "callbackData_", internalType: "bytes", type: "bytes" },
    ],
    name: "onSettle",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "owner",
    outputs: [{ name: "", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "poolPercent",
    outputs: [{ name: "", internalType: "uint24", type: "uint24" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "poolTargetTick",
    outputs: [{ name: "", internalType: "int24", type: "int24" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "recipient",
    outputs: [{ name: "", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "requestPermissions",
    outputs: [
      {
        name: "requests",
        internalType: "struct Permissions[]",
        type: "tuple[]",
        components: [
          { name: "keycode", internalType: "Keycode", type: "bytes5" },
          { name: "funcSelector", internalType: "bytes4", type: "bytes4" },
        ],
      },
    ],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "merkleRoot_", internalType: "bytes32", type: "bytes32" }],
    name: "setMerkleRoot",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "newOwner", internalType: "address", type: "address" }],
    name: "transferOwnership",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "bAssetDelta_", internalType: "int256", type: "int256" },
      { name: "", internalType: "int256", type: "int256" },
      { name: "data_", internalType: "bytes", type: "bytes" },
    ],
    name: "uniswapV3SwapCallback",
    outputs: [],
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "floorTickLower",
        internalType: "int24",
        type: "int24",
        indexed: false,
      },
      {
        name: "anchorTickUpper",
        internalType: "int24",
        type: "int24",
        indexed: false,
      },
      {
        name: "floorLiquidity",
        internalType: "uint128",
        type: "uint128",
        indexed: false,
      },
      {
        name: "anchorLiquidity",
        internalType: "uint128",
        type: "uint128",
        indexed: false,
      },
    ],
    name: "LiquidityDeployed",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "merkleRoot",
        internalType: "bytes32",
        type: "bytes32",
        indexed: false,
      },
    ],
    name: "MerkleRootSet",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "user", internalType: "address", type: "address", indexed: true },
      {
        name: "newOwner",
        internalType: "address",
        type: "address",
        indexed: true,
      },
    ],
    name: "OwnershipTransferred",
  },
  { type: "error", inputs: [], name: "Callback_AlreadyComplete" },
  { type: "error", inputs: [], name: "Callback_BPOOLInvalidAddress" },
  { type: "error", inputs: [], name: "Callback_BPOOLReserveMismatch" },
  {
    type: "error",
    inputs: [
      { name: "capacityRatio", internalType: "uint256", type: "uint256" },
    ],
    name: "Callback_InvalidCapacityRatio",
  },
  { type: "error", inputs: [], name: "Callback_InvalidInitialization" },
  { type: "error", inputs: [], name: "Callback_InvalidParams" },
  { type: "error", inputs: [], name: "Callback_InvalidState" },
  { type: "error", inputs: [], name: "Callback_MissingFunds" },
  { type: "error", inputs: [], name: "Callback_NotAuthorized" },
  { type: "error", inputs: [], name: "Callback_NotImplemented" },
  {
    type: "error",
    inputs: [
      { name: "baseToken_", internalType: "address", type: "address" },
      { name: "bAsset_", internalType: "address", type: "address" },
    ],
    name: "Callback_Params_BAssetTokenMismatch",
  },
  { type: "error", inputs: [], name: "Callback_Params_InvalidAnchorTickUpper" },
  { type: "error", inputs: [], name: "Callback_Params_InvalidAnchorTickWidth" },
  {
    type: "error",
    inputs: [],
    name: "Callback_Params_InvalidDiscoveryTickWidth",
  },
  { type: "error", inputs: [], name: "Callback_Params_InvalidFloorRangeGap" },
  {
    type: "error",
    inputs: [],
    name: "Callback_Params_InvalidFloorReservesPercent",
  },
  { type: "error", inputs: [], name: "Callback_Params_InvalidPoolPercent" },
  {
    type: "error",
    inputs: [
      { name: "anchorRangeLower", internalType: "int24", type: "int24" },
      { name: "anchorRangeUpper", internalType: "int24", type: "int24" },
    ],
    name: "Callback_Params_InvalidPoolTargetTick",
  },
  { type: "error", inputs: [], name: "Callback_Params_InvalidRecipient" },
  { type: "error", inputs: [], name: "Callback_Params_RangeOutOfBounds" },
  {
    type: "error",
    inputs: [
      { name: "quoteToken_", internalType: "address", type: "address" },
      { name: "reserve_", internalType: "address", type: "address" },
    ],
    name: "Callback_Params_ReserveTokenMismatch",
  },
  {
    type: "error",
    inputs: [],
    name: "Callback_Params_UnsupportedAuctionFormat",
  },
  { type: "error", inputs: [], name: "Callback_Params_UnsupportedPoolFeeTier" },
  {
    type: "error",
    inputs: [
      { name: "currentTick", internalType: "int24", type: "int24" },
      { name: "auctionTick", internalType: "int24", type: "int24" },
    ],
    name: "Callback_PoolLessThanAuctionPrice",
  },
  { type: "error", inputs: [], name: "Callback_Swap_InvalidCaller" },
  { type: "error", inputs: [], name: "Callback_Swap_InvalidCase" },
  {
    type: "error",
    inputs: [{ name: "callbacks", internalType: "address", type: "address" }],
    name: "CallbacksAddressNotValid",
  },
  {
    type: "error",
    inputs: [{ name: "veecode_", internalType: "Veecode", type: "bytes7" }],
    name: "InvalidVeecode",
  },
  {
    type: "error",
    inputs: [{ name: "caller_", internalType: "address", type: "address" }],
    name: "KernelAdapter_OnlyKernel",
  },
  {
    type: "error",
    inputs: [{ name: "keycode_", internalType: "Keycode", type: "bytes5" }],
    name: "Policy_ModuleDoesNotExist",
  },
  {
    type: "error",
    inputs: [{ name: "expected_", internalType: "bytes", type: "bytes" }],
    name: "Policy_WrongModuleVersion",
  },
  { type: "error", inputs: [], name: "R" },
  { type: "error", inputs: [], name: "T" },
  {
    type: "error",
    inputs: [{ name: "token_", internalType: "address", type: "address" }],
    name: "UnsupportedToken",
  },
] as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// baselineCappedAllowlist
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const baselineCappedAllowlistAbi = [
  {
    stateMutability: "nonpayable",
    type: "constructor",
    inputs: [
      { name: "auctionHouse_", internalType: "address", type: "address" },
      { name: "baselineKernel_", internalType: "address", type: "address" },
      { name: "reserve_", internalType: "address", type: "address" },
      { name: "owner_", internalType: "address", type: "address" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "AUCTION_HOUSE",
    outputs: [{ name: "", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "BPOOL",
    outputs: [{ name: "", internalType: "contract IBPOOLv1", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "CREDT",
    outputs: [{ name: "", internalType: "contract ICREDTv1", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "LOOPS",
    outputs: [{ name: "", internalType: "contract ILOOPSv1", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "RESERVE",
    outputs: [{ name: "", internalType: "contract ERC20", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "auctionComplete",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "bAsset",
    outputs: [{ name: "", internalType: "contract ERC20", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "buyerLimit",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "address", type: "address" }],
    name: "buyerSpent",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "newKernel_", internalType: "contract Kernel", type: "address" },
    ],
    name: "changeKernel",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [],
    name: "configureDependencies",
    outputs: [
      { name: "dependencies", internalType: "Keycode[]", type: "bytes5[]" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "floorReservesPercent",
    outputs: [{ name: "", internalType: "uint24", type: "uint24" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "isActive",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "kernel",
    outputs: [{ name: "", internalType: "contract Kernel", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "lotId",
    outputs: [{ name: "", internalType: "uint96", type: "uint96" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "uint96", type: "uint96" }],
    name: "lotIdRegistered",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "merkleRoot",
    outputs: [{ name: "", internalType: "bytes32", type: "bytes32" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "bidId", internalType: "uint64", type: "uint64" },
      { name: "buyer_", internalType: "address", type: "address" },
      { name: "amount_", internalType: "uint256", type: "uint256" },
      { name: "callbackData_", internalType: "bytes", type: "bytes" },
    ],
    name: "onBid",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "refund_", internalType: "uint256", type: "uint256" },
      { name: "prefunded_", internalType: "bool", type: "bool" },
      { name: "callbackData_", internalType: "bytes", type: "bytes" },
    ],
    name: "onCancel",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "seller_", internalType: "address", type: "address" },
      { name: "baseToken_", internalType: "address", type: "address" },
      { name: "quoteToken_", internalType: "address", type: "address" },
      { name: "capacity_", internalType: "uint256", type: "uint256" },
      { name: "prefund_", internalType: "bool", type: "bool" },
      { name: "callbackData_", internalType: "bytes", type: "bytes" },
    ],
    name: "onCreate",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "curatorFee_", internalType: "uint256", type: "uint256" },
      { name: "prefund_", internalType: "bool", type: "bool" },
      { name: "callbackData_", internalType: "bytes", type: "bytes" },
    ],
    name: "onCurate",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "buyer_", internalType: "address", type: "address" },
      { name: "amount_", internalType: "uint256", type: "uint256" },
      { name: "payout_", internalType: "uint256", type: "uint256" },
      { name: "prefunded_", internalType: "bool", type: "bool" },
      { name: "callbackData_", internalType: "bytes", type: "bytes" },
    ],
    name: "onPurchase",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "proceeds_", internalType: "uint256", type: "uint256" },
      { name: "refund_", internalType: "uint256", type: "uint256" },
      { name: "callbackData_", internalType: "bytes", type: "bytes" },
    ],
    name: "onSettle",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "owner",
    outputs: [{ name: "", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "poolPercent",
    outputs: [{ name: "", internalType: "uint24", type: "uint24" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "poolTargetTick",
    outputs: [{ name: "", internalType: "int24", type: "int24" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "recipient",
    outputs: [{ name: "", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "requestPermissions",
    outputs: [
      {
        name: "requests",
        internalType: "struct Permissions[]",
        type: "tuple[]",
        components: [
          { name: "keycode", internalType: "Keycode", type: "bytes5" },
          { name: "funcSelector", internalType: "bytes4", type: "bytes4" },
        ],
      },
    ],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "merkleRoot_", internalType: "bytes32", type: "bytes32" }],
    name: "setMerkleRoot",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "newOwner", internalType: "address", type: "address" }],
    name: "transferOwnership",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "bAssetDelta_", internalType: "int256", type: "int256" },
      { name: "", internalType: "int256", type: "int256" },
      { name: "data_", internalType: "bytes", type: "bytes" },
    ],
    name: "uniswapV3SwapCallback",
    outputs: [],
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "floorTickLower",
        internalType: "int24",
        type: "int24",
        indexed: false,
      },
      {
        name: "anchorTickUpper",
        internalType: "int24",
        type: "int24",
        indexed: false,
      },
      {
        name: "floorLiquidity",
        internalType: "uint128",
        type: "uint128",
        indexed: false,
      },
      {
        name: "anchorLiquidity",
        internalType: "uint128",
        type: "uint128",
        indexed: false,
      },
    ],
    name: "LiquidityDeployed",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "merkleRoot",
        internalType: "bytes32",
        type: "bytes32",
        indexed: false,
      },
    ],
    name: "MerkleRootSet",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "user", internalType: "address", type: "address", indexed: true },
      {
        name: "newOwner",
        internalType: "address",
        type: "address",
        indexed: true,
      },
    ],
    name: "OwnershipTransferred",
  },
  { type: "error", inputs: [], name: "Callback_AlreadyComplete" },
  { type: "error", inputs: [], name: "Callback_BPOOLInvalidAddress" },
  { type: "error", inputs: [], name: "Callback_BPOOLReserveMismatch" },
  { type: "error", inputs: [], name: "Callback_ExceedsLimit" },
  {
    type: "error",
    inputs: [
      { name: "capacityRatio", internalType: "uint256", type: "uint256" },
    ],
    name: "Callback_InvalidCapacityRatio",
  },
  { type: "error", inputs: [], name: "Callback_InvalidInitialization" },
  { type: "error", inputs: [], name: "Callback_InvalidParams" },
  { type: "error", inputs: [], name: "Callback_InvalidState" },
  { type: "error", inputs: [], name: "Callback_MissingFunds" },
  { type: "error", inputs: [], name: "Callback_NotAuthorized" },
  { type: "error", inputs: [], name: "Callback_NotImplemented" },
  {
    type: "error",
    inputs: [
      { name: "baseToken_", internalType: "address", type: "address" },
      { name: "bAsset_", internalType: "address", type: "address" },
    ],
    name: "Callback_Params_BAssetTokenMismatch",
  },
  { type: "error", inputs: [], name: "Callback_Params_InvalidAnchorTickUpper" },
  { type: "error", inputs: [], name: "Callback_Params_InvalidAnchorTickWidth" },
  {
    type: "error",
    inputs: [],
    name: "Callback_Params_InvalidDiscoveryTickWidth",
  },
  { type: "error", inputs: [], name: "Callback_Params_InvalidFloorRangeGap" },
  {
    type: "error",
    inputs: [],
    name: "Callback_Params_InvalidFloorReservesPercent",
  },
  { type: "error", inputs: [], name: "Callback_Params_InvalidPoolPercent" },
  {
    type: "error",
    inputs: [
      { name: "anchorRangeLower", internalType: "int24", type: "int24" },
      { name: "anchorRangeUpper", internalType: "int24", type: "int24" },
    ],
    name: "Callback_Params_InvalidPoolTargetTick",
  },
  { type: "error", inputs: [], name: "Callback_Params_InvalidRecipient" },
  { type: "error", inputs: [], name: "Callback_Params_RangeOutOfBounds" },
  {
    type: "error",
    inputs: [
      { name: "quoteToken_", internalType: "address", type: "address" },
      { name: "reserve_", internalType: "address", type: "address" },
    ],
    name: "Callback_Params_ReserveTokenMismatch",
  },
  {
    type: "error",
    inputs: [],
    name: "Callback_Params_UnsupportedAuctionFormat",
  },
  { type: "error", inputs: [], name: "Callback_Params_UnsupportedPoolFeeTier" },
  {
    type: "error",
    inputs: [
      { name: "currentTick", internalType: "int24", type: "int24" },
      { name: "auctionTick", internalType: "int24", type: "int24" },
    ],
    name: "Callback_PoolLessThanAuctionPrice",
  },
  { type: "error", inputs: [], name: "Callback_Swap_InvalidCaller" },
  { type: "error", inputs: [], name: "Callback_Swap_InvalidCase" },
  {
    type: "error",
    inputs: [{ name: "callbacks", internalType: "address", type: "address" }],
    name: "CallbacksAddressNotValid",
  },
  {
    type: "error",
    inputs: [{ name: "veecode_", internalType: "Veecode", type: "bytes7" }],
    name: "InvalidVeecode",
  },
  {
    type: "error",
    inputs: [{ name: "caller_", internalType: "address", type: "address" }],
    name: "KernelAdapter_OnlyKernel",
  },
  {
    type: "error",
    inputs: [{ name: "keycode_", internalType: "Keycode", type: "bytes5" }],
    name: "Policy_ModuleDoesNotExist",
  },
  {
    type: "error",
    inputs: [{ name: "expected_", internalType: "bytes", type: "bytes" }],
    name: "Policy_WrongModuleVersion",
  },
  { type: "error", inputs: [], name: "R" },
  { type: "error", inputs: [], name: "T" },
  {
    type: "error",
    inputs: [{ name: "token_", internalType: "address", type: "address" }],
    name: "UnsupportedToken",
  },
] as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// baselineTokenAllowlist
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const baselineTokenAllowlistAbi = [
  {
    stateMutability: "nonpayable",
    type: "constructor",
    inputs: [
      { name: "auctionHouse_", internalType: "address", type: "address" },
      { name: "baselineKernel_", internalType: "address", type: "address" },
      { name: "reserve_", internalType: "address", type: "address" },
      { name: "owner_", internalType: "address", type: "address" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "AUCTION_HOUSE",
    outputs: [{ name: "", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "BPOOL",
    outputs: [{ name: "", internalType: "contract IBPOOLv1", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "CREDT",
    outputs: [{ name: "", internalType: "contract ICREDTv1", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "LOOPS",
    outputs: [{ name: "", internalType: "contract ILOOPSv1", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "RESERVE",
    outputs: [{ name: "", internalType: "contract ERC20", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "auctionComplete",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "bAsset",
    outputs: [{ name: "", internalType: "contract ERC20", type: "address" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "newKernel_", internalType: "contract Kernel", type: "address" },
    ],
    name: "changeKernel",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [],
    name: "configureDependencies",
    outputs: [
      { name: "dependencies", internalType: "Keycode[]", type: "bytes5[]" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "floorReservesPercent",
    outputs: [{ name: "", internalType: "uint24", type: "uint24" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "isActive",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "kernel",
    outputs: [{ name: "", internalType: "contract Kernel", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "lotId",
    outputs: [{ name: "", internalType: "uint96", type: "uint96" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "uint96", type: "uint96" }],
    name: "lotIdRegistered",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "bidId", internalType: "uint64", type: "uint64" },
      { name: "buyer_", internalType: "address", type: "address" },
      { name: "amount_", internalType: "uint256", type: "uint256" },
      { name: "callbackData_", internalType: "bytes", type: "bytes" },
    ],
    name: "onBid",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "refund_", internalType: "uint256", type: "uint256" },
      { name: "prefunded_", internalType: "bool", type: "bool" },
      { name: "callbackData_", internalType: "bytes", type: "bytes" },
    ],
    name: "onCancel",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "seller_", internalType: "address", type: "address" },
      { name: "baseToken_", internalType: "address", type: "address" },
      { name: "quoteToken_", internalType: "address", type: "address" },
      { name: "capacity_", internalType: "uint256", type: "uint256" },
      { name: "prefund_", internalType: "bool", type: "bool" },
      { name: "callbackData_", internalType: "bytes", type: "bytes" },
    ],
    name: "onCreate",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "curatorFee_", internalType: "uint256", type: "uint256" },
      { name: "prefund_", internalType: "bool", type: "bool" },
      { name: "callbackData_", internalType: "bytes", type: "bytes" },
    ],
    name: "onCurate",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "buyer_", internalType: "address", type: "address" },
      { name: "amount_", internalType: "uint256", type: "uint256" },
      { name: "payout_", internalType: "uint256", type: "uint256" },
      { name: "prefunded_", internalType: "bool", type: "bool" },
      { name: "callbackData_", internalType: "bytes", type: "bytes" },
    ],
    name: "onPurchase",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "proceeds_", internalType: "uint256", type: "uint256" },
      { name: "refund_", internalType: "uint256", type: "uint256" },
      { name: "callbackData_", internalType: "bytes", type: "bytes" },
    ],
    name: "onSettle",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "owner",
    outputs: [{ name: "", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "poolPercent",
    outputs: [{ name: "", internalType: "uint24", type: "uint24" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "poolTargetTick",
    outputs: [{ name: "", internalType: "int24", type: "int24" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "recipient",
    outputs: [{ name: "", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "requestPermissions",
    outputs: [
      {
        name: "requests",
        internalType: "struct Permissions[]",
        type: "tuple[]",
        components: [
          { name: "keycode", internalType: "Keycode", type: "bytes5" },
          { name: "funcSelector", internalType: "bytes4", type: "bytes4" },
        ],
      },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "tokenCheck",
    outputs: [
      {
        name: "token",
        internalType: "contract ITokenBalance",
        type: "address",
      },
      { name: "threshold", internalType: "uint256", type: "uint256" },
    ],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "newOwner", internalType: "address", type: "address" }],
    name: "transferOwnership",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "bAssetDelta_", internalType: "int256", type: "int256" },
      { name: "", internalType: "int256", type: "int256" },
      { name: "data_", internalType: "bytes", type: "bytes" },
    ],
    name: "uniswapV3SwapCallback",
    outputs: [],
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "floorTickLower",
        internalType: "int24",
        type: "int24",
        indexed: false,
      },
      {
        name: "anchorTickUpper",
        internalType: "int24",
        type: "int24",
        indexed: false,
      },
      {
        name: "floorLiquidity",
        internalType: "uint128",
        type: "uint128",
        indexed: false,
      },
      {
        name: "anchorLiquidity",
        internalType: "uint128",
        type: "uint128",
        indexed: false,
      },
    ],
    name: "LiquidityDeployed",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "user", internalType: "address", type: "address", indexed: true },
      {
        name: "newOwner",
        internalType: "address",
        type: "address",
        indexed: true,
      },
    ],
    name: "OwnershipTransferred",
  },
  { type: "error", inputs: [], name: "Callback_AlreadyComplete" },
  { type: "error", inputs: [], name: "Callback_BPOOLInvalidAddress" },
  { type: "error", inputs: [], name: "Callback_BPOOLReserveMismatch" },
  {
    type: "error",
    inputs: [
      { name: "capacityRatio", internalType: "uint256", type: "uint256" },
    ],
    name: "Callback_InvalidCapacityRatio",
  },
  { type: "error", inputs: [], name: "Callback_InvalidInitialization" },
  { type: "error", inputs: [], name: "Callback_InvalidParams" },
  { type: "error", inputs: [], name: "Callback_MissingFunds" },
  { type: "error", inputs: [], name: "Callback_NotAuthorized" },
  { type: "error", inputs: [], name: "Callback_NotImplemented" },
  {
    type: "error",
    inputs: [
      { name: "baseToken_", internalType: "address", type: "address" },
      { name: "bAsset_", internalType: "address", type: "address" },
    ],
    name: "Callback_Params_BAssetTokenMismatch",
  },
  { type: "error", inputs: [], name: "Callback_Params_InvalidAnchorTickUpper" },
  { type: "error", inputs: [], name: "Callback_Params_InvalidAnchorTickWidth" },
  {
    type: "error",
    inputs: [],
    name: "Callback_Params_InvalidDiscoveryTickWidth",
  },
  { type: "error", inputs: [], name: "Callback_Params_InvalidFloorRangeGap" },
  {
    type: "error",
    inputs: [],
    name: "Callback_Params_InvalidFloorReservesPercent",
  },
  { type: "error", inputs: [], name: "Callback_Params_InvalidPoolPercent" },
  {
    type: "error",
    inputs: [
      { name: "anchorRangeLower", internalType: "int24", type: "int24" },
      { name: "anchorRangeUpper", internalType: "int24", type: "int24" },
    ],
    name: "Callback_Params_InvalidPoolTargetTick",
  },
  { type: "error", inputs: [], name: "Callback_Params_InvalidRecipient" },
  { type: "error", inputs: [], name: "Callback_Params_RangeOutOfBounds" },
  {
    type: "error",
    inputs: [
      { name: "quoteToken_", internalType: "address", type: "address" },
      { name: "reserve_", internalType: "address", type: "address" },
    ],
    name: "Callback_Params_ReserveTokenMismatch",
  },
  {
    type: "error",
    inputs: [],
    name: "Callback_Params_UnsupportedAuctionFormat",
  },
  { type: "error", inputs: [], name: "Callback_Params_UnsupportedPoolFeeTier" },
  {
    type: "error",
    inputs: [
      { name: "currentTick", internalType: "int24", type: "int24" },
      { name: "auctionTick", internalType: "int24", type: "int24" },
    ],
    name: "Callback_PoolLessThanAuctionPrice",
  },
  { type: "error", inputs: [], name: "Callback_Swap_InvalidCaller" },
  { type: "error", inputs: [], name: "Callback_Swap_InvalidCase" },
  {
    type: "error",
    inputs: [{ name: "callbacks", internalType: "address", type: "address" }],
    name: "CallbacksAddressNotValid",
  },
  {
    type: "error",
    inputs: [{ name: "veecode_", internalType: "Veecode", type: "bytes7" }],
    name: "InvalidVeecode",
  },
  {
    type: "error",
    inputs: [{ name: "caller_", internalType: "address", type: "address" }],
    name: "KernelAdapter_OnlyKernel",
  },
  {
    type: "error",
    inputs: [{ name: "keycode_", internalType: "Keycode", type: "bytes5" }],
    name: "Policy_ModuleDoesNotExist",
  },
  {
    type: "error",
    inputs: [{ name: "expected_", internalType: "bytes", type: "bytes" }],
    name: "Policy_WrongModuleVersion",
  },
  { type: "error", inputs: [], name: "R" },
  { type: "error", inputs: [], name: "T" },
  {
    type: "error",
    inputs: [{ name: "token_", internalType: "address", type: "address" }],
    name: "UnsupportedToken",
  },
] as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// batchAuctionHouse
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const batchAuctionHouseAbi = [
  {
    stateMutability: "nonpayable",
    type: "constructor",
    inputs: [
      { name: "owner_", internalType: "address", type: "address" },
      { name: "protocol_", internalType: "address", type: "address" },
      { name: "permit2_", internalType: "address", type: "address" },
    ],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "lotId_", internalType: "uint96", type: "uint96" }],
    name: "abort",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      {
        name: "routing_",
        internalType: "struct IAuctionHouse.RoutingParams",
        type: "tuple",
        components: [
          { name: "auctionType", internalType: "Keycode", type: "bytes5" },
          { name: "baseToken", internalType: "address", type: "address" },
          { name: "quoteToken", internalType: "address", type: "address" },
          { name: "curator", internalType: "address", type: "address" },
          { name: "referrerFee", internalType: "uint48", type: "uint48" },
          {
            name: "callbacks",
            internalType: "contract ICallback",
            type: "address",
          },
          { name: "callbackData", internalType: "bytes", type: "bytes" },
          { name: "derivativeType", internalType: "Keycode", type: "bytes5" },
          { name: "derivativeParams", internalType: "bytes", type: "bytes" },
          { name: "wrapDerivative", internalType: "bool", type: "bool" },
        ],
      },
      {
        name: "params_",
        internalType: "struct IAuction.AuctionParams",
        type: "tuple",
        components: [
          { name: "start", internalType: "uint48", type: "uint48" },
          { name: "duration", internalType: "uint48", type: "uint48" },
          { name: "capacityInQuote", internalType: "bool", type: "bool" },
          { name: "capacity", internalType: "uint256", type: "uint256" },
          { name: "implParams", internalType: "bytes", type: "bytes" },
        ],
      },
      { name: "infoHash_", internalType: "string", type: "string" },
    ],
    name: "auction",
    outputs: [{ name: "lotId", internalType: "uint96", type: "uint96" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      {
        name: "params_",
        internalType: "struct IBatchAuctionHouse.BidParams",
        type: "tuple",
        components: [
          { name: "lotId", internalType: "uint96", type: "uint96" },
          { name: "bidder", internalType: "address", type: "address" },
          { name: "referrer", internalType: "address", type: "address" },
          { name: "amount", internalType: "uint256", type: "uint256" },
          { name: "auctionData", internalType: "bytes", type: "bytes" },
          { name: "permit2Data", internalType: "bytes", type: "bytes" },
        ],
      },
      { name: "callbackData_", internalType: "bytes", type: "bytes" },
    ],
    name: "bid",
    outputs: [{ name: "bidId", internalType: "uint64", type: "uint64" }],
  },
  {
    stateMutability: "pure",
    type: "function",
    inputs: [
      { name: "protocolFee_", internalType: "uint48", type: "uint48" },
      { name: "referrerFee_", internalType: "uint48", type: "uint48" },
      { name: "hasReferrer_", internalType: "bool", type: "bool" },
      { name: "amount_", internalType: "uint256", type: "uint256" },
    ],
    name: "calculateQuoteFees",
    outputs: [
      { name: "toReferrer", internalType: "uint256", type: "uint256" },
      { name: "toProtocol", internalType: "uint256", type: "uint256" },
    ],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "callbackData_", internalType: "bytes", type: "bytes" },
    ],
    name: "cancel",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "bidIds_", internalType: "uint64[]", type: "uint64[]" },
    ],
    name: "claimBids",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "token_", internalType: "address", type: "address" }],
    name: "claimRewards",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "auctionRef", internalType: "Veecode", type: "bytes7" },
      { name: "derivativeRef", internalType: "Veecode", type: "bytes7" },
    ],
    name: "condensers",
    outputs: [
      { name: "condenserRef", internalType: "Veecode", type: "bytes7" },
    ],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "callbackData_", internalType: "bytes", type: "bytes" },
    ],
    name: "curate",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "veecode_", internalType: "Veecode", type: "bytes7" },
      { name: "callData_", internalType: "bytes", type: "bytes" },
    ],
    name: "execOnModule",
    outputs: [{ name: "", internalType: "bytes", type: "bytes" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "Keycode", type: "bytes5" }],
    name: "fees",
    outputs: [
      { name: "protocol", internalType: "uint48", type: "uint48" },
      { name: "maxReferrerFee", internalType: "uint48", type: "uint48" },
      { name: "maxCuratorFee", internalType: "uint48", type: "uint48" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "lotId_", internalType: "uint96", type: "uint96" }],
    name: "getAuctionModuleForId",
    outputs: [{ name: "", internalType: "contract IAuction", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "lotId_", internalType: "uint96", type: "uint96" }],
    name: "getBatchModuleForId",
    outputs: [
      {
        name: "",
        internalType: "contract BatchAuctionModule",
        type: "address",
      },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "auctionType_", internalType: "Keycode", type: "bytes5" },
      { name: "curator_", internalType: "address", type: "address" },
    ],
    name: "getCuratorFee",
    outputs: [{ name: "curatorFee", internalType: "uint48", type: "uint48" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "lotId_", internalType: "uint96", type: "uint96" }],
    name: "getDerivativeModuleForId",
    outputs: [
      { name: "", internalType: "contract IDerivative", type: "address" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "auctionType_", internalType: "Keycode", type: "bytes5" }],
    name: "getFees",
    outputs: [
      { name: "protocol", internalType: "uint48", type: "uint48" },
      { name: "maxReferrerFee", internalType: "uint48", type: "uint48" },
      { name: "maxCuratorFee", internalType: "uint48", type: "uint48" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "Veecode", type: "bytes7" }],
    name: "getModuleForVeecode",
    outputs: [{ name: "", internalType: "contract Module", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "Keycode", type: "bytes5" }],
    name: "getModuleStatus",
    outputs: [
      { name: "latestVersion", internalType: "uint8", type: "uint8" },
      { name: "sunset", internalType: "bool", type: "bool" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "getProtocol",
    outputs: [{ name: "", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "recipient_", internalType: "address", type: "address" },
      { name: "token_", internalType: "address", type: "address" },
    ],
    name: "getRewards",
    outputs: [{ name: "reward", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "newModule_", internalType: "contract Module", type: "address" },
    ],
    name: "installModule",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "isExecOnModule",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "lotCounter",
    outputs: [{ name: "", internalType: "uint96", type: "uint96" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "lotId", internalType: "uint96", type: "uint96" }],
    name: "lotFees",
    outputs: [
      { name: "curator", internalType: "address", type: "address" },
      { name: "curated", internalType: "bool", type: "bool" },
      { name: "curatorFee", internalType: "uint48", type: "uint48" },
      { name: "protocolFee", internalType: "uint48", type: "uint48" },
      { name: "referrerFee", internalType: "uint48", type: "uint48" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "lotId", internalType: "uint96", type: "uint96" }],
    name: "lotRouting",
    outputs: [
      { name: "seller", internalType: "address", type: "address" },
      { name: "baseToken", internalType: "address", type: "address" },
      { name: "quoteToken", internalType: "address", type: "address" },
      { name: "auctionReference", internalType: "Veecode", type: "bytes7" },
      { name: "funding", internalType: "uint256", type: "uint256" },
      {
        name: "callbacks",
        internalType: "contract ICallback",
        type: "address",
      },
      { name: "derivativeReference", internalType: "Veecode", type: "bytes7" },
      { name: "wrapDerivative", internalType: "bool", type: "bool" },
      { name: "derivativeParams", internalType: "bytes", type: "bytes" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    name: "modules",
    outputs: [{ name: "", internalType: "Keycode", type: "bytes5" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "modulesCount",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "owner",
    outputs: [{ name: "", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "bidId_", internalType: "uint64", type: "uint64" },
      { name: "index_", internalType: "uint256", type: "uint256" },
    ],
    name: "refundBid",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "", internalType: "address", type: "address" },
      { name: "", internalType: "contract ERC20", type: "address" },
    ],
    name: "rewards",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "auctionRef_", internalType: "Veecode", type: "bytes7" },
      { name: "derivativeRef_", internalType: "Veecode", type: "bytes7" },
      { name: "condenserRef_", internalType: "Veecode", type: "bytes7" },
    ],
    name: "setCondenser",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "auctionType_", internalType: "Keycode", type: "bytes5" },
      { name: "fee_", internalType: "uint48", type: "uint48" },
    ],
    name: "setCuratorFee",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "auctionType_", internalType: "Keycode", type: "bytes5" },
      {
        name: "type_",
        internalType: "enum IFeeManager.FeeType",
        type: "uint8",
      },
      { name: "fee_", internalType: "uint48", type: "uint48" },
    ],
    name: "setFee",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "protocol_", internalType: "address", type: "address" }],
    name: "setProtocol",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "num_", internalType: "uint256", type: "uint256" },
      { name: "callbackData_", internalType: "bytes", type: "bytes" },
    ],
    name: "settle",
    outputs: [
      { name: "totalIn", internalType: "uint256", type: "uint256" },
      { name: "totalOut", internalType: "uint256", type: "uint256" },
      { name: "finished", internalType: "bool", type: "bool" },
      { name: "auctionOutput", internalType: "bytes", type: "bytes" },
    ],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "keycode_", internalType: "Keycode", type: "bytes5" }],
    name: "sunsetModule",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "newOwner", internalType: "address", type: "address" }],
    name: "transferOwnership",
    outputs: [],
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "lotId", internalType: "uint96", type: "uint96", indexed: true },
    ],
    name: "Abort",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "lotId", internalType: "uint96", type: "uint96", indexed: true },
      {
        name: "auctionRef",
        internalType: "Veecode",
        type: "bytes7",
        indexed: true,
      },
    ],
    name: "AuctionCancelled",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "lotId", internalType: "uint96", type: "uint96", indexed: true },
      {
        name: "auctionRef",
        internalType: "Veecode",
        type: "bytes7",
        indexed: true,
      },
      {
        name: "infoHash",
        internalType: "string",
        type: "string",
        indexed: false,
      },
    ],
    name: "AuctionCreated",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "lotId", internalType: "uint96", type: "uint96", indexed: true },
      { name: "bidId", internalType: "uint96", type: "uint96", indexed: true },
      {
        name: "bidder",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "amount",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "Bid",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "lotId", internalType: "uint96", type: "uint96", indexed: true },
      { name: "bidId", internalType: "uint96", type: "uint96", indexed: true },
      {
        name: "bidder",
        internalType: "address",
        type: "address",
        indexed: true,
      },
    ],
    name: "ClaimBid",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "lotId", internalType: "uint96", type: "uint96", indexed: true },
      {
        name: "curator",
        internalType: "address",
        type: "address",
        indexed: true,
      },
    ],
    name: "Curated",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "keycode",
        internalType: "Keycode",
        type: "bytes5",
        indexed: true,
      },
      { name: "version", internalType: "uint8", type: "uint8", indexed: true },
      {
        name: "location",
        internalType: "address",
        type: "address",
        indexed: true,
      },
    ],
    name: "ModuleInstalled",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "keycode",
        internalType: "Keycode",
        type: "bytes5",
        indexed: true,
      },
    ],
    name: "ModuleSunset",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "user", internalType: "address", type: "address", indexed: true },
      {
        name: "newOwner",
        internalType: "address",
        type: "address",
        indexed: true,
      },
    ],
    name: "OwnershipTransferred",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "lotId", internalType: "uint96", type: "uint96", indexed: true },
      { name: "bidId", internalType: "uint96", type: "uint96", indexed: true },
      {
        name: "bidder",
        internalType: "address",
        type: "address",
        indexed: true,
      },
    ],
    name: "RefundBid",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "lotId", internalType: "uint96", type: "uint96", indexed: true },
    ],
    name: "Settle",
  },
  { type: "error", inputs: [], name: "AmountLessThanMinimum" },
  { type: "error", inputs: [], name: "FailedCallback" },
  { type: "error", inputs: [], name: "InsufficientFunding" },
  { type: "error", inputs: [], name: "InvalidCallback" },
  { type: "error", inputs: [], name: "InvalidCallbackResponse" },
  { type: "error", inputs: [], name: "InvalidFee" },
  {
    type: "error",
    inputs: [{ name: "id_", internalType: "uint96", type: "uint96" }],
    name: "InvalidLotId",
  },
  {
    type: "error",
    inputs: [
      { name: "keycode_", internalType: "Keycode", type: "bytes5" },
      { name: "version_", internalType: "uint8", type: "uint8" },
    ],
    name: "InvalidModuleInstall",
  },
  { type: "error", inputs: [], name: "InvalidParams" },
  { type: "error", inputs: [], name: "InvalidParams" },
  { type: "error", inputs: [], name: "InvalidState" },
  {
    type: "error",
    inputs: [{ name: "veecode_", internalType: "Veecode", type: "bytes7" }],
    name: "InvalidVeecode",
  },
  {
    type: "error",
    inputs: [{ name: "keycode_", internalType: "Keycode", type: "bytes5" }],
    name: "ModuleAlreadySunset",
  },
  {
    type: "error",
    inputs: [{ name: "error_", internalType: "bytes", type: "bytes" }],
    name: "ModuleExecutionReverted",
  },
  {
    type: "error",
    inputs: [{ name: "keycode_", internalType: "Keycode", type: "bytes5" }],
    name: "ModuleIsSunset",
  },
  {
    type: "error",
    inputs: [
      { name: "keycode_", internalType: "Keycode", type: "bytes5" },
      { name: "version_", internalType: "uint8", type: "uint8" },
    ],
    name: "ModuleNotInstalled",
  },
  {
    type: "error",
    inputs: [{ name: "caller_", internalType: "address", type: "address" }],
    name: "NotPermitted",
  },
  {
    type: "error",
    inputs: [{ name: "target_", internalType: "address", type: "address" }],
    name: "TargetNotAContract",
  },
  {
    type: "error",
    inputs: [{ name: "token_", internalType: "address", type: "address" }],
    name: "UnsupportedToken",
  },
  { type: "error", inputs: [], name: "Auction_AmountLessThanMinimum" },
  {
    type: "error",
    inputs: [{ name: "lotId", internalType: "uint96", type: "uint96" }],
    name: "Auction_DedicatedSettlePeriod",
  },
  { type: "error", inputs: [], name: "Auction_InsufficientCapacity" },
  {
    type: "error",
    inputs: [
      { name: "lotId", internalType: "uint96", type: "uint96" },
      { name: "bidId", internalType: "uint96", type: "uint96" },
    ],
    name: "Auction_InvalidBidId",
  },
  {
    type: "error",
    inputs: [
      { name: "duration_", internalType: "uint48", type: "uint48" },
      { name: "minimum_", internalType: "uint48", type: "uint48" },
    ],
    name: "Auction_InvalidDuration",
  },
  { type: "error", inputs: [], name: "Auction_InvalidKey" },
  {
    type: "error",
    inputs: [{ name: "lotId", internalType: "uint96", type: "uint96" }],
    name: "Auction_InvalidLotId",
  },
  { type: "error", inputs: [], name: "Auction_InvalidParams" },
  {
    type: "error",
    inputs: [
      { name: "start_", internalType: "uint48", type: "uint48" },
      { name: "minimum_", internalType: "uint48", type: "uint48" },
    ],
    name: "Auction_InvalidStart",
  },
  {
    type: "error",
    inputs: [{ name: "lotId", internalType: "uint96", type: "uint96" }],
    name: "Auction_LotActive",
  },
  {
    type: "error",
    inputs: [{ name: "lotId", internalType: "uint96", type: "uint96" }],
    name: "Auction_LotNotActive",
  },
  {
    type: "error",
    inputs: [{ name: "lotId", internalType: "uint96", type: "uint96" }],
    name: "Auction_LotNotConcluded",
  },
  { type: "error", inputs: [], name: "Auction_NotAuthorized" },
  { type: "error", inputs: [], name: "Auction_NotBidder" },
  { type: "error", inputs: [], name: "Auction_NotImplemented" },
  { type: "error", inputs: [], name: "Auction_OnlyLotOwner" },
  {
    type: "error",
    inputs: [{ name: "lotId", internalType: "uint96", type: "uint96" }],
    name: "Auction_WrongState",
  },
  {
    type: "error",
    inputs: [
      { name: "lotId", internalType: "uint96", type: "uint96" },
      { name: "bidId", internalType: "uint64", type: "uint64" },
    ],
    name: "Bid_WrongState",
  },
  {
    type: "error",
    inputs: [{ name: "parent_", internalType: "address", type: "address" }],
    name: "Module_InvalidParent",
  },
  { type: "error", inputs: [], name: "Module_OnlyInternal" },
  {
    type: "error",
    inputs: [{ name: "caller_", internalType: "address", type: "address" }],
    name: "Module_OnlyParent",
  },
  {
    type: "error",
    inputs: [{ name: "caller", internalType: "address", type: "address" }],
    name: "NotPermitted",
  },
  { type: "error", inputs: [], name: "Auction_AmountLessThanMinimum" },
  {
    type: "error",
    inputs: [{ name: "lotId", internalType: "uint96", type: "uint96" }],
    name: "Auction_DedicatedSettlePeriod",
  },
  { type: "error", inputs: [], name: "Auction_InsufficientCapacity" },
  {
    type: "error",
    inputs: [
      { name: "lotId", internalType: "uint96", type: "uint96" },
      { name: "bidId", internalType: "uint96", type: "uint96" },
    ],
    name: "Auction_InvalidBidId",
  },
  {
    type: "error",
    inputs: [
      { name: "duration_", internalType: "uint48", type: "uint48" },
      { name: "minimum_", internalType: "uint48", type: "uint48" },
    ],
    name: "Auction_InvalidDuration",
  },
  {
    type: "error",
    inputs: [{ name: "lotId", internalType: "uint96", type: "uint96" }],
    name: "Auction_InvalidLotId",
  },
  { type: "error", inputs: [], name: "Auction_InvalidParams" },
  {
    type: "error",
    inputs: [
      { name: "start_", internalType: "uint48", type: "uint48" },
      { name: "minimum_", internalType: "uint48", type: "uint48" },
    ],
    name: "Auction_InvalidStart",
  },
  {
    type: "error",
    inputs: [{ name: "lotId", internalType: "uint96", type: "uint96" }],
    name: "Auction_LotActive",
  },
  {
    type: "error",
    inputs: [{ name: "lotId", internalType: "uint96", type: "uint96" }],
    name: "Auction_LotNotActive",
  },
  {
    type: "error",
    inputs: [{ name: "lotId", internalType: "uint96", type: "uint96" }],
    name: "Auction_LotNotConcluded",
  },
  { type: "error", inputs: [], name: "Auction_NotAuthorized" },
  { type: "error", inputs: [], name: "Auction_NotBidder" },
  { type: "error", inputs: [], name: "Auction_NotImplemented" },
  { type: "error", inputs: [], name: "Auction_OnlyLotOwner" },
  {
    type: "error",
    inputs: [{ name: "lotId", internalType: "uint96", type: "uint96" }],
    name: "Auction_WrongState",
  },
  {
    type: "error",
    inputs: [
      { name: "lotId", internalType: "uint96", type: "uint96" },
      { name: "bidId", internalType: "uint64", type: "uint64" },
    ],
    name: "Bid_WrongState",
  },
  {
    type: "error",
    inputs: [{ name: "parent_", internalType: "address", type: "address" }],
    name: "Module_InvalidParent",
  },
  { type: "error", inputs: [], name: "Module_OnlyInternal" },
  {
    type: "error",
    inputs: [{ name: "caller_", internalType: "address", type: "address" }],
    name: "Module_OnlyParent",
  },
  {
    type: "error",
    inputs: [{ name: "caller", internalType: "address", type: "address" }],
    name: "NotPermitted",
  },
  { type: "error", inputs: [], name: "BrokenInvariant" },
  { type: "error", inputs: [], name: "Derivative_NotImplemented" },
  { type: "error", inputs: [], name: "InsufficientBalance" },
  { type: "error", inputs: [], name: "InvalidParams" },
  {
    type: "error",
    inputs: [{ name: "parent_", internalType: "address", type: "address" }],
    name: "Module_InvalidParent",
  },
  { type: "error", inputs: [], name: "Module_OnlyInternal" },
  {
    type: "error",
    inputs: [{ name: "caller_", internalType: "address", type: "address" }],
    name: "Module_OnlyParent",
  },
  { type: "error", inputs: [], name: "NotPermitted" },
  {
    type: "error",
    inputs: [
      { name: "value", internalType: "uint256", type: "uint256" },
      { name: "length", internalType: "uint256", type: "uint256" },
    ],
    name: "StringsInsufficientHexLength",
  },
  {
    type: "error",
    inputs: [{ name: "token_", internalType: "address", type: "address" }],
    name: "UnsupportedToken",
  },
] as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// batchCatalogue
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const batchCatalogueAbi = [
  {
    stateMutability: "nonpayable",
    type: "constructor",
    inputs: [
      { name: "auctionHouse_", internalType: "address", type: "address" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "auctionHouse",
    outputs: [{ name: "", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "baseToken_", internalType: "address", type: "address" },
      { name: "startId_", internalType: "uint96", type: "uint96" },
      { name: "count_", internalType: "uint96", type: "uint96" },
    ],
    name: "getAuctionsByBaseToken",
    outputs: [{ name: "", internalType: "uint96[]", type: "uint96[]" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "curator_", internalType: "address", type: "address" },
      { name: "startId_", internalType: "uint96", type: "uint96" },
      { name: "count_", internalType: "uint96", type: "uint96" },
    ],
    name: "getAuctionsByCurator",
    outputs: [{ name: "", internalType: "uint96[]", type: "uint96[]" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "derivativeReference_", internalType: "Veecode", type: "bytes7" },
      { name: "startId_", internalType: "uint96", type: "uint96" },
      { name: "count_", internalType: "uint96", type: "uint96" },
    ],
    name: "getAuctionsByDerivative",
    outputs: [{ name: "", internalType: "uint96[]", type: "uint96[]" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "auctionFormat_", internalType: "Keycode", type: "bytes5" },
      { name: "startId_", internalType: "uint96", type: "uint96" },
      { name: "count_", internalType: "uint96", type: "uint96" },
    ],
    name: "getAuctionsByFormat",
    outputs: [{ name: "", internalType: "uint96[]", type: "uint96[]" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "auctionReference_", internalType: "Veecode", type: "bytes7" },
      { name: "startId_", internalType: "uint96", type: "uint96" },
      { name: "count_", internalType: "uint96", type: "uint96" },
    ],
    name: "getAuctionsByModule",
    outputs: [{ name: "", internalType: "uint96[]", type: "uint96[]" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "quoteToken_", internalType: "address", type: "address" },
      { name: "startId_", internalType: "uint96", type: "uint96" },
      { name: "count_", internalType: "uint96", type: "uint96" },
    ],
    name: "getAuctionsByQuoteToken",
    outputs: [{ name: "", internalType: "uint96[]", type: "uint96[]" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "curator_", internalType: "address", type: "address" },
      { name: "startId_", internalType: "uint96", type: "uint96" },
      { name: "count_", internalType: "uint96", type: "uint96" },
    ],
    name: "getAuctionsByRequestedCurator",
    outputs: [{ name: "", internalType: "uint96[]", type: "uint96[]" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "seller_", internalType: "address", type: "address" },
      { name: "startId_", internalType: "uint96", type: "uint96" },
      { name: "count_", internalType: "uint96", type: "uint96" },
    ],
    name: "getAuctionsBySeller",
    outputs: [{ name: "", internalType: "uint96[]", type: "uint96[]" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "bidId_", internalType: "uint64", type: "uint64" },
    ],
    name: "getBidClaim",
    outputs: [
      {
        name: "",
        internalType: "struct IBatchAuction.BidClaim",
        type: "tuple",
        components: [
          { name: "bidder", internalType: "address", type: "address" },
          { name: "referrer", internalType: "address", type: "address" },
          { name: "paid", internalType: "uint256", type: "uint256" },
          { name: "payout", internalType: "uint256", type: "uint256" },
          { name: "refund", internalType: "uint256", type: "uint256" },
        ],
      },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "index_", internalType: "uint256", type: "uint256" },
    ],
    name: "getBidIdAtIndex",
    outputs: [{ name: "", internalType: "uint64", type: "uint64" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "start_", internalType: "uint256", type: "uint256" },
      { name: "count_", internalType: "uint256", type: "uint256" },
    ],
    name: "getBidIds",
    outputs: [{ name: "", internalType: "uint64[]", type: "uint64[]" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "lotId_", internalType: "uint96", type: "uint96" }],
    name: "getFeeData",
    outputs: [
      {
        name: "",
        internalType: "struct IAuctionHouse.FeeData",
        type: "tuple",
        components: [
          { name: "curator", internalType: "address", type: "address" },
          { name: "curated", internalType: "bool", type: "bool" },
          { name: "curatorFee", internalType: "uint48", type: "uint48" },
          { name: "protocolFee", internalType: "uint48", type: "uint48" },
          { name: "referrerFee", internalType: "uint48", type: "uint48" },
        ],
      },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "startId_", internalType: "uint96", type: "uint96" },
      { name: "count_", internalType: "uint96", type: "uint96" },
    ],
    name: "getLiveAuctions",
    outputs: [{ name: "", internalType: "uint96[]", type: "uint96[]" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "getMaxLotId",
    outputs: [{ name: "", internalType: "uint96", type: "uint96" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "lotId_", internalType: "uint96", type: "uint96" }],
    name: "getNumBids",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "lotId_", internalType: "uint96", type: "uint96" }],
    name: "getRouting",
    outputs: [
      {
        name: "",
        internalType: "struct IAuctionHouse.Routing",
        type: "tuple",
        components: [
          { name: "seller", internalType: "address", type: "address" },
          { name: "baseToken", internalType: "address", type: "address" },
          { name: "quoteToken", internalType: "address", type: "address" },
          { name: "auctionReference", internalType: "Veecode", type: "bytes7" },
          { name: "funding", internalType: "uint256", type: "uint256" },
          {
            name: "callbacks",
            internalType: "contract ICallback",
            type: "address",
          },
          {
            name: "derivativeReference",
            internalType: "Veecode",
            type: "bytes7",
          },
          { name: "wrapDerivative", internalType: "bool", type: "bool" },
          { name: "derivativeParams", internalType: "bytes", type: "bytes" },
        ],
      },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "startId_", internalType: "uint96", type: "uint96" },
      { name: "count_", internalType: "uint96", type: "uint96" },
    ],
    name: "getUpcomingAuctions",
    outputs: [{ name: "", internalType: "uint96[]", type: "uint96[]" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "lotId_", internalType: "uint96", type: "uint96" }],
    name: "hasEnded",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "lotId_", internalType: "uint96", type: "uint96" }],
    name: "isLive",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "lotId_", internalType: "uint96", type: "uint96" }],
    name: "isUpcoming",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "lotId_", internalType: "uint96", type: "uint96" }],
    name: "remainingCapacity",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  { type: "error", inputs: [], name: "InvalidParams" },
  {
    type: "error",
    inputs: [{ name: "veecode_", internalType: "Veecode", type: "bytes7" }],
    name: "InvalidVeecode",
  },
] as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// bpool
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const bpoolAbi = [
  {
    stateMutability: "nonpayable",
    type: "constructor",
    inputs: [
      { name: "_kernel", internalType: "contract Kernel", type: "address" },
      { name: "_name", internalType: "string", type: "string" },
      { name: "_symbol", internalType: "string", type: "string" },
      { name: "_decimals", internalType: "uint8", type: "uint8" },
      { name: "_factory", internalType: "address", type: "address" },
      { name: "_reserve", internalType: "address", type: "address" },
      { name: "_feeTier", internalType: "uint24", type: "uint24" },
      { name: "_initialActiveTick", internalType: "int24", type: "int24" },
      { name: "_blast", internalType: "address", type: "address" },
      { name: "_blastGovernor", internalType: "address", type: "address" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [{ name: "", internalType: "bytes32", type: "bytes32" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "FEE_TIER",
    outputs: [{ name: "", internalType: "uint24", type: "uint24" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [],
    name: "INIT",
    outputs: [],
  },
  {
    stateMutability: "pure",
    type: "function",
    inputs: [],
    name: "KEYCODE",
    outputs: [{ name: "", internalType: "Keycode", type: "bytes5" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "TICK_SPACING",
    outputs: [{ name: "", internalType: "int24", type: "int24" }],
  },
  {
    stateMutability: "pure",
    type: "function",
    inputs: [],
    name: "VERSION",
    outputs: [
      { name: "major", internalType: "uint8", type: "uint8" },
      { name: "minor", internalType: "uint8", type: "uint8" },
    ],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "_range", internalType: "enum Range", type: "uint8" },
      { name: "_liquidity", internalType: "uint128", type: "uint128" },
    ],
    name: "addLiquidityTo",
    outputs: [
      { name: "bAssetsAdded_", internalType: "uint256", type: "uint256" },
      { name: "reservesAdded_", internalType: "uint256", type: "uint256" },
      { name: "liquidityFinal_", internalType: "uint128", type: "uint128" },
    ],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "_range", internalType: "enum Range", type: "uint8" },
      { name: "_reserves", internalType: "uint256", type: "uint256" },
    ],
    name: "addReservesTo",
    outputs: [
      { name: "bAssetsAdded_", internalType: "uint256", type: "uint256" },
      { name: "reservesAdded_", internalType: "uint256", type: "uint256" },
      { name: "liquidityFinal_", internalType: "uint128", type: "uint128" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "", internalType: "address", type: "address" },
      { name: "", internalType: "address", type: "address" },
    ],
    name: "allowance",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "spender", internalType: "address", type: "address" },
      { name: "amount", internalType: "uint256", type: "uint256" },
    ],
    name: "approve",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "address", type: "address" }],
    name: "balanceOf",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [],
    name: "burnAllBAssetsInContract",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "newKernel_", internalType: "contract Kernel", type: "address" },
    ],
    name: "changeKernel",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "decimals",
    outputs: [{ name: "", internalType: "uint8", type: "uint8" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "getActiveTS",
    outputs: [{ name: "activeTS_", internalType: "int24", type: "int24" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "_sqrtPriceL", internalType: "uint160", type: "uint160" },
      { name: "_sqrtPriceU", internalType: "uint160", type: "uint160" },
      { name: "_liquidity", internalType: "uint128", type: "uint128" },
    ],
    name: "getBalancesForLiquidity",
    outputs: [
      { name: "bAssets_", internalType: "uint256", type: "uint256" },
      { name: "reserves_", internalType: "uint256", type: "uint256" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "getBaselineValue",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "pure",
    type: "function",
    inputs: [
      { name: "_sqrtPriceL", internalType: "uint160", type: "uint160" },
      { name: "_sqrtPriceU", internalType: "uint160", type: "uint160" },
      { name: "_liquidity", internalType: "uint128", type: "uint128" },
      { name: "_sqrtPriceA", internalType: "uint160", type: "uint160" },
    ],
    name: "getCapacityForLiquidity",
    outputs: [{ name: "capacity_", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "_sqrtPriceL", internalType: "uint160", type: "uint160" },
      { name: "_sqrtPriceU", internalType: "uint160", type: "uint160" },
      { name: "_reserves", internalType: "uint256", type: "uint256" },
    ],
    name: "getCapacityForReserves",
    outputs: [{ name: "capacity_", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "pure",
    type: "function",
    inputs: [
      { name: "_sqrtPriceL", internalType: "uint160", type: "uint160" },
      { name: "_sqrtPriceU", internalType: "uint160", type: "uint160" },
      { name: "_reserves", internalType: "uint256", type: "uint256" },
      { name: "_targetSqrtPrice", internalType: "uint160", type: "uint160" },
    ],
    name: "getCapacityForReservesAtPrice",
    outputs: [{ name: "capacity_", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "enum Range", type: "uint8" }],
    name: "getLiquidity",
    outputs: [{ name: "", internalType: "uint128", type: "uint128" }],
  },
  {
    stateMutability: "pure",
    type: "function",
    inputs: [
      { name: "_sqrtPriceL", internalType: "uint160", type: "uint160" },
      { name: "_sqrtPriceU", internalType: "uint160", type: "uint160" },
      { name: "_reserves", internalType: "uint256", type: "uint256" },
      { name: "_sqrtPriceA", internalType: "uint160", type: "uint160" },
    ],
    name: "getLiquidityForReserves",
    outputs: [{ name: "liquidity_", internalType: "uint128", type: "uint128" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "_range", internalType: "enum Range", type: "uint8" }],
    name: "getPosition",
    outputs: [
      {
        name: "position_",
        internalType: "struct Position",
        type: "tuple",
        components: [
          { name: "liquidity", internalType: "uint128", type: "uint128" },
          { name: "sqrtPriceL", internalType: "uint160", type: "uint160" },
          { name: "sqrtPriceU", internalType: "uint160", type: "uint160" },
          { name: "bAssets", internalType: "uint256", type: "uint256" },
          { name: "reserves", internalType: "uint256", type: "uint256" },
          { name: "capacity", internalType: "uint256", type: "uint256" },
        ],
      },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "enum Range", type: "uint8" }],
    name: "getTicks",
    outputs: [
      { name: "lower", internalType: "int24", type: "int24" },
      { name: "upper", internalType: "int24", type: "int24" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "kernel",
    outputs: [{ name: "", internalType: "contract Kernel", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "locked",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "_to", internalType: "address", type: "address" },
      { name: "_amount", internalType: "uint256", type: "uint256" },
    ],
    name: "mint",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "name",
    outputs: [{ name: "", internalType: "string", type: "string" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "address", type: "address" }],
    name: "nonces",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "owner", internalType: "address", type: "address" },
      { name: "spender", internalType: "address", type: "address" },
      { name: "value", internalType: "uint256", type: "uint256" },
      { name: "deadline", internalType: "uint256", type: "uint256" },
      { name: "v", internalType: "uint8", type: "uint8" },
      { name: "r", internalType: "bytes32", type: "bytes32" },
      { name: "s", internalType: "bytes32", type: "bytes32" },
    ],
    name: "permit",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "pool",
    outputs: [
      { name: "", internalType: "contract IUniswapV3Pool", type: "address" },
    ],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "_range", internalType: "enum Range", type: "uint8" }],
    name: "removeAllFrom",
    outputs: [
      { name: "bAssetsRemoved_", internalType: "uint256", type: "uint256" },
      { name: "bAssetFees_", internalType: "uint256", type: "uint256" },
      { name: "reservesRemoved_", internalType: "uint256", type: "uint256" },
      { name: "reserveFees_", internalType: "uint256", type: "uint256" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "reserve",
    outputs: [{ name: "", internalType: "contract ERC20", type: "address" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "_range", internalType: "enum Range", type: "uint8" },
      { name: "_lower", internalType: "int24", type: "int24" },
      { name: "_upper", internalType: "int24", type: "int24" },
    ],
    name: "setTicks",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "_lock", internalType: "bool", type: "bool" }],
    name: "setTransferLock",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "symbol",
    outputs: [{ name: "", internalType: "string", type: "string" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "totalSupply",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "_to", internalType: "address", type: "address" },
      { name: "_amount", internalType: "uint256", type: "uint256" },
    ],
    name: "transfer",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "_from", internalType: "address", type: "address" },
      { name: "_to", internalType: "address", type: "address" },
      { name: "_amount", internalType: "uint256", type: "uint256" },
    ],
    name: "transferFrom",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "_bAssetsOwed", internalType: "uint256", type: "uint256" },
      { name: "_reservesOwed", internalType: "uint256", type: "uint256" },
      { name: "_data", internalType: "bytes", type: "bytes" },
    ],
    name: "uniswapV3MintCallback",
    outputs: [],
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "owner",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "spender",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "amount",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "Approval",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "from", internalType: "address", type: "address", indexed: true },
      { name: "to", internalType: "address", type: "address", indexed: true },
      {
        name: "amount",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "Transfer",
  },
  { type: "error", inputs: [], name: "InvalidAction" },
  { type: "error", inputs: [], name: "InvalidCaller" },
  { type: "error", inputs: [], name: "InvalidTickRange" },
  {
    type: "error",
    inputs: [{ name: "caller_", internalType: "address", type: "address" }],
    name: "KernelAdapter_OnlyKernel",
  },
  {
    type: "error",
    inputs: [{ name: "policy_", internalType: "address", type: "address" }],
    name: "Module_PolicyNotPermitted",
  },
  { type: "error", inputs: [], name: "T" },
  { type: "error", inputs: [], name: "TransferLocked" },
] as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// cappedMerkleAllowlist
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const cappedMerkleAllowlistAbi = [
  {
    stateMutability: "nonpayable",
    type: "constructor",
    inputs: [
      { name: "auctionHouse_", internalType: "address", type: "address" },
      {
        name: "permissions_",
        internalType: "struct Callbacks.Permissions",
        type: "tuple",
        components: [
          { name: "onCreate", internalType: "bool", type: "bool" },
          { name: "onCancel", internalType: "bool", type: "bool" },
          { name: "onCurate", internalType: "bool", type: "bool" },
          { name: "onPurchase", internalType: "bool", type: "bool" },
          { name: "onBid", internalType: "bool", type: "bool" },
          { name: "onSettle", internalType: "bool", type: "bool" },
          { name: "receiveQuoteTokens", internalType: "bool", type: "bool" },
          { name: "sendBaseTokens", internalType: "bool", type: "bool" },
        ],
      },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "AUCTION_HOUSE",
    outputs: [{ name: "", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "uint96", type: "uint96" }],
    name: "lotBuyerLimit",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "", internalType: "uint96", type: "uint96" },
      { name: "", internalType: "address", type: "address" },
    ],
    name: "lotBuyerSpent",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "uint96", type: "uint96" }],
    name: "lotIdRegistered",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "lotId", internalType: "uint96", type: "uint96" }],
    name: "lotMerkleRoot",
    outputs: [{ name: "merkleRoot", internalType: "bytes32", type: "bytes32" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "bidId", internalType: "uint64", type: "uint64" },
      { name: "buyer_", internalType: "address", type: "address" },
      { name: "amount_", internalType: "uint256", type: "uint256" },
      { name: "callbackData_", internalType: "bytes", type: "bytes" },
    ],
    name: "onBid",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "refund_", internalType: "uint256", type: "uint256" },
      { name: "prefunded_", internalType: "bool", type: "bool" },
      { name: "callbackData_", internalType: "bytes", type: "bytes" },
    ],
    name: "onCancel",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "seller_", internalType: "address", type: "address" },
      { name: "baseToken_", internalType: "address", type: "address" },
      { name: "quoteToken_", internalType: "address", type: "address" },
      { name: "capacity_", internalType: "uint256", type: "uint256" },
      { name: "prefund_", internalType: "bool", type: "bool" },
      { name: "callbackData_", internalType: "bytes", type: "bytes" },
    ],
    name: "onCreate",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "curatorFee_", internalType: "uint256", type: "uint256" },
      { name: "prefund_", internalType: "bool", type: "bool" },
      { name: "callbackData_", internalType: "bytes", type: "bytes" },
    ],
    name: "onCurate",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "buyer_", internalType: "address", type: "address" },
      { name: "amount_", internalType: "uint256", type: "uint256" },
      { name: "payout_", internalType: "uint256", type: "uint256" },
      { name: "prefunded_", internalType: "bool", type: "bool" },
      { name: "callbackData_", internalType: "bytes", type: "bytes" },
    ],
    name: "onPurchase",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "proceeds_", internalType: "uint256", type: "uint256" },
      { name: "refund_", internalType: "uint256", type: "uint256" },
      { name: "callbackData_", internalType: "bytes", type: "bytes" },
    ],
    name: "onSettle",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "merkleRoot_", internalType: "bytes32", type: "bytes32" },
    ],
    name: "setMerkleRoot",
    outputs: [],
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "lotId", internalType: "uint96", type: "uint96", indexed: false },
      {
        name: "merkleRoot",
        internalType: "bytes32",
        type: "bytes32",
        indexed: false,
      },
    ],
    name: "MerkleRootSet",
  },
  { type: "error", inputs: [], name: "Callback_ExceedsLimit" },
  { type: "error", inputs: [], name: "Callback_InvalidParams" },
  { type: "error", inputs: [], name: "Callback_NotAuthorized" },
  { type: "error", inputs: [], name: "Callback_NotImplemented" },
  {
    type: "error",
    inputs: [{ name: "callbacks", internalType: "address", type: "address" }],
    name: "CallbacksAddressNotValid",
  },
] as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// encryptedMarginalPrice
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const encryptedMarginalPriceAbi = [
  {
    stateMutability: "nonpayable",
    type: "constructor",
    inputs: [
      { name: "auctionHouse_", internalType: "address", type: "address" },
    ],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [],
    name: "INIT",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "PARENT",
    outputs: [{ name: "", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "pure",
    type: "function",
    inputs: [],
    name: "TYPE",
    outputs: [{ name: "", internalType: "enum Module.Type", type: "uint8" }],
  },
  {
    stateMutability: "pure",
    type: "function",
    inputs: [],
    name: "VEECODE",
    outputs: [{ name: "", internalType: "Veecode", type: "bytes7" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "lotId_", internalType: "uint96", type: "uint96" }],
    name: "abort",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      {
        name: "params_",
        internalType: "struct IAuction.AuctionParams",
        type: "tuple",
        components: [
          { name: "start", internalType: "uint48", type: "uint48" },
          { name: "duration", internalType: "uint48", type: "uint48" },
          { name: "capacityInQuote", internalType: "bool", type: "bool" },
          { name: "capacity", internalType: "uint256", type: "uint256" },
          { name: "implParams", internalType: "bytes", type: "bytes" },
        ],
      },
      { name: "quoteTokenDecimals_", internalType: "uint8", type: "uint8" },
      { name: "baseTokenDecimals_", internalType: "uint8", type: "uint8" },
    ],
    name: "auction",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "lotId", internalType: "uint96", type: "uint96" }],
    name: "auctionData",
    outputs: [
      { name: "nextBidId", internalType: "uint64", type: "uint64" },
      { name: "nextDecryptIndex", internalType: "uint64", type: "uint64" },
      {
        name: "status",
        internalType: "enum IEncryptedMarginalPrice.LotStatus",
        type: "uint8",
      },
      { name: "marginalBidId", internalType: "uint64", type: "uint64" },
      { name: "marginalPrice", internalType: "uint256", type: "uint256" },
      { name: "minPrice", internalType: "uint256", type: "uint256" },
      { name: "minFilled", internalType: "uint256", type: "uint256" },
      { name: "minBidSize", internalType: "uint256", type: "uint256" },
      {
        name: "publicKey",
        internalType: "struct Point",
        type: "tuple",
        components: [
          { name: "x", internalType: "uint256", type: "uint256" },
          { name: "y", internalType: "uint256", type: "uint256" },
        ],
      },
      { name: "privateKey", internalType: "uint256", type: "uint256" },
    ],
  },
  {
    stateMutability: "pure",
    type: "function",
    inputs: [],
    name: "auctionType",
    outputs: [
      { name: "", internalType: "enum IAuction.AuctionType", type: "uint8" },
    ],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "bidder_", internalType: "address", type: "address" },
      { name: "referrer_", internalType: "address", type: "address" },
      { name: "amount_", internalType: "uint256", type: "uint256" },
      { name: "auctionData_", internalType: "bytes", type: "bytes" },
    ],
    name: "bid",
    outputs: [{ name: "bidId", internalType: "uint64", type: "uint64" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "lotId", internalType: "uint96", type: "uint96" },
      { name: "bidId", internalType: "uint64", type: "uint64" },
    ],
    name: "bids",
    outputs: [
      { name: "bidder", internalType: "address", type: "address" },
      { name: "amount", internalType: "uint96", type: "uint96" },
      { name: "minAmountOut", internalType: "uint96", type: "uint96" },
      { name: "referrer", internalType: "address", type: "address" },
      {
        name: "status",
        internalType: "enum IEncryptedMarginalPrice.BidStatus",
        type: "uint8",
      },
    ],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "lotId_", internalType: "uint96", type: "uint96" }],
    name: "cancelAuction",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "lotId_", internalType: "uint96", type: "uint96" }],
    name: "capacityInQuote",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "bidIds_", internalType: "uint64[]", type: "uint64[]" },
    ],
    name: "claimBids",
    outputs: [
      {
        name: "bidClaims",
        internalType: "struct IBatchAuction.BidClaim[]",
        type: "tuple[]",
        components: [
          { name: "bidder", internalType: "address", type: "address" },
          { name: "referrer", internalType: "address", type: "address" },
          { name: "paid", internalType: "uint256", type: "uint256" },
          { name: "payout", internalType: "uint256", type: "uint256" },
          { name: "refund", internalType: "uint256", type: "uint256" },
        ],
      },
      { name: "auctionOutput", internalType: "bytes", type: "bytes" },
    ],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "num_", internalType: "uint64", type: "uint64" },
      { name: "sortHints_", internalType: "bytes32[]", type: "bytes32[]" },
    ],
    name: "decryptAndSortBids",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "bidId_", internalType: "uint64", type: "uint64" },
    ],
    name: "decryptBid",
    outputs: [{ name: "amountOut", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "lotId", internalType: "uint96", type: "uint96" }],
    name: "decryptedBids",
    outputs: [{ name: "numBids", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "dedicatedSettlePeriod",
    outputs: [{ name: "", internalType: "uint48", type: "uint48" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "lotId", internalType: "uint96", type: "uint96" },
      { name: "bidId", internalType: "uint64", type: "uint64" },
    ],
    name: "encryptedBids",
    outputs: [
      { name: "encryptedAmountOut", internalType: "uint256", type: "uint256" },
      {
        name: "bidPubKey",
        internalType: "struct Point",
        type: "tuple",
        components: [
          { name: "x", internalType: "uint256", type: "uint256" },
          { name: "y", internalType: "uint256", type: "uint256" },
        ],
      },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "lotId_", internalType: "uint96", type: "uint96" }],
    name: "getAuctionData",
    outputs: [
      {
        name: "auctionData_",
        internalType: "struct IEncryptedMarginalPrice.AuctionData",
        type: "tuple",
        components: [
          { name: "nextBidId", internalType: "uint64", type: "uint64" },
          { name: "nextDecryptIndex", internalType: "uint64", type: "uint64" },
          {
            name: "status",
            internalType: "enum IEncryptedMarginalPrice.LotStatus",
            type: "uint8",
          },
          { name: "marginalBidId", internalType: "uint64", type: "uint64" },
          { name: "marginalPrice", internalType: "uint256", type: "uint256" },
          { name: "minPrice", internalType: "uint256", type: "uint256" },
          { name: "minFilled", internalType: "uint256", type: "uint256" },
          { name: "minBidSize", internalType: "uint256", type: "uint256" },
          {
            name: "publicKey",
            internalType: "struct Point",
            type: "tuple",
            components: [
              { name: "x", internalType: "uint256", type: "uint256" },
              { name: "y", internalType: "uint256", type: "uint256" },
            ],
          },
          { name: "privateKey", internalType: "uint256", type: "uint256" },
          { name: "bidIds", internalType: "uint64[]", type: "uint64[]" },
        ],
      },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "bidId_", internalType: "uint64", type: "uint64" },
    ],
    name: "getBid",
    outputs: [
      {
        name: "bid",
        internalType: "struct IEncryptedMarginalPrice.Bid",
        type: "tuple",
        components: [
          { name: "bidder", internalType: "address", type: "address" },
          { name: "amount", internalType: "uint96", type: "uint96" },
          { name: "minAmountOut", internalType: "uint96", type: "uint96" },
          { name: "referrer", internalType: "address", type: "address" },
          {
            name: "status",
            internalType: "enum IEncryptedMarginalPrice.BidStatus",
            type: "uint8",
          },
        ],
      },
      {
        name: "encryptedBid",
        internalType: "struct IEncryptedMarginalPrice.EncryptedBid",
        type: "tuple",
        components: [
          {
            name: "encryptedAmountOut",
            internalType: "uint256",
            type: "uint256",
          },
          {
            name: "bidPubKey",
            internalType: "struct Point",
            type: "tuple",
            components: [
              { name: "x", internalType: "uint256", type: "uint256" },
              { name: "y", internalType: "uint256", type: "uint256" },
            ],
          },
        ],
      },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "bidId_", internalType: "uint64", type: "uint64" },
    ],
    name: "getBidClaim",
    outputs: [
      {
        name: "bidClaim",
        internalType: "struct IBatchAuction.BidClaim",
        type: "tuple",
        components: [
          { name: "bidder", internalType: "address", type: "address" },
          { name: "referrer", internalType: "address", type: "address" },
          { name: "paid", internalType: "uint256", type: "uint256" },
          { name: "payout", internalType: "uint256", type: "uint256" },
          { name: "refund", internalType: "uint256", type: "uint256" },
        ],
      },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "index_", internalType: "uint256", type: "uint256" },
    ],
    name: "getBidIdAtIndex",
    outputs: [{ name: "", internalType: "uint64", type: "uint64" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "startIndex_", internalType: "uint256", type: "uint256" },
      { name: "num_", internalType: "uint256", type: "uint256" },
    ],
    name: "getBidIds",
    outputs: [{ name: "", internalType: "uint64[]", type: "uint64[]" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "lotId_", internalType: "uint96", type: "uint96" }],
    name: "getLot",
    outputs: [
      {
        name: "",
        internalType: "struct IAuction.Lot",
        type: "tuple",
        components: [
          { name: "start", internalType: "uint48", type: "uint48" },
          { name: "conclusion", internalType: "uint48", type: "uint48" },
          { name: "quoteTokenDecimals", internalType: "uint8", type: "uint8" },
          { name: "baseTokenDecimals", internalType: "uint8", type: "uint8" },
          { name: "capacityInQuote", internalType: "bool", type: "bool" },
          { name: "capacity", internalType: "uint256", type: "uint256" },
          { name: "sold", internalType: "uint256", type: "uint256" },
          { name: "purchased", internalType: "uint256", type: "uint256" },
        ],
      },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "key_", internalType: "bytes32", type: "bytes32" },
    ],
    name: "getNextInQueue",
    outputs: [{ name: "", internalType: "bytes32", type: "bytes32" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "lotId_", internalType: "uint96", type: "uint96" }],
    name: "getNumBids",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "lotId_", internalType: "uint96", type: "uint96" }],
    name: "getNumBidsInQueue",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "lotId_", internalType: "uint96", type: "uint96" }],
    name: "getPartialFill",
    outputs: [
      { name: "hasPartialFill", internalType: "bool", type: "bool" },
      {
        name: "partialFill",
        internalType: "struct IEncryptedMarginalPrice.PartialFill",
        type: "tuple",
        components: [
          { name: "bidId", internalType: "uint64", type: "uint64" },
          { name: "refund", internalType: "uint96", type: "uint96" },
          { name: "payout", internalType: "uint256", type: "uint256" },
        ],
      },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "lotId_", internalType: "uint96", type: "uint96" }],
    name: "hasEnded",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "lotId_", internalType: "uint96", type: "uint96" }],
    name: "isLive",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "lotId_", internalType: "uint96", type: "uint96" }],
    name: "isUpcoming",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "uint96", type: "uint96" }],
    name: "lotAuctionOutput",
    outputs: [{ name: "", internalType: "bytes", type: "bytes" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id", internalType: "uint96", type: "uint96" }],
    name: "lotData",
    outputs: [
      { name: "start", internalType: "uint48", type: "uint48" },
      { name: "conclusion", internalType: "uint48", type: "uint48" },
      { name: "quoteTokenDecimals", internalType: "uint8", type: "uint8" },
      { name: "baseTokenDecimals", internalType: "uint8", type: "uint8" },
      { name: "capacityInQuote", internalType: "bool", type: "bool" },
      { name: "capacity", internalType: "uint256", type: "uint256" },
      { name: "sold", internalType: "uint256", type: "uint256" },
      { name: "purchased", internalType: "uint256", type: "uint256" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "minAuctionDuration",
    outputs: [{ name: "", internalType: "uint48", type: "uint48" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "bidId_", internalType: "uint64", type: "uint64" },
      { name: "index_", internalType: "uint256", type: "uint256" },
      { name: "caller_", internalType: "address", type: "address" },
    ],
    name: "refundBid",
    outputs: [{ name: "refund", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "lotId_", internalType: "uint96", type: "uint96" }],
    name: "remainingCapacity",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "period_", internalType: "uint48", type: "uint48" }],
    name: "setDedicatedSettlePeriod",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "duration_", internalType: "uint48", type: "uint48" }],
    name: "setMinAuctionDuration",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "num_", internalType: "uint256", type: "uint256" },
    ],
    name: "settle",
    outputs: [
      { name: "totalIn", internalType: "uint256", type: "uint256" },
      { name: "totalOut", internalType: "uint256", type: "uint256" },
      { name: "capacity", internalType: "uint256", type: "uint256" },
      { name: "finished", internalType: "bool", type: "bool" },
      { name: "auctionOutput", internalType: "bytes", type: "bytes" },
    ],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "privateKey_", internalType: "uint256", type: "uint256" },
      { name: "num_", internalType: "uint64", type: "uint64" },
      { name: "sortHints_", internalType: "bytes32[]", type: "bytes32[]" },
    ],
    name: "submitPrivateKey",
    outputs: [],
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "lotId", internalType: "uint96", type: "uint96", indexed: true },
      { name: "bidId", internalType: "uint64", type: "uint64", indexed: true },
      {
        name: "amountIn",
        internalType: "uint96",
        type: "uint96",
        indexed: false,
      },
      {
        name: "amountOut",
        internalType: "uint96",
        type: "uint96",
        indexed: false,
      },
    ],
    name: "BidDecrypted",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "lotId", internalType: "uint96", type: "uint96", indexed: true },
    ],
    name: "PrivateKeySubmitted",
  },
  { type: "error", inputs: [], name: "Auction_AmountLessThanMinimum" },
  {
    type: "error",
    inputs: [{ name: "lotId", internalType: "uint96", type: "uint96" }],
    name: "Auction_DedicatedSettlePeriod",
  },
  { type: "error", inputs: [], name: "Auction_InsufficientCapacity" },
  {
    type: "error",
    inputs: [
      { name: "lotId", internalType: "uint96", type: "uint96" },
      { name: "bidId", internalType: "uint96", type: "uint96" },
    ],
    name: "Auction_InvalidBidId",
  },
  {
    type: "error",
    inputs: [
      { name: "duration_", internalType: "uint48", type: "uint48" },
      { name: "minimum_", internalType: "uint48", type: "uint48" },
    ],
    name: "Auction_InvalidDuration",
  },
  { type: "error", inputs: [], name: "Auction_InvalidKey" },
  {
    type: "error",
    inputs: [{ name: "lotId", internalType: "uint96", type: "uint96" }],
    name: "Auction_InvalidLotId",
  },
  { type: "error", inputs: [], name: "Auction_InvalidParams" },
  {
    type: "error",
    inputs: [
      { name: "start_", internalType: "uint48", type: "uint48" },
      { name: "minimum_", internalType: "uint48", type: "uint48" },
    ],
    name: "Auction_InvalidStart",
  },
  {
    type: "error",
    inputs: [{ name: "lotId", internalType: "uint96", type: "uint96" }],
    name: "Auction_LotActive",
  },
  {
    type: "error",
    inputs: [{ name: "lotId", internalType: "uint96", type: "uint96" }],
    name: "Auction_LotNotActive",
  },
  {
    type: "error",
    inputs: [{ name: "lotId", internalType: "uint96", type: "uint96" }],
    name: "Auction_LotNotConcluded",
  },
  { type: "error", inputs: [], name: "Auction_NotAuthorized" },
  { type: "error", inputs: [], name: "Auction_NotBidder" },
  { type: "error", inputs: [], name: "Auction_NotImplemented" },
  { type: "error", inputs: [], name: "Auction_OnlyLotOwner" },
  {
    type: "error",
    inputs: [{ name: "lotId", internalType: "uint96", type: "uint96" }],
    name: "Auction_WrongState",
  },
  {
    type: "error",
    inputs: [
      { name: "lotId", internalType: "uint96", type: "uint96" },
      { name: "bidId", internalType: "uint64", type: "uint64" },
    ],
    name: "Bid_WrongState",
  },
  {
    type: "error",
    inputs: [{ name: "parent_", internalType: "address", type: "address" }],
    name: "Module_InvalidParent",
  },
  { type: "error", inputs: [], name: "Module_OnlyInternal" },
  {
    type: "error",
    inputs: [{ name: "caller_", internalType: "address", type: "address" }],
    name: "Module_OnlyParent",
  },
  {
    type: "error",
    inputs: [{ name: "caller", internalType: "address", type: "address" }],
    name: "NotPermitted",
  },
] as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// fixedPriceBatch
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const fixedPriceBatchAbi = [
  {
    stateMutability: "nonpayable",
    type: "constructor",
    inputs: [
      { name: "auctionHouse_", internalType: "address", type: "address" },
    ],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [],
    name: "INIT",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "PARENT",
    outputs: [{ name: "", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "pure",
    type: "function",
    inputs: [],
    name: "TYPE",
    outputs: [{ name: "", internalType: "enum Module.Type", type: "uint8" }],
  },
  {
    stateMutability: "pure",
    type: "function",
    inputs: [],
    name: "VEECODE",
    outputs: [{ name: "", internalType: "Veecode", type: "bytes7" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "lotId_", internalType: "uint96", type: "uint96" }],
    name: "abort",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      {
        name: "params_",
        internalType: "struct IAuction.AuctionParams",
        type: "tuple",
        components: [
          { name: "start", internalType: "uint48", type: "uint48" },
          { name: "duration", internalType: "uint48", type: "uint48" },
          { name: "capacityInQuote", internalType: "bool", type: "bool" },
          { name: "capacity", internalType: "uint256", type: "uint256" },
          { name: "implParams", internalType: "bytes", type: "bytes" },
        ],
      },
      { name: "quoteTokenDecimals_", internalType: "uint8", type: "uint8" },
      { name: "baseTokenDecimals_", internalType: "uint8", type: "uint8" },
    ],
    name: "auction",
    outputs: [],
  },
  {
    stateMutability: "pure",
    type: "function",
    inputs: [],
    name: "auctionType",
    outputs: [
      { name: "", internalType: "enum IAuction.AuctionType", type: "uint8" },
    ],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "bidder_", internalType: "address", type: "address" },
      { name: "referrer_", internalType: "address", type: "address" },
      { name: "amount_", internalType: "uint256", type: "uint256" },
      { name: "auctionData_", internalType: "bytes", type: "bytes" },
    ],
    name: "bid",
    outputs: [{ name: "bidId", internalType: "uint64", type: "uint64" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "lotId_", internalType: "uint96", type: "uint96" }],
    name: "cancelAuction",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "lotId_", internalType: "uint96", type: "uint96" }],
    name: "capacityInQuote",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "bidIds_", internalType: "uint64[]", type: "uint64[]" },
    ],
    name: "claimBids",
    outputs: [
      {
        name: "bidClaims",
        internalType: "struct IBatchAuction.BidClaim[]",
        type: "tuple[]",
        components: [
          { name: "bidder", internalType: "address", type: "address" },
          { name: "referrer", internalType: "address", type: "address" },
          { name: "paid", internalType: "uint256", type: "uint256" },
          { name: "payout", internalType: "uint256", type: "uint256" },
          { name: "refund", internalType: "uint256", type: "uint256" },
        ],
      },
      { name: "auctionOutput", internalType: "bytes", type: "bytes" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "dedicatedSettlePeriod",
    outputs: [{ name: "", internalType: "uint48", type: "uint48" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "lotId_", internalType: "uint96", type: "uint96" }],
    name: "getAuctionData",
    outputs: [
      {
        name: "auctionData_",
        internalType: "struct IFixedPriceBatch.AuctionData",
        type: "tuple",
        components: [
          { name: "price", internalType: "uint256", type: "uint256" },
          {
            name: "status",
            internalType: "enum IFixedPriceBatch.LotStatus",
            type: "uint8",
          },
          { name: "nextBidId", internalType: "uint64", type: "uint64" },
          { name: "settlementCleared", internalType: "bool", type: "bool" },
          { name: "totalBidAmount", internalType: "uint256", type: "uint256" },
          { name: "minFilled", internalType: "uint256", type: "uint256" },
        ],
      },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "bidId_", internalType: "uint64", type: "uint64" },
    ],
    name: "getBid",
    outputs: [
      {
        name: "bid",
        internalType: "struct IFixedPriceBatch.Bid",
        type: "tuple",
        components: [
          { name: "bidder", internalType: "address", type: "address" },
          { name: "amount", internalType: "uint96", type: "uint96" },
          { name: "referrer", internalType: "address", type: "address" },
          {
            name: "status",
            internalType: "enum IFixedPriceBatch.BidStatus",
            type: "uint8",
          },
        ],
      },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "bidId_", internalType: "uint64", type: "uint64" },
    ],
    name: "getBidClaim",
    outputs: [
      {
        name: "bidClaim",
        internalType: "struct IBatchAuction.BidClaim",
        type: "tuple",
        components: [
          { name: "bidder", internalType: "address", type: "address" },
          { name: "referrer", internalType: "address", type: "address" },
          { name: "paid", internalType: "uint256", type: "uint256" },
          { name: "payout", internalType: "uint256", type: "uint256" },
          { name: "refund", internalType: "uint256", type: "uint256" },
        ],
      },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "", internalType: "uint96", type: "uint96" },
      { name: "", internalType: "uint256", type: "uint256" },
    ],
    name: "getBidIdAtIndex",
    outputs: [{ name: "", internalType: "uint64", type: "uint64" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "", internalType: "uint96", type: "uint96" },
      { name: "", internalType: "uint256", type: "uint256" },
      { name: "", internalType: "uint256", type: "uint256" },
    ],
    name: "getBidIds",
    outputs: [{ name: "", internalType: "uint64[]", type: "uint64[]" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "lotId_", internalType: "uint96", type: "uint96" }],
    name: "getLot",
    outputs: [
      {
        name: "",
        internalType: "struct IAuction.Lot",
        type: "tuple",
        components: [
          { name: "start", internalType: "uint48", type: "uint48" },
          { name: "conclusion", internalType: "uint48", type: "uint48" },
          { name: "quoteTokenDecimals", internalType: "uint8", type: "uint8" },
          { name: "baseTokenDecimals", internalType: "uint8", type: "uint8" },
          { name: "capacityInQuote", internalType: "bool", type: "bool" },
          { name: "capacity", internalType: "uint256", type: "uint256" },
          { name: "sold", internalType: "uint256", type: "uint256" },
          { name: "purchased", internalType: "uint256", type: "uint256" },
        ],
      },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "uint96", type: "uint96" }],
    name: "getNumBids",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "lotId_", internalType: "uint96", type: "uint96" }],
    name: "getPartialFill",
    outputs: [
      { name: "hasPartialFill", internalType: "bool", type: "bool" },
      {
        name: "partialFill",
        internalType: "struct IFixedPriceBatch.PartialFill",
        type: "tuple",
        components: [
          { name: "bidId", internalType: "uint64", type: "uint64" },
          { name: "refund", internalType: "uint96", type: "uint96" },
          { name: "payout", internalType: "uint256", type: "uint256" },
        ],
      },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "lotId_", internalType: "uint96", type: "uint96" }],
    name: "hasEnded",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "lotId_", internalType: "uint96", type: "uint96" }],
    name: "isLive",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "lotId_", internalType: "uint96", type: "uint96" }],
    name: "isUpcoming",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "uint96", type: "uint96" }],
    name: "lotAuctionOutput",
    outputs: [{ name: "", internalType: "bytes", type: "bytes" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "id", internalType: "uint96", type: "uint96" }],
    name: "lotData",
    outputs: [
      { name: "start", internalType: "uint48", type: "uint48" },
      { name: "conclusion", internalType: "uint48", type: "uint48" },
      { name: "quoteTokenDecimals", internalType: "uint8", type: "uint8" },
      { name: "baseTokenDecimals", internalType: "uint8", type: "uint8" },
      { name: "capacityInQuote", internalType: "bool", type: "bool" },
      { name: "capacity", internalType: "uint256", type: "uint256" },
      { name: "sold", internalType: "uint256", type: "uint256" },
      { name: "purchased", internalType: "uint256", type: "uint256" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "minAuctionDuration",
    outputs: [{ name: "", internalType: "uint48", type: "uint48" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "bidId_", internalType: "uint64", type: "uint64" },
      { name: "index_", internalType: "uint256", type: "uint256" },
      { name: "caller_", internalType: "address", type: "address" },
    ],
    name: "refundBid",
    outputs: [{ name: "refund", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "lotId_", internalType: "uint96", type: "uint96" }],
    name: "remainingCapacity",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "period_", internalType: "uint48", type: "uint48" }],
    name: "setDedicatedSettlePeriod",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "duration_", internalType: "uint48", type: "uint48" }],
    name: "setMinAuctionDuration",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "num_", internalType: "uint256", type: "uint256" },
    ],
    name: "settle",
    outputs: [
      { name: "totalIn", internalType: "uint256", type: "uint256" },
      { name: "totalOut", internalType: "uint256", type: "uint256" },
      { name: "capacity", internalType: "uint256", type: "uint256" },
      { name: "finished", internalType: "bool", type: "bool" },
      { name: "auctionOutput", internalType: "bytes", type: "bytes" },
    ],
  },
  { type: "error", inputs: [], name: "Auction_AmountLessThanMinimum" },
  {
    type: "error",
    inputs: [{ name: "lotId", internalType: "uint96", type: "uint96" }],
    name: "Auction_DedicatedSettlePeriod",
  },
  { type: "error", inputs: [], name: "Auction_InsufficientCapacity" },
  {
    type: "error",
    inputs: [
      { name: "lotId", internalType: "uint96", type: "uint96" },
      { name: "bidId", internalType: "uint96", type: "uint96" },
    ],
    name: "Auction_InvalidBidId",
  },
  {
    type: "error",
    inputs: [
      { name: "duration_", internalType: "uint48", type: "uint48" },
      { name: "minimum_", internalType: "uint48", type: "uint48" },
    ],
    name: "Auction_InvalidDuration",
  },
  {
    type: "error",
    inputs: [{ name: "lotId", internalType: "uint96", type: "uint96" }],
    name: "Auction_InvalidLotId",
  },
  { type: "error", inputs: [], name: "Auction_InvalidParams" },
  {
    type: "error",
    inputs: [
      { name: "start_", internalType: "uint48", type: "uint48" },
      { name: "minimum_", internalType: "uint48", type: "uint48" },
    ],
    name: "Auction_InvalidStart",
  },
  {
    type: "error",
    inputs: [{ name: "lotId", internalType: "uint96", type: "uint96" }],
    name: "Auction_LotActive",
  },
  {
    type: "error",
    inputs: [{ name: "lotId", internalType: "uint96", type: "uint96" }],
    name: "Auction_LotNotActive",
  },
  {
    type: "error",
    inputs: [{ name: "lotId", internalType: "uint96", type: "uint96" }],
    name: "Auction_LotNotConcluded",
  },
  { type: "error", inputs: [], name: "Auction_NotAuthorized" },
  { type: "error", inputs: [], name: "Auction_NotBidder" },
  { type: "error", inputs: [], name: "Auction_NotImplemented" },
  { type: "error", inputs: [], name: "Auction_OnlyLotOwner" },
  {
    type: "error",
    inputs: [{ name: "lotId", internalType: "uint96", type: "uint96" }],
    name: "Auction_WrongState",
  },
  {
    type: "error",
    inputs: [
      { name: "lotId", internalType: "uint96", type: "uint96" },
      { name: "bidId", internalType: "uint64", type: "uint64" },
    ],
    name: "Bid_WrongState",
  },
  {
    type: "error",
    inputs: [{ name: "parent_", internalType: "address", type: "address" }],
    name: "Module_InvalidParent",
  },
  { type: "error", inputs: [], name: "Module_OnlyInternal" },
  {
    type: "error",
    inputs: [{ name: "caller_", internalType: "address", type: "address" }],
    name: "Module_OnlyParent",
  },
  {
    type: "error",
    inputs: [{ name: "caller", internalType: "address", type: "address" }],
    name: "NotPermitted",
  },
] as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// linearVesting
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const linearVestingAbi = [
  {
    stateMutability: "nonpayable",
    type: "constructor",
    inputs: [{ name: "parent_", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [],
    name: "INIT",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "PARENT",
    outputs: [{ name: "", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "pure",
    type: "function",
    inputs: [],
    name: "TYPE",
    outputs: [{ name: "", internalType: "enum Module.Type", type: "uint8" }],
  },
  {
    stateMutability: "pure",
    type: "function",
    inputs: [],
    name: "VEECODE",
    outputs: [{ name: "", internalType: "Veecode", type: "bytes7" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "", internalType: "address", type: "address" },
      { name: "", internalType: "address", type: "address" },
      { name: "", internalType: "uint256", type: "uint256" },
    ],
    name: "allowance",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "", internalType: "address", type: "address" },
      { name: "", internalType: "uint256", type: "uint256" },
      { name: "", internalType: "uint256", type: "uint256" },
    ],
    name: "approve",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "", internalType: "address", type: "address" },
      { name: "", internalType: "uint256", type: "uint256" },
    ],
    name: "balanceOf",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "pure",
    type: "function",
    inputs: [
      { name: "underlyingToken_", internalType: "address", type: "address" },
      { name: "params_", internalType: "bytes", type: "bytes" },
    ],
    name: "computeId",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "tokenId_", internalType: "uint256", type: "uint256" }],
    name: "decimals",
    outputs: [{ name: "", internalType: "uint8", type: "uint8" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "underlyingToken_", internalType: "address", type: "address" },
      { name: "params_", internalType: "bytes", type: "bytes" },
      { name: "wrapped_", internalType: "bool", type: "bool" },
    ],
    name: "deploy",
    outputs: [
      { name: "tokenId_", internalType: "uint256", type: "uint256" },
      { name: "wrappedAddress_", internalType: "address", type: "address" },
    ],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "", internalType: "uint256", type: "uint256" },
      { name: "", internalType: "uint256", type: "uint256" },
    ],
    name: "exercise",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "", internalType: "uint256", type: "uint256" },
      { name: "", internalType: "uint256", type: "uint256" },
    ],
    name: "exerciseCost",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "tokenId", internalType: "uint256", type: "uint256" }],
    name: "getTokenMetadata",
    outputs: [
      {
        name: "",
        internalType: "struct IDerivative.Token",
        type: "tuple",
        components: [
          { name: "exists", internalType: "bool", type: "bool" },
          { name: "wrapped", internalType: "address", type: "address" },
          { name: "underlyingToken", internalType: "address", type: "address" },
          { name: "supply", internalType: "uint256", type: "uint256" },
          { name: "data", internalType: "bytes", type: "bytes" },
        ],
      },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "tokenId_", internalType: "uint256", type: "uint256" }],
    name: "getTokenVestingParams",
    outputs: [
      {
        name: "",
        internalType: "struct ILinearVesting.VestingParams",
        type: "tuple",
        components: [
          { name: "start", internalType: "uint48", type: "uint48" },
          { name: "expiry", internalType: "uint48", type: "uint48" },
        ],
      },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "", internalType: "address", type: "address" },
      { name: "", internalType: "address", type: "address" },
    ],
    name: "isOperator",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "to_", internalType: "address", type: "address" },
      { name: "tokenId_", internalType: "uint256", type: "uint256" },
      { name: "amount_", internalType: "uint256", type: "uint256" },
      { name: "wrapped_", internalType: "bool", type: "bool" },
    ],
    name: "mint",
    outputs: [
      { name: "", internalType: "uint256", type: "uint256" },
      { name: "", internalType: "address", type: "address" },
      { name: "", internalType: "uint256", type: "uint256" },
    ],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "to_", internalType: "address", type: "address" },
      { name: "underlyingToken_", internalType: "address", type: "address" },
      { name: "params_", internalType: "bytes", type: "bytes" },
      { name: "amount_", internalType: "uint256", type: "uint256" },
      { name: "wrapped_", internalType: "bool", type: "bool" },
    ],
    name: "mint",
    outputs: [
      { name: "tokenId_", internalType: "uint256", type: "uint256" },
      { name: "wrappedAddress_", internalType: "address", type: "address" },
      { name: "amountCreated_", internalType: "uint256", type: "uint256" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "tokenId_", internalType: "uint256", type: "uint256" }],
    name: "name",
    outputs: [{ name: "", internalType: "string", type: "string" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    name: "reclaim",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "tokenId_", internalType: "uint256", type: "uint256" },
      { name: "amount_", internalType: "uint256", type: "uint256" },
    ],
    name: "redeem",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "tokenId_", internalType: "uint256", type: "uint256" }],
    name: "redeemMax",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "owner_", internalType: "address", type: "address" },
      { name: "tokenId_", internalType: "uint256", type: "uint256" },
    ],
    name: "redeemable",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "operator", internalType: "address", type: "address" },
      { name: "approved", internalType: "bool", type: "bool" },
    ],
    name: "setOperator",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "interfaceId", internalType: "bytes4", type: "bytes4" }],
    name: "supportsInterface",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "tokenId_", internalType: "uint256", type: "uint256" }],
    name: "symbol",
    outputs: [{ name: "", internalType: "string", type: "string" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "tokenId", internalType: "uint256", type: "uint256" }],
    name: "tokenMetadata",
    outputs: [
      { name: "exists", internalType: "bool", type: "bool" },
      { name: "wrapped", internalType: "address", type: "address" },
      { name: "underlyingToken", internalType: "address", type: "address" },
      { name: "supply", internalType: "uint256", type: "uint256" },
      { name: "data", internalType: "bytes", type: "bytes" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "tokenId_", internalType: "uint256", type: "uint256" }],
    name: "tokenURI",
    outputs: [{ name: "", internalType: "string", type: "string" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "tokenId", internalType: "uint256", type: "uint256" }],
    name: "totalSupply",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "", internalType: "address", type: "address" },
      { name: "", internalType: "uint256", type: "uint256" },
      { name: "", internalType: "uint256", type: "uint256" },
    ],
    name: "transfer",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "", internalType: "address", type: "address" },
      { name: "", internalType: "address", type: "address" },
      { name: "", internalType: "uint256", type: "uint256" },
      { name: "", internalType: "uint256", type: "uint256" },
    ],
    name: "transferFrom",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "", internalType: "uint256", type: "uint256" },
      { name: "", internalType: "address", type: "address" },
      { name: "", internalType: "uint256", type: "uint256" },
    ],
    name: "transform",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "tokenId_", internalType: "uint256", type: "uint256" },
      { name: "amount_", internalType: "uint256", type: "uint256" },
    ],
    name: "unwrap",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "owner_", internalType: "address", type: "address" },
      { name: "tokenId_", internalType: "uint256", type: "uint256" },
    ],
    name: "userClaimed",
    outputs: [{ name: "claimed_", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "pure",
    type: "function",
    inputs: [
      { name: "underlyingToken_", internalType: "address", type: "address" },
      { name: "params_", internalType: "bytes", type: "bytes" },
    ],
    name: "validate",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "tokenId_", internalType: "uint256", type: "uint256" },
      { name: "amount_", internalType: "uint256", type: "uint256" },
    ],
    name: "wrap",
    outputs: [],
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "owner",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "spender",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      { name: "id", internalType: "uint256", type: "uint256", indexed: true },
      {
        name: "amount",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "Approval",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "tokenId",
        internalType: "uint256",
        type: "uint256",
        indexed: true,
      },
      { name: "start", internalType: "uint48", type: "uint48", indexed: false },
      {
        name: "expiry",
        internalType: "uint48",
        type: "uint48",
        indexed: false,
      },
      {
        name: "baseToken",
        internalType: "address",
        type: "address",
        indexed: false,
      },
    ],
    name: "DerivativeCreated",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "owner",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "operator",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      { name: "approved", internalType: "bool", type: "bool", indexed: false },
    ],
    name: "OperatorSet",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "tokenId",
        internalType: "uint256",
        type: "uint256",
        indexed: true,
      },
      {
        name: "owner",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "amount",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "Redeemed",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "caller",
        internalType: "address",
        type: "address",
        indexed: false,
      },
      { name: "from", internalType: "address", type: "address", indexed: true },
      { name: "to", internalType: "address", type: "address", indexed: true },
      { name: "id", internalType: "uint256", type: "uint256", indexed: true },
      {
        name: "amount",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "Transfer",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "tokenId",
        internalType: "uint256",
        type: "uint256",
        indexed: true,
      },
      {
        name: "owner",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "amount",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
      {
        name: "wrappedToken",
        internalType: "address",
        type: "address",
        indexed: false,
      },
    ],
    name: "Unwrapped",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "tokenId",
        internalType: "uint256",
        type: "uint256",
        indexed: true,
      },
      {
        name: "owner",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "amount",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
      {
        name: "wrappedToken",
        internalType: "address",
        type: "address",
        indexed: false,
      },
    ],
    name: "Wrapped",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "tokenId",
        internalType: "uint256",
        type: "uint256",
        indexed: true,
      },
      {
        name: "wrappedToken",
        internalType: "address",
        type: "address",
        indexed: false,
      },
    ],
    name: "WrappedDerivativeCreated",
  },
  { type: "error", inputs: [], name: "BrokenInvariant" },
  { type: "error", inputs: [], name: "Derivative_NotImplemented" },
  { type: "error", inputs: [], name: "InsufficientBalance" },
  { type: "error", inputs: [], name: "InvalidParams" },
  {
    type: "error",
    inputs: [{ name: "parent_", internalType: "address", type: "address" }],
    name: "Module_InvalidParent",
  },
  { type: "error", inputs: [], name: "Module_OnlyInternal" },
  {
    type: "error",
    inputs: [{ name: "caller_", internalType: "address", type: "address" }],
    name: "Module_OnlyParent",
  },
  { type: "error", inputs: [], name: "NotPermitted" },
  {
    type: "error",
    inputs: [
      { name: "value", internalType: "uint256", type: "uint256" },
      { name: "length", internalType: "uint256", type: "uint256" },
    ],
    name: "StringsInsufficientHexLength",
  },
  {
    type: "error",
    inputs: [{ name: "token_", internalType: "address", type: "address" }],
    name: "UnsupportedToken",
  },
] as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// merkleAllowlist
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const merkleAllowlistAbi = [
  {
    stateMutability: "nonpayable",
    type: "constructor",
    inputs: [
      { name: "auctionHouse_", internalType: "address", type: "address" },
      {
        name: "permissions_",
        internalType: "struct Callbacks.Permissions",
        type: "tuple",
        components: [
          { name: "onCreate", internalType: "bool", type: "bool" },
          { name: "onCancel", internalType: "bool", type: "bool" },
          { name: "onCurate", internalType: "bool", type: "bool" },
          { name: "onPurchase", internalType: "bool", type: "bool" },
          { name: "onBid", internalType: "bool", type: "bool" },
          { name: "onSettle", internalType: "bool", type: "bool" },
          { name: "receiveQuoteTokens", internalType: "bool", type: "bool" },
          { name: "sendBaseTokens", internalType: "bool", type: "bool" },
        ],
      },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "AUCTION_HOUSE",
    outputs: [{ name: "", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "uint96", type: "uint96" }],
    name: "lotIdRegistered",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "lotId", internalType: "uint96", type: "uint96" }],
    name: "lotMerkleRoot",
    outputs: [{ name: "merkleRoot", internalType: "bytes32", type: "bytes32" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "bidId", internalType: "uint64", type: "uint64" },
      { name: "buyer_", internalType: "address", type: "address" },
      { name: "amount_", internalType: "uint256", type: "uint256" },
      { name: "callbackData_", internalType: "bytes", type: "bytes" },
    ],
    name: "onBid",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "refund_", internalType: "uint256", type: "uint256" },
      { name: "prefunded_", internalType: "bool", type: "bool" },
      { name: "callbackData_", internalType: "bytes", type: "bytes" },
    ],
    name: "onCancel",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "seller_", internalType: "address", type: "address" },
      { name: "baseToken_", internalType: "address", type: "address" },
      { name: "quoteToken_", internalType: "address", type: "address" },
      { name: "capacity_", internalType: "uint256", type: "uint256" },
      { name: "prefund_", internalType: "bool", type: "bool" },
      { name: "callbackData_", internalType: "bytes", type: "bytes" },
    ],
    name: "onCreate",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "curatorFee_", internalType: "uint256", type: "uint256" },
      { name: "prefund_", internalType: "bool", type: "bool" },
      { name: "callbackData_", internalType: "bytes", type: "bytes" },
    ],
    name: "onCurate",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "buyer_", internalType: "address", type: "address" },
      { name: "amount_", internalType: "uint256", type: "uint256" },
      { name: "payout_", internalType: "uint256", type: "uint256" },
      { name: "prefunded_", internalType: "bool", type: "bool" },
      { name: "callbackData_", internalType: "bytes", type: "bytes" },
    ],
    name: "onPurchase",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "proceeds_", internalType: "uint256", type: "uint256" },
      { name: "refund_", internalType: "uint256", type: "uint256" },
      { name: "callbackData_", internalType: "bytes", type: "bytes" },
    ],
    name: "onSettle",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "merkleRoot_", internalType: "bytes32", type: "bytes32" },
    ],
    name: "setMerkleRoot",
    outputs: [],
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "lotId", internalType: "uint96", type: "uint96", indexed: false },
      {
        name: "merkleRoot",
        internalType: "bytes32",
        type: "bytes32",
        indexed: false,
      },
    ],
    name: "MerkleRootSet",
  },
  { type: "error", inputs: [], name: "Callback_InvalidParams" },
  { type: "error", inputs: [], name: "Callback_NotAuthorized" },
  { type: "error", inputs: [], name: "Callback_NotImplemented" },
  {
    type: "error",
    inputs: [{ name: "callbacks", internalType: "address", type: "address" }],
    name: "CallbacksAddressNotValid",
  },
] as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// tokenAllowlist
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const tokenAllowlistAbi = [
  {
    stateMutability: "nonpayable",
    type: "constructor",
    inputs: [
      { name: "auctionHouse_", internalType: "address", type: "address" },
      {
        name: "permissions_",
        internalType: "struct Callbacks.Permissions",
        type: "tuple",
        components: [
          { name: "onCreate", internalType: "bool", type: "bool" },
          { name: "onCancel", internalType: "bool", type: "bool" },
          { name: "onCurate", internalType: "bool", type: "bool" },
          { name: "onPurchase", internalType: "bool", type: "bool" },
          { name: "onBid", internalType: "bool", type: "bool" },
          { name: "onSettle", internalType: "bool", type: "bool" },
          { name: "receiveQuoteTokens", internalType: "bool", type: "bool" },
          { name: "sendBaseTokens", internalType: "bool", type: "bool" },
        ],
      },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "AUCTION_HOUSE",
    outputs: [{ name: "", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "lotId", internalType: "uint96", type: "uint96" }],
    name: "lotChecks",
    outputs: [
      {
        name: "token",
        internalType: "contract ITokenBalance",
        type: "address",
      },
      { name: "threshold", internalType: "uint256", type: "uint256" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "uint96", type: "uint96" }],
    name: "lotIdRegistered",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "bidId", internalType: "uint64", type: "uint64" },
      { name: "buyer_", internalType: "address", type: "address" },
      { name: "amount_", internalType: "uint256", type: "uint256" },
      { name: "callbackData_", internalType: "bytes", type: "bytes" },
    ],
    name: "onBid",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "refund_", internalType: "uint256", type: "uint256" },
      { name: "prefunded_", internalType: "bool", type: "bool" },
      { name: "callbackData_", internalType: "bytes", type: "bytes" },
    ],
    name: "onCancel",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "seller_", internalType: "address", type: "address" },
      { name: "baseToken_", internalType: "address", type: "address" },
      { name: "quoteToken_", internalType: "address", type: "address" },
      { name: "capacity_", internalType: "uint256", type: "uint256" },
      { name: "prefund_", internalType: "bool", type: "bool" },
      { name: "callbackData_", internalType: "bytes", type: "bytes" },
    ],
    name: "onCreate",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "curatorFee_", internalType: "uint256", type: "uint256" },
      { name: "prefund_", internalType: "bool", type: "bool" },
      { name: "callbackData_", internalType: "bytes", type: "bytes" },
    ],
    name: "onCurate",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "buyer_", internalType: "address", type: "address" },
      { name: "amount_", internalType: "uint256", type: "uint256" },
      { name: "payout_", internalType: "uint256", type: "uint256" },
      { name: "prefunded_", internalType: "bool", type: "bool" },
      { name: "callbackData_", internalType: "bytes", type: "bytes" },
    ],
    name: "onPurchase",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "proceeds_", internalType: "uint256", type: "uint256" },
      { name: "refund_", internalType: "uint256", type: "uint256" },
      { name: "callbackData_", internalType: "bytes", type: "bytes" },
    ],
    name: "onSettle",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
  },
  { type: "error", inputs: [], name: "Callback_InvalidParams" },
  { type: "error", inputs: [], name: "Callback_NotAuthorized" },
  { type: "error", inputs: [], name: "Callback_NotImplemented" },
  {
    type: "error",
    inputs: [{ name: "callbacks", internalType: "address", type: "address" }],
    name: "CallbacksAddressNotValid",
  },
] as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// uniV2Dtl
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const uniV2DtlAbi = [
  {
    stateMutability: "nonpayable",
    type: "constructor",
    inputs: [
      { name: "auctionHouse_", internalType: "address", type: "address" },
      { name: "uniswapV2Factory_", internalType: "address", type: "address" },
      { name: "uniswapV2Router_", internalType: "address", type: "address" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "AUCTION_HOUSE",
    outputs: [{ name: "", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "LINEAR_VESTING_KEYCODE",
    outputs: [{ name: "", internalType: "bytes5", type: "bytes5" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "ONE_HUNDRED_PERCENT",
    outputs: [{ name: "", internalType: "uint24", type: "uint24" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "lotId", internalType: "uint96", type: "uint96" }],
    name: "lotConfiguration",
    outputs: [
      { name: "recipient", internalType: "address", type: "address" },
      { name: "lotCapacity", internalType: "uint256", type: "uint256" },
      { name: "lotCuratorPayout", internalType: "uint256", type: "uint256" },
      {
        name: "proceedsUtilisationPercent",
        internalType: "uint24",
        type: "uint24",
      },
      { name: "vestingStart", internalType: "uint48", type: "uint48" },
      { name: "vestingExpiry", internalType: "uint48", type: "uint48" },
      {
        name: "linearVestingModule",
        internalType: "contract LinearVesting",
        type: "address",
      },
      { name: "active", internalType: "bool", type: "bool" },
      { name: "implParams", internalType: "bytes", type: "bytes" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "uint96", type: "uint96" }],
    name: "lotIdRegistered",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "bidId", internalType: "uint64", type: "uint64" },
      { name: "buyer_", internalType: "address", type: "address" },
      { name: "amount_", internalType: "uint256", type: "uint256" },
      { name: "callbackData_", internalType: "bytes", type: "bytes" },
    ],
    name: "onBid",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "refund_", internalType: "uint256", type: "uint256" },
      { name: "prefunded_", internalType: "bool", type: "bool" },
      { name: "callbackData_", internalType: "bytes", type: "bytes" },
    ],
    name: "onCancel",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "seller_", internalType: "address", type: "address" },
      { name: "baseToken_", internalType: "address", type: "address" },
      { name: "quoteToken_", internalType: "address", type: "address" },
      { name: "capacity_", internalType: "uint256", type: "uint256" },
      { name: "prefund_", internalType: "bool", type: "bool" },
      { name: "callbackData_", internalType: "bytes", type: "bytes" },
    ],
    name: "onCreate",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "curatorFee_", internalType: "uint256", type: "uint256" },
      { name: "prefund_", internalType: "bool", type: "bool" },
      { name: "callbackData_", internalType: "bytes", type: "bytes" },
    ],
    name: "onCurate",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "buyer_", internalType: "address", type: "address" },
      { name: "amount_", internalType: "uint256", type: "uint256" },
      { name: "payout_", internalType: "uint256", type: "uint256" },
      { name: "prefunded_", internalType: "bool", type: "bool" },
      { name: "callbackData_", internalType: "bytes", type: "bytes" },
    ],
    name: "onPurchase",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "proceeds_", internalType: "uint256", type: "uint256" },
      { name: "refund_", internalType: "uint256", type: "uint256" },
      { name: "callbackData_", internalType: "bytes", type: "bytes" },
    ],
    name: "onSettle",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "uniV2Factory",
    outputs: [
      { name: "", internalType: "contract IUniswapV2Factory", type: "address" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "uniV2Router",
    outputs: [
      {
        name: "",
        internalType: "contract IUniswapV2Router02",
        type: "address",
      },
    ],
  },
  {
    type: "error",
    inputs: [
      { name: "token_", internalType: "address", type: "address" },
      { name: "account_", internalType: "address", type: "address" },
      { name: "balance_", internalType: "uint256", type: "uint256" },
      { name: "required_", internalType: "uint256", type: "uint256" },
    ],
    name: "Callback_InsufficientBalance",
  },
  { type: "error", inputs: [], name: "Callback_InvalidParams" },
  { type: "error", inputs: [], name: "Callback_LinearVestingModuleNotFound" },
  { type: "error", inputs: [], name: "Callback_NotAuthorized" },
  { type: "error", inputs: [], name: "Callback_NotImplemented" },
  { type: "error", inputs: [], name: "Callback_Params_InvalidAddress" },
  { type: "error", inputs: [], name: "Callback_Params_InvalidVestingParams" },
  {
    type: "error",
    inputs: [
      { name: "actual_", internalType: "uint24", type: "uint24" },
      { name: "min_", internalType: "uint24", type: "uint24" },
      { name: "max_", internalType: "uint24", type: "uint24" },
    ],
    name: "Callback_Params_PercentOutOfBounds",
  },
  { type: "error", inputs: [], name: "Callback_Params_PoolExists" },
  {
    type: "error",
    inputs: [{ name: "callbacks", internalType: "address", type: "address" }],
    name: "CallbacksAddressNotValid",
  },
] as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// uniV2Factory
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const uniV2FactoryAbi = [
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    name: "allPairs",
    outputs: [{ name: "pair", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "allPairsLength",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "tokenA", internalType: "address", type: "address" },
      { name: "tokenB", internalType: "address", type: "address" },
    ],
    name: "createPair",
    outputs: [{ name: "pair", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "feeTo",
    outputs: [{ name: "", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "feeToSetter",
    outputs: [{ name: "", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "tokenA", internalType: "address", type: "address" },
      { name: "tokenB", internalType: "address", type: "address" },
    ],
    name: "getPair",
    outputs: [{ name: "pair", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "", internalType: "address", type: "address" }],
    name: "setFeeTo",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "", internalType: "address", type: "address" }],
    name: "setFeeToSetter",
    outputs: [],
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "token0",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "token1",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "pair",
        internalType: "address",
        type: "address",
        indexed: false,
      },
      { name: "", internalType: "uint256", type: "uint256", indexed: false },
    ],
    name: "PairCreated",
  },
] as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// uniV3Dtl
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const uniV3DtlAbi = [
  {
    stateMutability: "nonpayable",
    type: "constructor",
    inputs: [
      { name: "auctionHouse_", internalType: "address", type: "address" },
      { name: "uniV3Factory_", internalType: "address", type: "address" },
      { name: "gUniFactory_", internalType: "address", type: "address" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "AUCTION_HOUSE",
    outputs: [{ name: "", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "LINEAR_VESTING_KEYCODE",
    outputs: [{ name: "", internalType: "bytes5", type: "bytes5" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "ONE_HUNDRED_PERCENT",
    outputs: [{ name: "", internalType: "uint24", type: "uint24" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "gUniFactory",
    outputs: [
      { name: "", internalType: "contract IGUniFactory", type: "address" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "lotId", internalType: "uint96", type: "uint96" }],
    name: "lotConfiguration",
    outputs: [
      { name: "recipient", internalType: "address", type: "address" },
      { name: "lotCapacity", internalType: "uint256", type: "uint256" },
      { name: "lotCuratorPayout", internalType: "uint256", type: "uint256" },
      {
        name: "proceedsUtilisationPercent",
        internalType: "uint24",
        type: "uint24",
      },
      { name: "vestingStart", internalType: "uint48", type: "uint48" },
      { name: "vestingExpiry", internalType: "uint48", type: "uint48" },
      {
        name: "linearVestingModule",
        internalType: "contract LinearVesting",
        type: "address",
      },
      { name: "active", internalType: "bool", type: "bool" },
      { name: "implParams", internalType: "bytes", type: "bytes" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "uint96", type: "uint96" }],
    name: "lotIdRegistered",
    outputs: [{ name: "", internalType: "bool", type: "bool" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "bidId", internalType: "uint64", type: "uint64" },
      { name: "buyer_", internalType: "address", type: "address" },
      { name: "amount_", internalType: "uint256", type: "uint256" },
      { name: "callbackData_", internalType: "bytes", type: "bytes" },
    ],
    name: "onBid",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "refund_", internalType: "uint256", type: "uint256" },
      { name: "prefunded_", internalType: "bool", type: "bool" },
      { name: "callbackData_", internalType: "bytes", type: "bytes" },
    ],
    name: "onCancel",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "seller_", internalType: "address", type: "address" },
      { name: "baseToken_", internalType: "address", type: "address" },
      { name: "quoteToken_", internalType: "address", type: "address" },
      { name: "capacity_", internalType: "uint256", type: "uint256" },
      { name: "prefund_", internalType: "bool", type: "bool" },
      { name: "callbackData_", internalType: "bytes", type: "bytes" },
    ],
    name: "onCreate",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "curatorFee_", internalType: "uint256", type: "uint256" },
      { name: "prefund_", internalType: "bool", type: "bool" },
      { name: "callbackData_", internalType: "bytes", type: "bytes" },
    ],
    name: "onCurate",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "buyer_", internalType: "address", type: "address" },
      { name: "amount_", internalType: "uint256", type: "uint256" },
      { name: "payout_", internalType: "uint256", type: "uint256" },
      { name: "prefunded_", internalType: "bool", type: "bool" },
      { name: "callbackData_", internalType: "bytes", type: "bytes" },
    ],
    name: "onPurchase",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "lotId_", internalType: "uint96", type: "uint96" },
      { name: "proceeds_", internalType: "uint256", type: "uint256" },
      { name: "refund_", internalType: "uint256", type: "uint256" },
      { name: "callbackData_", internalType: "bytes", type: "bytes" },
    ],
    name: "onSettle",
    outputs: [{ name: "", internalType: "bytes4", type: "bytes4" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "uniV3Factory",
    outputs: [
      { name: "", internalType: "contract IUniswapV3Factory", type: "address" },
    ],
  },
  {
    type: "error",
    inputs: [
      { name: "token_", internalType: "address", type: "address" },
      { name: "account_", internalType: "address", type: "address" },
      { name: "balance_", internalType: "uint256", type: "uint256" },
      { name: "required_", internalType: "uint256", type: "uint256" },
    ],
    name: "Callback_InsufficientBalance",
  },
  { type: "error", inputs: [], name: "Callback_InvalidParams" },
  { type: "error", inputs: [], name: "Callback_LinearVestingModuleNotFound" },
  { type: "error", inputs: [], name: "Callback_NotAuthorized" },
  { type: "error", inputs: [], name: "Callback_NotImplemented" },
  { type: "error", inputs: [], name: "Callback_Params_InvalidAddress" },
  { type: "error", inputs: [], name: "Callback_Params_InvalidVestingParams" },
  {
    type: "error",
    inputs: [
      { name: "actual_", internalType: "uint24", type: "uint24" },
      { name: "min_", internalType: "uint24", type: "uint24" },
      { name: "max_", internalType: "uint24", type: "uint24" },
    ],
    name: "Callback_Params_PercentOutOfBounds",
  },
  { type: "error", inputs: [], name: "Callback_Params_PoolExists" },
  { type: "error", inputs: [], name: "Callback_Params_PoolFeeNotEnabled" },
  {
    type: "error",
    inputs: [
      { name: "token_", internalType: "address", type: "address" },
      { name: "amountActual_", internalType: "uint256", type: "uint256" },
      { name: "amountMin_", internalType: "uint256", type: "uint256" },
    ],
    name: "Callback_Slippage",
  },
  {
    type: "error",
    inputs: [{ name: "callbacks", internalType: "address", type: "address" }],
    name: "CallbacksAddressNotValid",
  },
] as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// uniV3Factory
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const uniV3FactoryAbi = [
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "tokenA", internalType: "address", type: "address" },
      { name: "tokenB", internalType: "address", type: "address" },
      { name: "fee", internalType: "uint24", type: "uint24" },
    ],
    name: "createPool",
    outputs: [{ name: "pool", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "fee", internalType: "uint24", type: "uint24" },
      { name: "tickSpacing", internalType: "int24", type: "int24" },
    ],
    name: "enableFeeAmount",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "fee", internalType: "uint24", type: "uint24" }],
    name: "feeAmountTickSpacing",
    outputs: [{ name: "", internalType: "int24", type: "int24" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "tokenA", internalType: "address", type: "address" },
      { name: "tokenB", internalType: "address", type: "address" },
      { name: "fee", internalType: "uint24", type: "uint24" },
    ],
    name: "getPool",
    outputs: [{ name: "pool", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "owner",
    outputs: [{ name: "", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [{ name: "_owner", internalType: "address", type: "address" }],
    name: "setOwner",
    outputs: [],
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      { name: "fee", internalType: "uint24", type: "uint24", indexed: true },
      {
        name: "tickSpacing",
        internalType: "int24",
        type: "int24",
        indexed: true,
      },
    ],
    name: "FeeAmountEnabled",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "oldOwner",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "newOwner",
        internalType: "address",
        type: "address",
        indexed: true,
      },
    ],
    name: "OwnerChanged",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "token0",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "token1",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      { name: "fee", internalType: "uint24", type: "uint24", indexed: true },
      {
        name: "tickSpacing",
        internalType: "int24",
        type: "int24",
        indexed: false,
      },
      {
        name: "pool",
        internalType: "address",
        type: "address",
        indexed: false,
      },
    ],
    name: "PoolCreated",
  },
] as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// uniV3Pool
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const uniV3PoolAbi = [
  { stateMutability: "nonpayable", type: "constructor", inputs: [] },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "tickLower", internalType: "int24", type: "int24" },
      { name: "tickUpper", internalType: "int24", type: "int24" },
      { name: "amount", internalType: "uint128", type: "uint128" },
    ],
    name: "burn",
    outputs: [
      { name: "amount0", internalType: "uint256", type: "uint256" },
      { name: "amount1", internalType: "uint256", type: "uint256" },
    ],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "recipient", internalType: "address", type: "address" },
      { name: "tickLower", internalType: "int24", type: "int24" },
      { name: "tickUpper", internalType: "int24", type: "int24" },
      { name: "amount0Requested", internalType: "uint128", type: "uint128" },
      { name: "amount1Requested", internalType: "uint128", type: "uint128" },
    ],
    name: "collect",
    outputs: [
      { name: "amount0", internalType: "uint128", type: "uint128" },
      { name: "amount1", internalType: "uint128", type: "uint128" },
    ],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "recipient", internalType: "address", type: "address" },
      { name: "amount0Requested", internalType: "uint128", type: "uint128" },
      { name: "amount1Requested", internalType: "uint128", type: "uint128" },
    ],
    name: "collectProtocol",
    outputs: [
      { name: "amount0", internalType: "uint128", type: "uint128" },
      { name: "amount1", internalType: "uint128", type: "uint128" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "factory",
    outputs: [{ name: "", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "fee",
    outputs: [{ name: "", internalType: "uint24", type: "uint24" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "feeGrowthGlobal0X128",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "feeGrowthGlobal1X128",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "recipient", internalType: "address", type: "address" },
      { name: "amount0", internalType: "uint256", type: "uint256" },
      { name: "amount1", internalType: "uint256", type: "uint256" },
      { name: "data", internalType: "bytes", type: "bytes" },
    ],
    name: "flash",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      {
        name: "observationCardinalityNext",
        internalType: "uint16",
        type: "uint16",
      },
    ],
    name: "increaseObservationCardinalityNext",
    outputs: [],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "sqrtPriceX96", internalType: "uint160", type: "uint160" },
    ],
    name: "initialize",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "liquidity",
    outputs: [{ name: "", internalType: "uint128", type: "uint128" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "maxLiquidityPerTick",
    outputs: [{ name: "", internalType: "uint128", type: "uint128" }],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "recipient", internalType: "address", type: "address" },
      { name: "tickLower", internalType: "int24", type: "int24" },
      { name: "tickUpper", internalType: "int24", type: "int24" },
      { name: "amount", internalType: "uint128", type: "uint128" },
      { name: "data", internalType: "bytes", type: "bytes" },
    ],
    name: "mint",
    outputs: [
      { name: "amount0", internalType: "uint256", type: "uint256" },
      { name: "amount1", internalType: "uint256", type: "uint256" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "uint256", type: "uint256" }],
    name: "observations",
    outputs: [
      { name: "blockTimestamp", internalType: "uint32", type: "uint32" },
      { name: "tickCumulative", internalType: "int56", type: "int56" },
      {
        name: "secondsPerLiquidityCumulativeX128",
        internalType: "uint160",
        type: "uint160",
      },
      { name: "initialized", internalType: "bool", type: "bool" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "secondsAgos", internalType: "uint32[]", type: "uint32[]" },
    ],
    name: "observe",
    outputs: [
      { name: "tickCumulatives", internalType: "int56[]", type: "int56[]" },
      {
        name: "secondsPerLiquidityCumulativeX128s",
        internalType: "uint160[]",
        type: "uint160[]",
      },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "bytes32", type: "bytes32" }],
    name: "positions",
    outputs: [
      { name: "liquidity", internalType: "uint128", type: "uint128" },
      {
        name: "feeGrowthInside0LastX128",
        internalType: "uint256",
        type: "uint256",
      },
      {
        name: "feeGrowthInside1LastX128",
        internalType: "uint256",
        type: "uint256",
      },
      { name: "tokensOwed0", internalType: "uint128", type: "uint128" },
      { name: "tokensOwed1", internalType: "uint128", type: "uint128" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "protocolFees",
    outputs: [
      { name: "token0", internalType: "uint128", type: "uint128" },
      { name: "token1", internalType: "uint128", type: "uint128" },
    ],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "feeProtocol0", internalType: "uint8", type: "uint8" },
      { name: "feeProtocol1", internalType: "uint8", type: "uint8" },
    ],
    name: "setFeeProtocol",
    outputs: [],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "slot0",
    outputs: [
      { name: "sqrtPriceX96", internalType: "uint160", type: "uint160" },
      { name: "tick", internalType: "int24", type: "int24" },
      { name: "observationIndex", internalType: "uint16", type: "uint16" },
      {
        name: "observationCardinality",
        internalType: "uint16",
        type: "uint16",
      },
      {
        name: "observationCardinalityNext",
        internalType: "uint16",
        type: "uint16",
      },
      { name: "feeProtocol", internalType: "uint8", type: "uint8" },
      { name: "unlocked", internalType: "bool", type: "bool" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "tickLower", internalType: "int24", type: "int24" },
      { name: "tickUpper", internalType: "int24", type: "int24" },
    ],
    name: "snapshotCumulativesInside",
    outputs: [
      { name: "tickCumulativeInside", internalType: "int56", type: "int56" },
      {
        name: "secondsPerLiquidityInsideX128",
        internalType: "uint160",
        type: "uint160",
      },
      { name: "secondsInside", internalType: "uint32", type: "uint32" },
    ],
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "recipient", internalType: "address", type: "address" },
      { name: "zeroForOne", internalType: "bool", type: "bool" },
      { name: "amountSpecified", internalType: "int256", type: "int256" },
      { name: "sqrtPriceLimitX96", internalType: "uint160", type: "uint160" },
      { name: "data", internalType: "bytes", type: "bytes" },
    ],
    name: "swap",
    outputs: [
      { name: "amount0", internalType: "int256", type: "int256" },
      { name: "amount1", internalType: "int256", type: "int256" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "int16", type: "int16" }],
    name: "tickBitmap",
    outputs: [{ name: "", internalType: "uint256", type: "uint256" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "tickSpacing",
    outputs: [{ name: "", internalType: "int24", type: "int24" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [{ name: "", internalType: "int24", type: "int24" }],
    name: "ticks",
    outputs: [
      { name: "liquidityGross", internalType: "uint128", type: "uint128" },
      { name: "liquidityNet", internalType: "int128", type: "int128" },
      {
        name: "feeGrowthOutside0X128",
        internalType: "uint256",
        type: "uint256",
      },
      {
        name: "feeGrowthOutside1X128",
        internalType: "uint256",
        type: "uint256",
      },
      { name: "tickCumulativeOutside", internalType: "int56", type: "int56" },
      {
        name: "secondsPerLiquidityOutsideX128",
        internalType: "uint160",
        type: "uint160",
      },
      { name: "secondsOutside", internalType: "uint32", type: "uint32" },
      { name: "initialized", internalType: "bool", type: "bool" },
    ],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "token0",
    outputs: [{ name: "", internalType: "address", type: "address" }],
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "token1",
    outputs: [{ name: "", internalType: "address", type: "address" }],
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "owner",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "tickLower",
        internalType: "int24",
        type: "int24",
        indexed: true,
      },
      {
        name: "tickUpper",
        internalType: "int24",
        type: "int24",
        indexed: true,
      },
      {
        name: "amount",
        internalType: "uint128",
        type: "uint128",
        indexed: false,
      },
      {
        name: "amount0",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
      {
        name: "amount1",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "Burn",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "owner",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "recipient",
        internalType: "address",
        type: "address",
        indexed: false,
      },
      {
        name: "tickLower",
        internalType: "int24",
        type: "int24",
        indexed: true,
      },
      {
        name: "tickUpper",
        internalType: "int24",
        type: "int24",
        indexed: true,
      },
      {
        name: "amount0",
        internalType: "uint128",
        type: "uint128",
        indexed: false,
      },
      {
        name: "amount1",
        internalType: "uint128",
        type: "uint128",
        indexed: false,
      },
    ],
    name: "Collect",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "sender",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "recipient",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "amount0",
        internalType: "uint128",
        type: "uint128",
        indexed: false,
      },
      {
        name: "amount1",
        internalType: "uint128",
        type: "uint128",
        indexed: false,
      },
    ],
    name: "CollectProtocol",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "sender",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "recipient",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "amount0",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
      {
        name: "amount1",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
      {
        name: "paid0",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
      {
        name: "paid1",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "Flash",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "observationCardinalityNextOld",
        internalType: "uint16",
        type: "uint16",
        indexed: false,
      },
      {
        name: "observationCardinalityNextNew",
        internalType: "uint16",
        type: "uint16",
        indexed: false,
      },
    ],
    name: "IncreaseObservationCardinalityNext",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "sqrtPriceX96",
        internalType: "uint160",
        type: "uint160",
        indexed: false,
      },
      { name: "tick", internalType: "int24", type: "int24", indexed: false },
    ],
    name: "Initialize",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "sender",
        internalType: "address",
        type: "address",
        indexed: false,
      },
      {
        name: "owner",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "tickLower",
        internalType: "int24",
        type: "int24",
        indexed: true,
      },
      {
        name: "tickUpper",
        internalType: "int24",
        type: "int24",
        indexed: true,
      },
      {
        name: "amount",
        internalType: "uint128",
        type: "uint128",
        indexed: false,
      },
      {
        name: "amount0",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
      {
        name: "amount1",
        internalType: "uint256",
        type: "uint256",
        indexed: false,
      },
    ],
    name: "Mint",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "feeProtocol0Old",
        internalType: "uint8",
        type: "uint8",
        indexed: false,
      },
      {
        name: "feeProtocol1Old",
        internalType: "uint8",
        type: "uint8",
        indexed: false,
      },
      {
        name: "feeProtocol0New",
        internalType: "uint8",
        type: "uint8",
        indexed: false,
      },
      {
        name: "feeProtocol1New",
        internalType: "uint8",
        type: "uint8",
        indexed: false,
      },
    ],
    name: "SetFeeProtocol",
  },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "sender",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "recipient",
        internalType: "address",
        type: "address",
        indexed: true,
      },
      {
        name: "amount0",
        internalType: "int256",
        type: "int256",
        indexed: false,
      },
      {
        name: "amount1",
        internalType: "int256",
        type: "int256",
        indexed: false,
      },
      {
        name: "sqrtPriceX96",
        internalType: "uint160",
        type: "uint160",
        indexed: false,
      },
      {
        name: "liquidity",
        internalType: "uint128",
        type: "uint128",
        indexed: false,
      },
      { name: "tick", internalType: "int24", type: "int24", indexed: false },
    ],
    name: "Swap",
  },
  { type: "error", inputs: [], name: "AI" },
  { type: "error", inputs: [], name: "AS" },
  { type: "error", inputs: [], name: "F0" },
  { type: "error", inputs: [], name: "F1" },
  { type: "error", inputs: [], name: "I" },
  { type: "error", inputs: [], name: "IIA" },
  { type: "error", inputs: [], name: "L" },
  { type: "error", inputs: [], name: "LO" },
  { type: "error", inputs: [], name: "LOK" },
  { type: "error", inputs: [], name: "M0" },
  { type: "error", inputs: [], name: "M1" },
  { type: "error", inputs: [], name: "NP" },
  { type: "error", inputs: [], name: "OLD" },
  { type: "error", inputs: [], name: "R" },
  { type: "error", inputs: [], name: "T" },
  { type: "error", inputs: [], name: "TF" },
  { type: "error", inputs: [], name: "TLM" },
  { type: "error", inputs: [], name: "TLU" },
  { type: "error", inputs: [], name: "TUM" },
] as const;
