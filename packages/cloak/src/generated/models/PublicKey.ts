/* tslint:disable */
/* eslint-disable */
/**
 * Cloak Key Management API
 * Cloak provides a simple key management API for BN254 key pairs. It allows users to create a key pair where the private key will only be revealed after a certain time. The time is determined by the conclusion of an auction that the key is mapped to based on observations of blockchain events.
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
/**
 * Object representing a BN254 public key
 * @export
 * @interface PublicKey
 */
export interface PublicKey {
  /**
   * The x coordinate of the public key
   * @type {string}
   * @memberof PublicKey
   */
  x?: string;
  /**
   * The y coordinate of the public key
   * @type {string}
   * @memberof PublicKey
   */
  y?: string;
}

/**
 * Check if a given object implements the PublicKey interface.
 */
export function instanceOfPublicKey(value: object): boolean {
  let isInstance = true;

  return isInstance;
}

export function PublicKeyFromJSON(json: any): PublicKey {
  return PublicKeyFromJSONTyped(json, false);
}

export function PublicKeyFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): PublicKey {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    x: !exists(json, "x") ? undefined : json["x"],
    y: !exists(json, "y") ? undefined : json["y"],
  };
}

export function PublicKeyToJSON(value?: PublicKey | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    x: value.x,
    y: value.y,
  };
}
