/* tslint:disable */
/* eslint-disable */
/**
 * Cloak Key Management API
 * Cloak provides a simple key management API for BN254 key pairs. It allows users to create a key pair where the private key will only be revealed after a certain time. The time is determined by the conclusion of an auction that the key is mapped to based on observations of blockchain events.
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
/**
 * Data required to encrypt a bid
 * @export
 * @interface EncryptRequest
 */
export interface EncryptRequest {
  /**
   * The bid amount in, used to calculate an encryption salt
   * @type {string}
   * @memberof EncryptRequest
   */
  amount?: string;
  /**
   * The bid amount out to encrypt
   * @type {string}
   * @memberof EncryptRequest
   */
  amountOut?: string;
  /**
   * The bidder's address
   * @type {string}
   * @memberof EncryptRequest
   */
  bidder?: string;
}

/**
 * Check if a given object implements the EncryptRequest interface.
 */
export function instanceOfEncryptRequest(value: object): boolean {
  let isInstance = true;

  return isInstance;
}

export function EncryptRequestFromJSON(json: any): EncryptRequest {
  return EncryptRequestFromJSONTyped(json, false);
}

export function EncryptRequestFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): EncryptRequest {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    amount: !exists(json, "amount") ? undefined : json["amount"],
    amountOut: !exists(json, "amount_out") ? undefined : json["amount_out"],
    bidder: !exists(json, "bidder") ? undefined : json["bidder"],
  };
}

export function EncryptRequestToJSON(value?: EncryptRequest | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    amount: value.amount,
    amount_out: value.amountOut,
    bidder: value.bidder,
  };
}
