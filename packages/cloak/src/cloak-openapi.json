{
  "openapi": "3.0.0",
  "info": {
    "version": "0.1.0",
    "title": "Cloak Key Management API",
    "description": "Cloak provides a simple key management API for BN254 key pairs. It allows users to create a key pair where the private key will only be revealed after a certain time. The time is determined by the conclusion of an auction that the key is mapped to based on observations of blockchain events."
  },
  "servers": [
    {
      "description": "Local",
      "url": "http://localhost:8080"
    },
    {
      "description": "Testnet",
      "url": "https://api-testnet-v3.up.railway.app"
    }
  ],
  "tags": [
    {
      "name": "Keys",
      "description": "Routes for creating keys and retrieving them when revealed"
    },
    {
      "name": "Configs",
      "description": "Routes for viewing supported configurations"
    }
  ],
  "paths": {
    "/new_key_pair": {
      "post": {
        "summary": "Create a new BN254 key pair. Returns the public key coordinates.",
        "tags": ["Keys"],
        "responses": {
          "200": {
            "description": "Key pair created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicKey"
                }
              }
            }
          },
          "500": {
            "description": "Failed to generate key pair or insert it into the database."
          }
        }
      }
    },
    "/public_key/{lot_id}": {
      "parameters": [
        {
          "name": "x-chain-id",
          "in": "header",
          "description": "The ID of a chain the auction is on",
          "schema": {
            "type": "integer"
          },
          "required": true
        },
        {
          "name": "x-auction-house",
          "in": "header",
          "description": "The address of the auction house contract the auction is on",
          "schema": {
            "type": "string"
          },
          "required": true
        }
      ],
      "get": {
        "summary": "Retrieve the public key for a given lot ID.",
        "tags": ["Keys"],
        "parameters": [
          {
            "name": "lot_id",
            "in": "path",
            "description": "The lot ID to retrive the public key for",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Public key retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicKey"
                }
              }
            }
          },
          "500": {
            "description": "Failed to retrieve public key from the database. May indicate that the key for the lot is not stored in the database."
          }
        }
      }
    },
    "/private_key/{lot_id}": {
      "parameters": [
        {
          "name": "x-chain-id",
          "in": "header",
          "description": "The ID of a chain the auction is on",
          "schema": {
            "type": "integer"
          },
          "required": true
        },
        {
          "name": "x-auction-house",
          "in": "header",
          "description": "The address of the auction house contract the auction is on",
          "schema": {
            "type": "string"
          },
          "required": true
        }
      ],
      "get": {
        "summary": "Retrieve the private key for a given lot ID. The private key will only be revealed after the auction for the lot has concluded. If an auction is cancelled, the private key will not be revealed.",
        "tags": ["Keys"],
        "parameters": [
          {
            "name": "lot_id",
            "in": "path",
            "description": "The lot ID to retrive the private key for",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Private key retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "description": "The private key exponent for the BN254 key pair",
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Failed to retrieve private key from the database. May indicate that the key for the lot is not stored in the database or that the key cannot be revealed yet."
          }
        }
      }
    },
    "/encrypt/{lot_id}": {
      "parameters": [
        {
          "name": "x-chain-id",
          "in": "header",
          "description": "The ID of a chain the auction is on",
          "schema": {
            "type": "integer"
          },
          "required": true
        },
        {
          "name": "x-auction-house",
          "in": "header",
          "description": "The address of the auction house contract the auction is on",
          "schema": {
            "type": "string"
          },
          "required": true
        }
      ],
      "post": {
        "summary": "Encrypt a bid for a given lot ID. The bid will be encrypted using the public key for the lot and a randomized seed.",
        "tags": ["Keys"],
        "parameters": [
          {
            "name": "lot_id",
            "in": "path",
            "description": "The lot ID to encrypt the bid for",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "The bid amount to encrypt",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EncryptRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/EncryptResponse"
          },
          "500": {
            "description": "Failed to encrypt bid. May indicate that the key for the lot is not stored in the database or that the key cannot be revealed yet."
          }
        }
      }
    },
    "/hints/{lot_id}/{num}": {
      "parameters": [
        {
          "name": "x-chain-id",
          "in": "header",
          "description": "The ID of a chain the auction is on",
          "schema": {
            "type": "integer"
          },
          "required": true
        },
        {
          "name": "x-auction-house",
          "in": "header",
          "description": "The address of the auction house contract the auction is on",
          "schema": {
            "type": "string"
          },
          "required": true
        }
      ],
      "get": {
        "summary": "Retrieve optimal decrypts for the next N bids to be decrypted on the a given lot ID. Assumes that the key information for the auction was created by the service.",
        "tags": ["Keys"],
        "parameters": [
          {
            "name": "lot_id",
            "in": "path",
            "description": "The lot ID to retrive hints for",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "num",
            "in": "path",
            "description": "The number of hints to retrieve",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/DecryptHintsResponse"
          },
          "500": {
            "description": "Failed to retrieve decrypt hints for the given lot ID."
          }
        }
      }
    },
    "/hints/{lot_id}/{num}/external": {
      "parameters": [
        {
          "name": "x-chain-id",
          "in": "header",
          "description": "The ID of a chain the auction is on",
          "schema": {
            "type": "integer"
          },
          "required": true
        },
        {
          "name": "x-auction-house",
          "in": "header",
          "description": "The address of the auction house contract the auction is on",
          "schema": {
            "type": "string"
          },
          "required": true
        }
      ],
      "get": {
        "summary": "Retrieve optimal decrypts for the next N bids to be decrypted on the a given lot ID. Works for any lot ID, assuming the private key for the auction has been submitted to the contract.",
        "tags": ["Keys"],
        "parameters": [
          {
            "name": "lot_id",
            "in": "path",
            "description": "The lot ID to retrive hints for",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "num",
            "in": "path",
            "description": "The number of hints to retrieve",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/DecryptHintsResponse"
          },
          "500": {
            "description": "Failed to retrieve decrypt hints for the given lot ID."
          }
        }
      }
    },
    "/configs": {
      "get": {
        "summary": "Gets all chain configurations supported by the API.",
        "tags": ["Configs"],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ConfigArrayResponse"
          },
          "401": {
            "description": "Unauthorized."
          },
          "500": {
            "description": "Failed to get Configs or failed to serialize response."
          }
        }
      }
    },
    "/configs/chain/{chain_id}": {
      "get": {
        "summary": "Gets all supported configurations for the specified chain.",
        "tags": ["Configs"],
        "parameters": [
          {
            "name": "chain_id",
            "in": "path",
            "description": "The chain ID to retrive the configurations for",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ConfigArrayResponse"
          },
          "401": {
            "description": "Unauthorized."
          },
          "500": {
            "description": "Failed to get Configs or failed to serialize response."
          }
        }
      }
    },
    "/configs/auction_modules": {
      "parameters": [
        {
          "name": "x-chain-id",
          "in": "header",
          "description": "The ID of a chain",
          "schema": {
            "type": "integer"
          },
          "required": true
        },
        {
          "name": "x-auction-house",
          "in": "header",
          "description": "The address of the auction house contract the auction is on",
          "schema": {
            "type": "string"
          },
          "required": true
        }
      ],
      "get": {
        "summary": "Gets the supported auction modules for the provided configuration.",
        "tags": ["Configs"],
        "responses": {
          "200": {
            "description": "The supported auction modules for the provided configuration.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "description": "Auction Module Veecode.",
                    "type": "string"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Failed to get auction modules or failed to serialize response."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Config": {
        "description": "An API service Config object",
        "type": "object",
        "properties": {
          "chain_id": {
            "description": "The Config's chain_id",
            "type": "integer"
          },
          "auction_house": {
            "description": "The Config's Auction House contract address",
            "type": "string"
          }
        }
      },
      "EncryptRequest": {
        "description": "Data required to encrypt a bid",
        "type": "object",
        "properties": {
          "amount": {
            "description": "The bid amount in, used to calculate an encryption salt",
            "type": "string"
          },
          "amount_out": {
            "description": "The bid amount out to encrypt",
            "type": "string"
          },
          "bidder": {
            "description": "The bidder's address",
            "type": "string"
          }
        }
      },
      "PublicKey": {
        "description": "Object representing a BN254 public key",
        "type": "object",
        "properties": {
          "x": {
            "description": "The x coordinate of the public key",
            "type": "string"
          },
          "y": {
            "description": "The y coordinate of the public key",
            "type": "string"
          }
        }
      }
    },
    "responses": {
      "ConfigArrayResponse": {
        "description": "An array containing Config records.",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Config"
              }
            }
          }
        }
      },
      "DecryptHintsResponse": {
        "description": "An array containing decrypt hints for the given lot ID.",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "description": "The key which the decrypted bid should be inserted after. A 32-byte value provided as a hex string.",
                "type": "string"
              }
            }
          }
        }
      },
      "EncryptResponse": {
        "description": "Bid encrypted successfully",
        "content": {
          "application/json": {
            "schema": {
              "description": "Ciphertext and bid public key",
              "type": "object",
              "properties": {
                "ciphertext": {
                  "description": "The encrypted amount out",
                  "type": "string"
                },
                "x": {
                  "description": "The x coordinate of the public key",
                  "type": "string"
                },
                "y": {
                  "description": "The y coordinate of the public key",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  }
}
